ADHOC 1204 24 March 2015
1

Ad Hoc Networks xxx (2015) xxx–xxx
Contents lists available at ScienceDirect
Ad Hoc Networks

No. of Pages 13, Model 3G

journal homepage: www.elsevier.com/locate/adhoc

6 7

3 How to choose an experimentation platform for wireless sensor 4 networks? A survey on static and mobile wireless sensor 5 network experimentation facilities

8 Anne-Sophie Tonneau, Nathalie Mitton, Julien Vandaele ⇑

9

Inria Lille – Nord Europe, France

10
article info

12 25

13

Article history:

14

Received 5 September 2014

15

Received in revised form 16 February 2015

16

Accepted 2 March 2015

17

Available online xxxx

18

Keywords:

19

Internet of Things

20

Wireless sensor networks

21

Testbed

22

Experimentation platform

23

Mobility

24

abstract

With the development of new technologies, these last years have witnessed the emergence 26

of a new paradigm: the Internet of Things (IoT) and of the physical world. We are now able 27

to communicate and interact with our surrounding environment through the use of multi- 28

ple tiny sensors, RFID technologies or small wireless robots. This allows a set of new appli- 29

cations and usages to be envisioned ranging from logistic and traceability purposes to 30

emergency and rescue operations going through the monitoring of volcanos or forest ﬁres. 31

However, all this comes with several technical and scientiﬁc issues like how to ensure the 32

reliability of wireless communications in disturbed environments, how to manage efﬁ- 33

ciently the low resources (energy, memory, etc.) or how to set a safe and sustainable (both 34

hardware and software) platform maintenance. All these issues are addressed by research- 35

ers all around the world but solutions designed for IoT need to face real experimentations 36

to be validated. To ease such experimentations for IoT, several experimental testbeds have 37

been deployed offering diverse and heterogeneous services and tools. In this article, we 38

study the different requirements and features such facilities should offer. We survey the 39

different experimental facilities currently available for the community, describe their char- 40

acteristics. In particular, we detail the different hardware used for sensor networks and 41

robot platforms and the scope of services the different facilities offer with a speciﬁc focus 42

on testbeds which enable experimentations with mobility. We expect this survey assist a 43

potential user to easily choose the one to use regarding his own needs. Finally, we identify 44

existing gaps and difﬁculties and investigate new directions for such facilities.

45

Ó 2015 Elsevier B.V. All rights reserved. 46

47

49
50 1. Introduction

51

The Internet of Things (IoT) results from the combina-

52 tion of technological progresses and the new habits

53 humans have developed facing it. By means of recent

54 technological advances in the wireless, Internet and

⇑ Corresponding author.
E-mail addresses: Anne-Sophie.Tonneau@inria.fr (A.-S. Tonneau), Nathalie.Mitton@inria.fr (N. Mitton), Julien.Vandaele@inria.fr (J. Vandaele).

48

micro-electromechanical ﬁelds, we are now able to com- 55

municate and interact with our surrounding environment 56

through the use of multiple tiny sensors, RFID technologies 57

or small wireless robots. This allows a set of new applica- 58

tions and usages to be envisioned ranging from logistic 59

and traceability purposes to emergency and rescue opera- 60

tions going through the monitoring of volcanos or forest 61

ﬁres. The communication establishment between (wire- 62

less) heterogeneous objects, without requiring any 63

human-to-human nor human-to-device interaction, is a 64

key aspect of the Internet of Things concept.

65

http://dx.doi.org/10.1016/j.adhoc.2015.03.002 1570-8705/Ó 2015 Elsevier B.V. All rights reserved.

Please cite this article in press as: A.-S. Tonneau et al., How to choose an experimentation platform for wireless sensor networks? A survey on static and mobile wireless sensor network experimentation facilities, Ad Hoc Netw. (2015), http://dx.doi.org/10.1016/ j.adhoc.2015.03.002

ADHOC 1204
24 March 2015
2

A.-S. Tonneau et al. / Ad Hoc Networks xxx (2015) xxx–xxx

No. of Pages 13, Model 3G

66

Nowadays, technologies have improved, becoming

67 more complex and more efﬁcient, and new technological

68 challenges have emerged. The applications developed on

69 top of these technologies need to be tested and improved

70 before being exposed to the reality. Efﬁcient simulation

71 tools are useful to help in the design of IoT applications,

72 since they offer a quick and ﬂexible way to experiment

73 the behaviour of an application, a protocol, and in a

74 repeatable manner. But simulation leads to assumptions

75 on several parameters of the environment, that is a cause

76 of uncertainty. IoT applications and wireless propagation

77 are seriously inﬂuenced by unpredictable events

78 and physical characteristics that are very difﬁcult to

79 simulate.

80

There is a strong need to deploy applications in a real-

81 life like context, therefore conducting experiments on real

82 hardware, at large-scale, and to beneﬁt from appropriate

83 tools for experimentation management. Indeed, the recent

84 technological advances have driven to cost reduction and

85 increased availability of the hardware needed for such

86 experimentation, thus allowing the deployment of large-

87 scale testbeds. But experimenting on large scale requires

88 a lot of hardware and is a fastidious and time-consuming

89 task. Therefore, several testbed platforms have been

90 deployed all around the world to allow faster experi-

91 mentations, with various sizes, hardware, topologies, and

92 degrees of ﬂexibility. Some facilities focus on large-scale

93 deployment, others on mobility. Some are quite spe-

94 cialised, others more ﬂexible, allowing experimentation

95 of purely technical issues as well as higher level

96 applications.

97

This paper ﬁrst deﬁnes the basic requirements a facil-

98 ity should address and the challenges faced up for such

99 deployments. Then, it browses the existing available

100 wireless sensor network testbeds, describing them with

101 regards to those requirements. Of course, we do not

102 pretend to be exhaustive since the number of testbed

103 initiatives in the world is huge. We choose to focus on

104 the currently most meaningful and active testbeds.

105 Likewise, some additional functionalities of the men-

106 tioned testbeds may have been omitted for the sake of

107 clarity and coherency. The interested reader is invited

108 to refer to the cited papers for further information. This

109 paper especially highlights wireless sensor network test-

110 beds, with a focus on the mobility in those testbeds, and

111 brings an up-to-date overview of the state-of-the-art. We

112 expect this survey constitute a tool to assist an experi-

113 menter to ﬁnd the adequate facility that better matches

114 its speciﬁc needs.

115

The remainder of the paper is organised as follows.

116 Section 2 deﬁnes the different requirements for an IoT

117 experimental testbed and sets the terminology used later

118 on in the paper. Section 3 describes the existing facilities

119 and discusses their main purposes and functionalities.

120 Some comparisons and highlights on strengths and weak-

121 nesses of each platform are provided, highlighting what

122 they enable or not. Finally, Section 4 broaches the expecta-

123 tions from a user point of view of the next generation of

124 testbeds and the attempts performed to fulﬁll the future

125 requirements.

2. Functionalities and related challenges

126

Because of the diversity of wireless networking issues 127

and applications, there exists a large variety of wireless 128

sensor network (WSN) testbeds, that can be either spe- 129

cialised, or more ﬂexible, supporting various network 130

topologies and network layer protocol options. In any case, 131

facilities must enable the design of as much realistic IoT 132

experimentations as possible, in terms of scale, behaviour, 133

functionalities, environment and constraints and offer a set 134

of speciﬁc tools.

135

We have identiﬁed several services and functionalities a 136

testbed platform is likely to offer depending on the tar- 137

geted applications and protocols. They are gathered into 138

ﬁve main categories summed up in Fig. 1: (1) 139

Experimentation tools, (2) hardware features, (3) mainte- 140

nance, (4) mobility enabling and (5) extra features, and 141

described in more details in the following.

142

2.1. Experimentation

143

From the testbed user perspective, it is essential to 144

beneﬁt from assisting tools all along the lifetime of an 145

experimentation, before, during and after running it, from 146

the design to the result analysis. The services and tools 147

offered to design and interact with the experiment should 148

be easy and intuitive to take in hand.

149

2.1.1. Before an experimentation

150

Simulation: When designing a wireless sensor network 151

application, emulation and simulation are essential steps 152

ahead of experimentation to eliminate design issues. 153

Some efﬁcient simulation and emulation tools exist and 154

are widely used, like WSNet,1 NS-2/3,2 and Wsim.3

155

However, simulation tools suffer from a lack of accuracy 156

in capturing realistic environmental conditions, like radio 157

propagation. Some wireless characteristics cannot be mod- 158

elled with precision. Therefore, most of the wireless sensor 159

network testbeds focus on real-world experimentation, 160

since there is a vital need of facing up to the reality in that 161

ﬁeld. Some testbeds include simulation tools to alleviate 162

the design of experiments, and to verify the consistency 163

of a protocol or algorithm, before putting it into practice 164

by using the testbed hardware. However, an interesting 165

approach, detailed later in Section 3.1.3, is to combine sim- 166

ulation, emulation and physical elements together into a 167

single testbed, in order to gain ﬂexibility on the scale and 168

the offered conﬁgurations and to lower the trade-off 169

between repeatability, reliability and scalability.

170

Experimentation speciﬁcation: Speciﬁcation is the ﬁrst 171

step for conducting an experiment, e.g. the selection of 172

the adequate resources in terms of number, type or other 173

properties, but also the speciﬁcation of the programs to 174

upload, and the data to be collected. The way to set up 175

an experimentation and validate the conﬁguration is an 176

important feature of an IoT testbed.

177

1 http://wsnet.gforge.inria.fr. 2 http://www.nsnam.org. 3 http://wsim.gforge.inria.fr.

Please cite this article in press as: A.-S. Tonneau et al., How to choose an experimentation platform for wireless sensor networks? A survey on static and mobile wireless sensor network experimentation facilities, Ad Hoc Netw. (2015), http://dx.doi.org/10.1016/ j.adhoc.2015.03.002

ADHOC 1204 24 March 2015

A.-S. Tonneau et al. / Ad Hoc Networks xxx (2015) xxx–xxx

No. of Pages 13, Model 3G
3

Fig. 1. Summary of the considered features for the survey.

178

During the speciﬁcation step, and all along the experi-

179 ment lifetime, the user should be provided with tools for

180 interacting with the nodes, and its requested job. Device

181 programming step is likely to become a tricky task when

182 the application has to be deployed remotely on possible

183 heterogeneous devices, with diverse execution environ-

184 ments. Users are offered the possibility to develop their

185 own client applications on top of the web services API,

186 using any programming language. Nevertheless security

187 and availability questions have to be taken into account

188 because of the exposure of the testbed resources over the

189 Internet.

190 2.1.2. During an experimentation

191

Testbeds provide various interfaces to interact with the

192 devices, and with the ongoing experiment in order to fol-

193 low its progress, adjust parameters or debug. While most

194 of the existing testbeds are accessible via web interfaces,

195 only a few provide ssh front-end to access resources.

196 Some testbeds also expose their resources and functionali-

197 ties as web services.

198

During an experiment, it is also necessary to facilitate

199 the access to sensors and to network-related metrics, such

200 as the end-to-end delay, throughput or overhead. Some

201 platforms offer additional tools like the possibility to moni-

202 tor their energy consumption.

203 2.1.3. After an experimentation

204

Each testbed proposes different ways to collect, store

205 and analyse data. We will see the different visualisation

206 means and the different metrics every testbed offers to

207 interact with the code and device resources on line.

208

Repeatability: There is a need, in order to validate

209 results, to be able to repeat experiments within and across

210 different testbeds. For instance, to analyse the inﬂuence of

211 one speciﬁc parameter in an IoT application, an experi-

212 menter needs to run several experiments with this speciﬁc

213 parameter varying. Then he/she is able to analyse the con-

214 sequences on the results, to compare and draw conclu-

215 sions. As for simulation, users have results available,

216 consisting of data measurements and traces. Analysing

217 these results a posteriori and drawing a conclusion from

218 it cannot be reliably performed if the experiment had been

run only once. It is essential to be able to reproduce it in 219

the same conditions, to dispose of more representative 220

results. Even so, it is quite challenging to make an experi- 221

ment entirely repeatable, especially in wireless environ- 222

ments. Some real-world constraints are not fully 223

controllable, such as local radio interference due to infras- 224

tructure, human activity, and possibly other experiments. 225

At the experiment level, repeatability can be achieved 226

by standardising the experiment speciﬁcation and record- 227

ing it, as well as the ﬁrmwares to upload on the nodes. 228

Even if the total real-world conditions replication is not 229

possible, this repeatability requirement can be partially 230

overcome by keeping the experimenter updated about 231

the environmental conditions, and collecting traces, to help 232

him/her to contextualise his/her results. For instance, radio 233

interference data (possibly representing another running 234

experiment) can be provided.

235

2.2. Hardware features

236

The hardware constitutes one of the main concerns of 237

the user, since the goal of an experimental platform is to 238

facilitate access and testing on real equipment, under 239

realistic conditions and constraints. The hardware used 240

has to match as much as possible the needs of targeted 241

applications. This section describes the different features 242

that can qualify the hardware offered by every platform 243

in terms of scale and device.

244

2.2.1. Heterogeneity

245

Although experimentation of sensing applications (for 246

monitoring for instance) do not necessarily need different 247

kinds of devices, in general the Internet of Things concept 248

relies on the key feature of heterogeneity, meaning that 249

devices are made from different technologies with various 250

sensing ranges, sensor types, different communication and 251

computation capabilities. Making these heterogeneous 252

devices communicate together is a user and application 253

requirement in many experimentation designs. In 254

response, some testbeds address this heterogeneity cri- 255

teria, some others not. The diversity in devices, coming 256

with diverse drivers, toolchains or operating systems, 257

drives to the need of easy programming and conﬁguration 258

Please cite this article in press as: A.-S. Tonneau et al., How to choose an experimentation platform for wireless sensor networks? A survey on static and mobile wireless sensor network experimentation facilities, Ad Hoc Netw. (2015), http://dx.doi.org/10.1016/ j.adhoc.2015.03.002

ADHOC 1204
24 March 2015
4

A.-S. Tonneau et al. / Ad Hoc Networks xxx (2015) xxx–xxx

No. of Pages 13, Model 3G

259 of these heterogeneous devices. Consequently, means for 260 programming the devices that ﬁll the gap between the user 261 and the remote hardware, like drivers, communication 262 libraries, or operating systems porting, may be provided.

263 2.2.2. Scale

264

Another prominent property of an IoT testbed is the

265 scale, i.e. the number of devices available for experi-

266 mentation. IoT systems and technologies apply on much

267 more than a few dozen of devices. Indeed, users should

268 have the opportunity to run some applications on real

269 hardware at very large-scale, as some technological chal-

270 lenges can only be addressed that way e.g. applications

271 designed for smart cities that imply several hundred of

272 nodes. Building such facilities is now made possible since

273 the hardware cost has decreased. Nevertheless, it comes

274 with constraints like lowering human intervention as

275 much as possible and implementing automated fault man-

276 agement mechanisms. Furthermore, scalability is desirable

277 to easily expand and update hardware, and the possibility

278 to include more recent devices, in a plug-and-play manner.

279 2.2.3. Federation

280

In general, building up large-scale testbed platforms is

281 made possible by multi-site deployments, or by the federa-

282 tion of existing testbeds. In this survey, we distinguish a

283 multi-site testbed from a federation of several testbeds.

284

In a multi-site testbed, i.e. the resources are distributed

285 over different locations, with a unique access point to all

286 the nodes. It is most often the same type of devices

287 deployed to reach a signiﬁcant scale for experimentation.

288

The federation approach allows users to be provided

289 with a large number of devices, to numerous capabilities,

290 while sharing the required management of resources, and

291 to overcome the constraints of space and hardware cost.

292 It can also enlarge experimentation possibilities by

293 federating testbeds in different ﬁelds. In a federation, sev-

294 eral testbeds on different locations are independent and

295 can work alone although there is an additional layer to

296 offer a uniform access. The federation of existing testbeds

297 requires a common framework, a layer built on top of all

298 existing infrastructures, allowing the user to authenticate

299 and reserve resources on every interconnected testbed

300 simultaneously.

301 2.3. Maintenance

302

The testbed maintenance occurs at several frequencies.

303 A daily maintenance needs to be considered to ensure the

304 good functioning of the testbed and experimentation. A

305 more general maintenance is also needed to verify that

306 the hardware is operational and that the software architec-

307 ture still offers appropriated services.

308

To alleviate the maintenance, the testbed design needs

309 to consider to lower as much as possible the human inter-

310 vention for the testbed management, in order to limit the

311 resulting cost of extra human resources involved to pre-

312 vent hardware malfunctioning or even damages and take

313 care of the health of the testbed. In parallel, a constant

314 monitoring of the software is important to prevent from

315 crash and constantly update ﬁrmwares and services.

2.4. Mobility

316

IoT applications, mainly in the smart cities ﬁeld, involve 317

mobile devices that collect information on the environ- 318

ment, or cooperate with each other, which leads to the 319

design and implementation of robotics and automation 320

systems consisting of networked vehicles, sensors and 321

actuators. Regarding the need for experimenting IoT appli- 322

cations on real-world entities, the mobility of the devices 323

becomes an essential feature of IoT testbeds. This topic 324

has received important attention recently. For instance, 325

to experiment applications for area coverage, or protocols 326

allowing to ﬁnd better routes for packets, to enhance data 327

reliability, users need to access and control mobile devices 328

in a testbed environment.

329

2.4.1. Undergone vs controlled mobility

330

Several types of mobility exist: undergone or controlled 331

mobility. We refer to undergone mobility for a device 332

which is embedded on an object/person that cannot be 333

controlled by the device itself. Such undergone mobility 334

can either be non predictive (or partially predictive), in 335

the case for instance of human or animal carriers, or pre- 336

dictive, for example if the devices are carried by public 337

transport, like a bus, which has a predeﬁned and known 338

journey.

339

While mobility offers larger possibilities in terms of 340

applications, handling such a feature and providing ade- 341

quate support for controlling an experiment and exploiting 342

results is a real challenge. Some testbeds have introduced 343

undergone mobility, predictive or not [1,2]. We will also 344

see that some testbeds provide controlled mobility [3], 345

which implies additional constraints in terms of local- 346

isation and charging, and also because a dedicated space 347

could be needed, to avoid sudden obstacles like a person 348

walking around.

349

2.4.2. Autonomous charging & localisation

350

Because of the mobility, potential collisions may hap- 351

pen causing damages to the hardware and interrupting a 352

running experiment prematurely. Therefore, the testbed 353

should autonomously run, with a remote access provided 354

to users that allow them to perform experimentation with- 355

out compromising the safety of the hardware thus the 356

continuity of the experiment. This leads to several material 357

constraints: the robot should be self-rechargeable (and 358

empowers the embedded device at the same time), and 359

able to locate and reach the charging system. 360

Furthermore, mobility requires autonomous localisation 361

and path planning with obstacles avoidance. Therefore, 362

an accurate positioning mechanism is needed to overcome 363

these issues. Section 3.3 describes some existing local- 364

isation solutions.

365

2.4.3. Software management & tools

366

Another important aspect is the design of an experi- 367

mentation that uses mobile devices, which can become a 368

tedious task especially for users who are not robotic 369

experts and who want to integrate basic moving func- 370

tionalities in their experimentations. Therefore, an essen- 371

tial requirement for IoT testbeds that feature mobility is 372

Please cite this article in press as: A.-S. Tonneau et al., How to choose an experimentation platform for wireless sensor networks? A survey on static and mobile wireless sensor network experimentation facilities, Ad Hoc Netw. (2015), http://dx.doi.org/10.1016/ j.adhoc.2015.03.002

ADHOC 1204 24 March 2015

A.-S. Tonneau et al. / Ad Hoc Networks xxx (2015) xxx–xxx

No. of Pages 13, Model 3G
5

373 to ease the implementation of scenarios, and the interac-

374 tions with the hardware. For robot control, there are sev-

375 eral drivers and frameworks that provide services,

376 hardware abstraction, low-level device control, and so on.

377 Some testbeds use these control interfaces, some others

378 have developed their own middleware. Testbeds should

379 provide various mobility models that are ready-made and

380 possibly customizable. Finally, it is paramount, when con-

381 ducting experiments including mobile devices, to dispose

382 of visualisation tools that display the running experiment

383 state, but also past experiment conﬁgurations, like the

384 paths the mobile devices had actually followed, and to

385 ensure repeatability.

386

In that survey, we browse the existing mobile sensor

387 network platforms which offer either undergone mobility,

388 or full control on devices movement. We will see how

389 existing testbeds comply with these requirements.

390 2.5. Extra features

391

There also exist some other valuable features in the sur-

392 veyed testbeds that deserve to be mentioned. We will

393 browse some of them like the possibility to monitor the

394 physical medium and hardware layer. We will also see that

395 some facilities are nomadic.

396 3. Survey of existing testbeds

397

In this section, we discuss how today’s testbeds feature

398 the requirements and address the challenges detailed above.

399 We will compare them in terms of capabilities and features

400 they offer, in accordance with the categories of needs pre-

401 viously described. We survey wireless sensor network test-

402 beds that are technologically well-advanced or widely used,

403 with a focus on mobility for some of them. However, we did

404 not restrict the survey on the publicly and remotely accessi-

405 ble testbeds, since some testbeds provide very interesting

406 features without offering remote access to their resources,

407 but the work of making them available to remote users is

408 still in progress, or leads to issues that have not been over-

409 come yet. Tables 1 and 2 sum up the hardware and key fea-

410 tures of the testbed platforms detailed below.

411 3.1. Experimentation

412 3.1.1. Interaction

413

Nodes selection, conﬁguration storage: Most of the exist-

414 ing testbeds (FIT IoT-LAB, TWIST, Kansei, NetEye,

415 SmartSantander or WISEBED) provide web interfaces for

416 job scheduling, to specify the resources needed, set up

417 and program the nodes to deﬁne their behaviour and the

418 data to be collected. FIT IoT-LAB (IoT-LAB in short in the

419 following) beneﬁts from a well designed system for nodes

420 selection: the nodes can either be physically selected, or

421 user can specify needed properties (location, radio chip,

422 whether nodes are mobile or not, etc.). To store the experi-

423 ment conﬁguration, testbeds generally use XML or JSON

424 ﬁles (FlockLab, ISRobotNet, IoT-LAB). WISEBED goes fur-

425 ther with its own generic XML-based language called

426 WiseML, used for experiment and testbed description, con-

427 ﬁguration, and results storage.

Scheduling system: Most of the testbed platforms are 428

multi-users, thus the possible concurrent reservation 429

requests from several users are in general handled by a 430

ﬁrst-come-ﬁrst-serve approach, meaning that the ﬁrst user 431

submitting an experiment on available resources gets the 432

access (NetEye, IoT-LAB, WISEBED). For instance, IoT- 433

LAB’s scheduling system relies on the open-source OAR 434 tool4 (resource manager & batch scheduler). However, other 435

testbeds remain single-user, like CONET-IT, which is the 436

only mobility-focused testbed that is remotely accessible 437

together with FIT IoT-LAB. Thus, it does not beneﬁt from 438

any scheduling system, and the user has to book the entire 439

testbed for an experiment two weeks in advance.

440

Nodes conﬁguration & programming: To conﬁgure and 441

program the selected nodes for the experimentation, a user 442

may need to log on the testbed’s server. To this purpose 443

TWIST or IoT-LAB provide ssh access to start, stop, reset, 444

update the nodes, and read or write on the serial links. 445

CONET-IT offers a virtual private network to interact with 446

the Integrated Testbed (IT) during the experiment. 447

SmartSantander and WISEBED have developed experi- 448

mentation scripts that consist of a set of command-line 449

scripts to execute basic operations, control and interact 450

with the experiment, automate, repeat experiments, and 451

even programmatically analyse, convert and process out- 452

put from the nodes. In SmartSantander, some nodes called 453

‘‘service nodes’’ (the most battery-constrained nodes), only 454

produce data and can be conﬁgured by the administrators 455

of the testbed, but are not open to be reprogrammed by 456

users. However, users are able to develop new services 457

on top of the data generated by these service nodes.

458

General interaction: For general interaction with the 459

testbed, every testbed provides at least a command-line 460

tool, and more commonly a web-based front-end. 461

Although having been decommissioned, the service frame- 462

work of the very popular WSN testbed MoteLab, (Harvard 463

University) remains a basis for various other testbeds, e.g. 464

INDRIYA. This testbed of the National University of 465

Singapore is considered as an alternative to MoteLab. 466

Using the web interface it has inherited from MoteLab, 467

users can upload, monitor, and control their jobs remotely 468

and in real-time. Regarding the testbeds focused on mobil- 469

ity, the need of an efﬁcient and interactive visualisation 470

tool is crucial. Some testbed platforms have developed 471

their own tools, corresponding to their own needs: 472

CONET-IT’s Integrated Testbed GUI allows the visualisation 473

of the experiment and data log (programming the WSN 474

nodes and robots, graphically setting waypoints to the 475

robots, accessing the camera and laser views, data logging, 476

etc.). Mint-m’s network/experiment management subsys- 477

tem, called MOVIE (Mint-m cOntrol and Visualisation 478

InterfacE) affords a user full interactive control over the 479

testbed as well as real-time visualisation of the testbed 480

activities. For further analysis of an experiment, WISEBED 481

has created WeyesBED, an open-source visualisation tool 482

for WiseML ﬁles, thus allowing interactive visual descrip- 483

tion, and representation of distributed algorithms and pro- 484

tocols. Key-events leading to problematic states or bugs 485

4 http://oar.imag.fr.

Please cite this article in press as: A.-S. Tonneau et al., How to choose an experimentation platform for wireless sensor networks? A survey on static and mobile wireless sensor network experimentation facilities, Ad Hoc Netw. (2015), http://dx.doi.org/10.1016/ j.adhoc.2015.03.002

ADHOC 1204
24 March 2015
6

A.-S. Tonneau et al. / Ad Hoc Networks xxx (2015) xxx–xxx

No. of Pages 13, Model 3G

Table 1 Surveyed WSN testbeds.

Testbed FIT IoT-LAB [2] TWIST [4]
Kansei [5]
NetEye [6] SmartSantander
[1] WISEBED [7] DES-Testbed [8]
FlockLab [9] INDRIYA [10]
W-iLAB.t [11]

Hardware summary

Notes

2728 heterogeneous, speciﬁcally developed motes located in 6 different sites across France 204 motes (102 TmoteSky + 102 eyesIFX) spread across 3 ﬂoors
210 XSM motes: large grid-like structure of motes evenly distributed on tables within a warehouse
130 TelosB motes, indoor
20000 (ﬁxed, mobile & smartphone) sensors located in 4 different countries, indoor and outdoor 750 motes, mainly iSense, MicaZ, and Pacemate, SunSPOT, and TelosB motes 95 nodes: embedded PC board, equipped with up to 3 IEEE 802.11 network cards, and a wireless sensor node 30 observers and 1 server spread across one level of a building at ETH Zurich and the surrounding rooftops 139 TelosB motes spread across 3 ﬂoors
200 Tmote Sky + 60 more powerful nodes in 2 different locations

SensLAB follow-up, repeatable mobility via electric toy trains, energy consumption measurement, multi-site experiments, part of FIT federation Supports ﬂat and hierarchical setups, emulation of dead nodes or nodes addition, cost-effective and open solution which can be reproduced by others Supports various wireless platforms such as Extreme Scale Motes (XSMs), TelosB, Imote2 and Stargates, event injection possible both at GW and mote level Static 3db attenuators are attached to the mote antennas for multi-hop network and different power levels Most advanced testbed in terms of hardware, scale, functionalities offered to the user, mobility via public buses Multi-site and real-life experiments Large federation that includes some SmartSantander testbeds, simulator engines that create virtual testbeds Virtualizer running several virtual machines that recreate the testbed topology and its lossy links 1 mobile DES-Node node using a Roomba 530 Vacuum cleaner robot Sensor node pairing with dedicated hardware for monitoring and simulation Experiment prototyping with TOSSIM simulation environment, webbased interface designed based on Harvard’s MoteLab interface, nodes replacement with Arduino motes Different types of wireless nodes: sensor nodes, Wi-Fi based nodes, sensing platforms, and cognitive radio platforms, uses the Emulab software at is base

Table 2 Surveyed WSN testbeds focused on mobility.

Testbed

Sensors

Robot platforms

Localisation solution

FIT IoT-LAB [2]
CONET-IT [3]
RoombaNet [12]
MOTEL [13] Mint-M [14]
ISRobotNet [15]

3000 static nodes: WSN430, A8, M3 WSN of 21 static nodes: TelosB, MicaZ, Mica2, Iris WSN of 6 static nodes
TelosB, MicaZ, Scatterweb Wireless network node supporting 802.11 interfaces ?

200 robots: wiﬁbots, turtlebots
5 Pioneer 3-ATa + Aspire One ZG5 netbook + Hokuyo 2D Laser + Kinect + Wireless a/b/g/n Bridge 6 Roombab + mobile controller, extension up to 14 robots planned
22 e-puckc + Thymio IId
12 Roomba
4 Pioneer 3-AT + 1 ATRVJre

decentralised, kinect
Vision-based with AMCL, decentralised
Odometry and orientation sensor-based positioning mechanism Vision-based with cameras, centralised Vision-based with cameras, centralised
Vision-based with cameras, centralised

a http://www.mobilerobots.com/ResearchRobots/P3AT.aspx. b http://www.irobot.com/us/learn/home/roomba.aspx. c http://www.e-puck.org. d https://aseba.wikidot.com/en:thymio. e http://www.ing.unibs.it/arl/projects/minerobots_archive/atrv_jr.pdf.

Software
ROS and Player Stage

Remote access
yes, multi user

Player Stage (ROS porting planned)

yes, single user

Notes different pattern motions with obstacle avoidance or total control by user
random motion with obstacle avoidance

Wiselib ported to the sensor node platform
FLEXOR MuRobA
MOVIE (Mint-m cOntrol and Visualization InterfacE) YARP networking software

No, opening to remote users planned No
No
No

2 mobility models: random & semirandom Wiselib extension to support
No communication sensor-robot, software for interactive control, not permanently installed Testbed can operate 24Â7 without human intervention for weeks deployable in a limited physical space (radio signal attenuation), strong simulation tool Fully decentralized use of the resources

486 can potentially be detected thanks to that monitoring, 487 which helps users to achieve an internal insight on the 488 behaviour of their algorithms.

In addition to a web-based front-end, for more 489 advanced and speciﬁc interactions with the testbed, some 490 expose their services via a web services API (WISEBED, 491

Please cite this article in press as: A.-S. Tonneau et al., How to choose an experimentation platform for wireless sensor networks? A survey on static and mobile wireless sensor network experimentation facilities, Ad Hoc Netw. (2015), http://dx.doi.org/10.1016/ j.adhoc.2015.03.002

ADHOC 1204 24 March 2015

A.-S. Tonneau et al. / Ad Hoc Networks xxx (2015) xxx–xxx

No. of Pages 13, Model 3G
7

492 SmartSantander, IoT-LAB). Users are able to develop their

493 own tools, scripts in any programming language that is

494 able to invoke web services. WISEBED even provides a

495 selection of open-source Web- and Desktop Clients, that

496 can be adapted by users for their speciﬁc needs.

497

Data collection & experiment analysis: Finally, data collec-

498 tion and experiment analysis are essential steps of the

499 experimentation process. Most of the time, users can

500 request the nodes during an experimentation, to get mea-

501 surements when needed. But the testbed platforms also

502 record the whole sensing data that users can access upon

503 job completion, for processing and visualisation. IoT-LAB

504 gathers resulting periodic measurements coming from sen-

505 sors into CSV ﬁles. Databases are also used (SmartSantander,

506 INDRIYA and W-iLAB.t), thus enabling persistent storage of

507 observations and measurements, as well as live and historic

508 information. SmartSantander also provides a tool called

509 TMON, a Java-based experimentation environment, allow-

510 ing the visualisation of traces and live results.

511 3.1.2. Repeatability

512

To help users repeat their experiments, most of the test-

513 beds save the experiment description, and propose, like FIT

514 IoT-LAB, to reload the conﬁguration to run it again.

515 SmartSantander and WISEBED made the automated rep-

516 etition possible thanks to experimentation scripts.

517

However, full reproducibility of experimentation is not

518 trivial because of the environmental conditions inconsis-

519 tency. A solution (SmartSantander) is to provide relevant

520 data for repeatability, such as statistics on observed radio

521 interferences that have been gathered over the lifetime of

522 an experiment, to assist users in understanding and con-

523 textualising their results. WISEBED proposes seamless

524 traces replay of an experiment described in WiseML.

525 Finally, Kansei features events injection, enabling the rep-

526 etition of an experiment in the exact same conditions, with

527 emulation of data read by sensors.

528 3.1.3. Simulation

529

Although simulation is not part of the experimentation

530 process, it remains an essential step for prototyping an

531 application. Testbed users are often advised to use a sim-

532 ulator ahead of experimentation (INDRIYA). Especially for

533 testbeds that feature mobility (CONET-IT), simulation (on 534 Gazebo5 or Stage6) is mandatory before experimenting on

535 the testbed.

536

Some testbeds are linked with simulator that permits to

537 deploy the same code both in simulation and experi-

538 mentation, like TWIST: the Cooja-TWIST plugin lets experi-

539 menters use the testbed directly from the Cooja7 simulator,

540 facilitating the code upload and the supervision of the

541 experiment execution remotely. Mint-m’s MOVIE tool also

542 deserves to be mentioned, since it allows the control of

543 hybrid ns-2 simulations run dynamically. It includes func-

544 tionalities like pausing a simulation run at a user-speciﬁed

545 breakpoint, deeply inspecting parameters of the system

5 http://gazebosim.org. 6 http://playerstage.sourceforge.net/?src=stage. 7 https://github.com/contiki-os/contiki/wiki/An-Introduction-to-Cooja.

(internal states, network conditions), and even a rollback 546

mechanism to go back to a previous state of the simulation. 547

Another approach is the emulation of events, character- 548

istics, into the experiment in order to extend hardware 549

capabilities, when some features are not physically sup- 550

ported on the actual nodes. Examples of emulated events 551

(TWIST and FlockLab) are the death of nodes, by energy 552

depletion, or the addition of new nodes, enabling the 553

modiﬁcation of the network topology. Kansei and FIT IoT- 554

LAB testbeds make available the event injection, e.g. sim- 555

ulation of data read by the sensors at large-scale. This 556

can be useful to close the possible hardware gap in a speci- 557

ﬁc experimentation, or even recreate environmental condi- 558

tions in order to repeat an experiment. SmartSantander 559

also allows this virtualization of the sensing capabilities. 560

WISEBED goes further, providing the functionality to cre- 561

ate virtual links between nodes, thus dynamical experi- 562

ment speciﬁcation, composed of physical or virtual nodes 563

and virtual links. These hybrid testbeds can be accessed 564

and controlled by common tools, in a transparent way: 565

the experimenter can access the nodes seamlessly, 566

whether they are physical or simulated. With this aim, 567 WISEBED exposes iWSN8: a web service interface that pro- 568

vides an uniform management access to the hybrid testbed 569

created by the user. Physical, emulated and simulated ele- 570

ments of wireless sensor networks are then mixed together 571

to offer a more ﬂexible testbed for experimentation.

572

3.2. Hardware features

573

3.2.1. Heterogeneity

574

Facilities have deployed a variety of hardware, where 575

motes can be off-the-shelf as well as custom-built for a 576

speciﬁc need.

577

Fig. 2 draws the distribution of motes available on every 578

testbed platform.

579

It is shown that only a few testbeds (NetEye, DES- 580

Testbed) offer a single kind of motes. Most of the testbeds 581 have deployed TelosB9 motes, that integrate a TI MSP430 582

microcontroller, a Chipcon CC2420 radio, as well as the 583

usual light, temperature and humidity sensors.

584

Other testbeds have designed their own motes accord- 585

ingly to their speciﬁc needs. The core of the DES-Testbed 586

is formed by the IEEE 802.11 network, while the wireless 587

sensor nodes, custom MSB-A2 sensor nodes (developed at 588

Freie Universitat Berlin), create a parallel testbed called 589

DES-WSN. This custom sensor node is equipped with a 590

Chipcon CC1100 transceiver as well as temperature and 591

humidity sensors. FIT IoT-LAB has also deployed custom- 592

built motes, based on TI MSP430, and more recently on 593

ARM Cortex M3 and ARM Cortex A8 microcontrollers, more 594

powerful and equipped with other sensors such as 595

accelerometer, magnetometer and gyrometer.

596

Fig. 2 also depicts heterogeneity in most of the testbeds. 597

SmartSantander and WISEBED offer a large variety of 598

devices, since deployment is not only indoor, as for all pre- 599

viously described testbeds, but also outdoor and in vivo. 600

Indeed, SmartSantander offers smart city services, 601

8 http://wisebed.eu/api/documentation/iwsn/current/iwsn-api.pdf. 9 http://telosbsensors.wordpress.com.

Please cite this article in press as: A.-S. Tonneau et al., How to choose an experimentation platform for wireless sensor networks? A survey on static and mobile wireless sensor network experimentation facilities, Ad Hoc Netw. (2015), http://dx.doi.org/10.1016/ j.adhoc.2015.03.002

ADHOC 1204
24 March 2015
8

A.-S. Tonneau et al. / Ad Hoc Networks xxx (2015) xxx–xxx

No. of Pages 13, Model 3G

Fig. 2. Scale and composition of surveyed testbeds; size of circle is proportional to the number of devices.

602 involving the citizens into the experimentation loop. With

603 this aim, IEEE 802.15.4 devices, GPRS modules, and joint

604 RFID tag/QR code labels are deployed both at static

605 locations (streetlights, façades, bus stops) as well as

606 on-board on mobile vehicles (buses, taxis). WISEBED

607 provides as many heterogeneous devices, and a wide range

608 of sensor types, ranging from most commonly used

609 temperature sensors to more sophisticated Anisotropic

610 Magnetoresistance (AMR) sensors.

611

One of the concerns of a testbed user is the execution

612 environment on the motes. Some testbeds impose an

613 operating system: on TWIST, NetEye as well as INDRIYA,

614 the nodes run TinyOS only. However, FIT IoT-LAB,

615 SmartSantander and WISEBED offer to users more freedom

616 in the development of their applications, with no manda-

617 tory operating system. Indeed, FIT IoT-LAB provides dri-

618 vers, MAC layers, communication libraries, and OS

619 porting for Contiki, FreeRTOS, TinyOS, and RIOT. We can 620 ﬁnally mention Wiselib,10 an algorithm library for sensor

621 networks maintained by the WISEBED team. It contains vari-

622 ous algorithms classes that can be compiled for several sen-

623 sor platforms (iSense, Contiki) or the sensor network

624 simulator Shawn, and helps users in the design of

experimentations that involve motes amongst the seven dif- 625

ferent hardware platforms provided by WISEBED.

626

3.2.2. Scale

627

Fig. 2 also gives at a glance an idea on the scale of every 628

testbed platform. Actually, the fact is that most of the sin- 629

gle location testbeds (e.g. INDRIYA, TWIST) feature a lim- 630

ited number of nodes (up to 200 nodes), most likely due 631

to cost and space constraints. Nevertheless, Kansei suc- 632

ceeded to deploy about 700 motes in a single location, an 633

indoor grid-like structure of motes evenly distributed on 634

tables within a warehouse. However, the largest testbeds 635

are the distributed ones, such as WISEBED which count 636

up to 750 motes, while FIT IoT-LAB and SmartSantander 637

have deployed several thousands of nodes.

638

3.2.3. Federation

639

The FIT IoT-LAB testbed is multi-site, spread across 6 640

different locations in France and offering forward access 641

to 2728 wireless sensor nodes. It is composed of previously 642 named SensLAB testbeds,11 plus latest deployments of rela- 643

tively new wireless sensor devices. It is an actual distributed 644

testbed which offers the functionality to experiment on 645

10 www.wiselib.org.

11 http://wiki.senslab.info.

Please cite this article in press as: A.-S. Tonneau et al., How to choose an experimentation platform for wireless sensor networks? A survey on static and mobile wireless sensor network experimentation facilities, Ad Hoc Netw. (2015), http://dx.doi.org/10.1016/ j.adhoc.2015.03.002

ADHOC 1204 24 March 2015

A.-S. Tonneau et al. / Ad Hoc Networks xxx (2015) xxx–xxx

No. of Pages 13, Model 3G
9

646 several different locations and on different hardware at the

647 same time. However, note that FIT IoT-LAB is also part of

648 the FIT federation. The FIT (Future Internet of Things) 649 Equipex is a federation of FIT IoT-LAB, OneLAB12 and 650 CorteXlab.13

651

As for WISEBED, this 3 year-old project is a joint effort of

652 9 academic and research institutes, and aims to provide a

653 federation of large wireless sensor network testbeds across

654 Europe. The federation comprises about 750 devices sup-

655 porting a range of sensor modalities. On each of the 9 sites,

656 a server exposes the testbed capabilities through an iWSN

657 interface, providing a uniform access to every site. Each site

658 differs in its choice of hardware, software, and physical lay-

659 out, providing a very heterogeneous large-scale testbed.

660

Finally, the largest federation in terms of number of

661 devices is SmartSantander. This project proposes a city-

662 scale experimental research facility in order to support

663 applications and services for smart cities. Indoor, outdoor

664 as well as in vivo devices are deployed across 4 different

665 cities in Europa: Belgrade (Serbia), Guildford (UK), Lübeck

666 (Germany) and Santander (Spain). Some of the testbeds

667 are accessible through the already mentioned WISEBED

668 experimental facility thus are also part of this federation.

669 3.3. Mobility

670

In this section, we examine how mobility is provided by

671 different testbeds. The majority of the facilities does not

672 offer any type of mobility, some others have introduced

673 mobile nodes into an existing grid of ﬁxed nodes, or are

674 currently dealing with that issue.

675 3.3.1. Undergone vs controlled mobility

676

Undergone mobility, as described in Section 2.4, is pro-

677 vided by some testbeds but for most of them, the experi-

678 menter has no control over it as for instance in

679 SmartSantander where nodes are deployed in the cities of

680 Belgrade and Pancevo, embedded into public transporta-

681 tion vehicles, like buses and taxis. These nodes are remo-

682 tely accessible for experimentation and can be used to

683 determine the location of the vehicles, estimate arrival

684 time to bus stops, or make atmospheric measurements

685 but the user has obviously no control on buses. But in FIT

686 IoT-LAB, some nodes are embedded on 4 electrical toy

687 trains maneuvring on 2 separated circuits and on more

688 than 200 robots (Wiﬁbots, Turtlebot2 and Roomba). The

689 mobile nodes are part of grids of between 256 and 1000

690 nodes, enabling experimentation of scenarios involving

691 both static and mobile nodes. In these speciﬁc cases, the

692 user can choose the speed of the trains, and/or the mobility

693 patterns of each robot.

694

Offering controlled mobility is an even more difﬁcult

695 issue. Some testbeds have introduced controlled mobility

696 by means of robot platforms carrying the nodes. Whatever

697 the kind of robots used, they can generally move at a speed

698 oing up to 18 km/h (0.5 m/s, 18.5 in./s). But the testbeds do

699 not offer remote access to this infrastructure except FIT IoT-

LAB and CONET-IT. To date, most of testbeds have not 700

deployed more than a few robots. While enlarging the scale 701

is a goal for many of them, they usually adopt an incremen- 702

tal approach, solving technical problems. For instance, on 703

the DES-Testbed, only one mobile node embedded on a 704

iRobot Roomba vacuum-cleaner robot is running, still as a 705

prototype, but it is planned to extend it with other robots 706

and to provide different mobility patterns. The manufac- 707

tured iRobot’s Roomba vacuum-cleaner robot is the most 708

widely used for introducing mobility in testbeds, since it 709

is low-cost and self-operating, and has auto-recharging 710

capabilities. WISEBED, MINT-m, FIT IoT-LAB and 711

RoombaNet have a few of them available either occasionally 712

(WISEBED) or permanently (RoombaNet plans to extend its 713

ﬂeet to 12 robots). Other testbeds have introduced mobility 714

using different robot platforms, as summarised in Table 2. 715

But for all these testbeds, scheduling and timeslices to the 716

remote users remain to be clariﬁed. This limitation is truly 717

understandable since it is a very challenging issue to handle 718

the sharing of these mobile resources between several 719

users, in terms of space and infrastructure, with ensuring 720

the safety and consistency of the testbed.

721

A more advanced testbed since it is remotely accessible 722

to users, and works widely autonomously is the CONET 723

Integrated Testbed, developed at the University of Sevilla 724

(Spain). This open facility has deployed about a hundred 725

heterogeneous wireless sensor motes, some of them piggy- 726

backed on 5 Pioneer 3-AT mobile robots. Some extensions 727

in terms of sensors and robot platforms are scheduled. 728

However, it does not handle concurrency since one experi- 729

menter has to book the entire testbed.

730

Going further, FIT IoT-LAB also offers several nodes 731

embedded on robots (up to 200 robots), either Roomba, 732 Turtlebot214 or Wiﬁbot,15 depending on the site. These 733

robots and their embedded nodes are included in the reser- 734

vation and scheduling system and are managed as any other 735

resource. They can be used to provide undergone mobility to 736

their embedded nodes, using predeﬁned mobility patterns. 737

Users can also get full control of them, and design entirely 738

their solution integrating the exact needed mobility, since 739

the robots are able to interact with their embedded node.

740

3.3.2. Autonomous charging & localisation

741

Most of the testbeds have chosen to deploy off-the-shelf 742

robots, depending on their needs. Some functionalities are 743

already provided, however the customisation of these 744

robots to adapt them to a wireless sensor network testbed 745

remains often necessary, as well as software solutions to 746

allow them to autonomously manoeuvre in a constrained 747

space.

748

For instance, off-the-shelf robots are not provided with 749

the appropriate connectors for plugging the carried wire- 750

less sensor node. It is also necessary to modify their 751

auto-recharging circuitry to power up both the robot and 752

the mote. Moreover, MINT-m has developed for Roomba 753

robots a residual power algorithm that is able to estimate 754

the amount of energy left, and a recharge scheduling 755

12 https://www.onelab.eu. 13 http://www.cortexlab.fr.

14 http://www.turtlebot.com. 15 http://www.wiﬁbot.com.

Please cite this article in press as: A.-S. Tonneau et al., How to choose an experimentation platform for wireless sensor networks? A survey on static and mobile wireless sensor network experimentation facilities, Ad Hoc Netw. (2015), http://dx.doi.org/10.1016/ j.adhoc.2015.03.002

ADHOC 1204
24 March 2015
10

A.-S. Tonneau et al. / Ad Hoc Networks xxx (2015) xxx–xxx

No. of Pages 13, Model 3G

756 algorithm, thus allowing testbed robots operations with-

757 out human intervention for weeks, in a 24 fashion. More

758 advanced robots, like the Turtlebot2 deployed in FIT IoT-

759 LAB, are targeted for research and education purposes,

760 and provide functionalities like auto-recharging. FIT IoT-

761 LAB has also deployed Wiﬁbot robots, for which a speciﬁc

762 auto-recharging solution has been designed. In the other

763 testbeds, human intervention is almost always required

764 at one point or another to charge the robots.

765

For the robots to move autonomously in an area and to

766 avoid obstacles, an accurate positioning mechanism is

767 necessary. Therefore, several approaches exist, either cen-

768 tralised i.e. relying on a central server that computes the

769 position of each robot, or distributed i.e. each robot is able

770 to self-localise.

771

RoombaNet controls the directions and distances using

772 the odometry data and an additional orientation sensor. Its

773 developers are currently working on improvements on the

774 control software to enhance the accuracy of the move-

775 ments. Going further, other facilities (MINT-m, MOTEL,

776 ISRobotNet) rely on more advanced systems for robots

777 positioning like a vision-based system with cameras: over-

778 looking cameras are mounted on the ceiling, and a central

779 server computes images and identiﬁes the positioning of

780 each robot.

781

CONET-IT and FIT IoT-LAB have opted for a distributed

782 approach for localisation: a robot is equipped with a laser

783 or a kinect and uses the probabilistic system AMCL

784 (Adaptive Monte-Carlo Localisation) to localise itself. The

785 algorithm uses a particle ﬁlter captured by the laser as well

786 as the odometry data to track the pose of the robot into the

787 map of the environment. Therefore, each robot is able to

788 autonomously localise itself, in a decentralised manner.

789 The robots carry powerful enough netbooks for computing

790 and control.

791 3.3.3. Software management & tools

792

Managing a mobile wireless sensor network testbed

793 and offering the appropriate tools to allow the user to

794 remotely design and control its experimentations is not

795 trivial.

796

Some of the surveyed testbeds have developed their

797 own tools. RoombaNet has ported Wiselib (mentioned in

798 Section 3.2.1) on its sensor nodes platform and for the

799 mobility control, they have developed a driver that encap-

800 sulates Roomba’s basics movements. RoombaNet develo-

801 pers plan to extend Wiselib to support this control

802 software for the robots. This will enable users to access

803 the testbed remotely and to write WSN algorithms that

804 can control the movements of the robots. MOTEL has

805 developed so-called FLEXOR, a software architecture to

806 control sensor nodes that run on top of TinyOS. FLEXOR

807 is platform-independent and has extensive graphical sup-

808 port to programme and manage WSNs. The control of the

809 robots is handled by a multi-robot architecture for coordi-

810 nated mobility.

811

Other testbeds use open source software libraries and

812 tools dedicated to robot and sensor applications: Player16

(CONET-IT) allows multiple heterogeneous devices to pre- 813

sent the same interface, and is language and platform- 814

independent. Its module manages the WSN messages that 815

should comply with the WSN-Player Driver interface. On 816 the other hand, FIT IoT-LAB has deployed ROS17 for the 817

mobility control. This software beneﬁts from an increasing 818

community of developers, and offers hands on solutions 819

and algorithms, thus expanding the possibilities in terms 820

of experimentations, and the work sharing between users. 821

Indeed, CONET-IT providers envision the migration to ROS 822

software. Furthermore, on both testbeds, sensors can com- 823

municate with their carrier robots, enabling cooperative 824

mobility where the robot follows sensor instructions 825

(whereas for now on MOTEL, the robot is not able to com- 826

municate with the piggybacked sensor, it does not share 827

energy nor other resources). Full control of the robot is given 828

to the user, enabling experimentations both in the wireless 829

sensor network area and in the robotic area.

830

To help users in the design of an experiment involving 831

mobile sensors, mobility models are often provided. It is 832

also useful to ensure a relative repeatability of the mobility. 833

Mobility, as previously mentioned, can be provided either 834

in an undergone or controlled way. Repeatability is easily 835

feasible in the context of undergone mobility. For instance, 836

using trains (FIT IoT-LAB), it is easy to repeat the exact same 837

experiment since trains are always moving on the same cir- 838

cuit. The experimenter just has to set the same starting 839

point and speed. However, when mobility is more complex, 840

mobility patterns are necessary. Some testbeds provide 841

predeﬁned patterns. An example of mobility model 842

(RoombaNet) is the random motion: a ‘‘semi-random‘‘ 843

model allows the experimenter to modify the level of ran- 844

domness in the pattern. Experimenters can also establish 845

predeﬁned paths, load them on the robots and reuse them. 846

CONET-IT and FIT IoT-LAB allow the paths modiﬁcation by 847

interactively moving, adding or deleting waypoints.

848

As previously mentioned in the mobility requirements 849

(Section 2.4), in such a context, it is essential to have visua- 850

lisation tools available, to study the dynamics of an experi- 851

mentation in a testbed in real time. Therefore, MWSN 852

testbed providers have made a sizable effort to develop 853

tools that enable, even remotely, a vision on the proceed- 854

ings of an experiment. It is for instance possible to display 855

real-time node position and physical environment 856

throughout the experiment. MINT-m’s MOVIE interface, 857

mentioned in Section 3.1.1 also enables the collection of 858

the nodes path traces, real-time display of network trafﬁc 859

load distribution as well as inter-node signal-to-noise 860

ratios. Despite everything, there remains some degree of 861

uncertainty when running a mobile WSN experiment. To 862

overcome this, MOTEL provides a graphical post-experi- 863

ment analysis tool, that allow the analysis of the actual 864

proceedings of an experiment.

865

3.4. Extra features

866

In the following, we mention some interesting addi- 867

tional features offered by testbeds.

868

16 http://playerstage.sourceforge.net/index.php?src=player.

17 http://www.ros.org.

Please cite this article in press as: A.-S. Tonneau et al., How to choose an experimentation platform for wireless sensor networks? A survey on static and mobile wireless sensor network experimentation facilities, Ad Hoc Netw. (2015), http://dx.doi.org/10.1016/ j.adhoc.2015.03.002

ADHOC 1204 24 March 2015

A.-S. Tonneau et al. / Ad Hoc Networks xxx (2015) xxx–xxx

No. of Pages 13, Model 3G
11

Fig. 3. Overview of the strengths and weaknesses of the main surveyed testbeds.

869 3.4.1. Radio signal attenuation

870

The goal of a wireless sensor network testbed is to offer

871 a facility to experiment research protocols in a real-world

872 like context. In order to get closer to the reality, most of

873 the testbeds target large-scale deployments. In indoor

874 environments and small spaces, the transmission ranges

875 are higher than in outdoor environment in a real context.

876 Therefore, some testbeds like NetEye and MINT-m have

877 attached static db attenuators to each mote antenna to rea-

878 lise multi-hop network and different power levels. Radio

879 signal attenuation allows the reduction of the signal cover-

880 age and thus of the physical space.

Users can then beneﬁt from the hardware and software 894

infrastructures provided by these facilities to manage their 895

experiments: automatic deployment, experiment replay, 896

interaction with the nodes. . .

897

FlockLab testbed consists of 30 observers organised in a 898

mixed indoor/outdoor topology. Users are free to attach up 899

to 4 arbitrary wireless sensor nodes over this generic hard- 900

ware interface. Currently, there exist target adapters for 901 Tmotes, TinyNodes, Opal nodes and MEMSIC Iris18 nodes. 902

FIT IoT-LAB proposes 96 free slots to plug any new hardware 903

through USB interface.

904

881 3.4.2. Free MAC layer

882

A way to offer more freedom to users in the design of

883 their applications is to let them choose the MAC layer, like

884 in FIT IoT-LAB or Kansei. IoT-LAB provides different MAC

885 layer implementations, users are free to choose or to test

886 their own, for example to observe its impact on the net-

887 work lifetime or throughput.

888 3.4.3. Open hardware

889

Going further, to offer more freedom to experimenters

890 in the choice of hardware, and to allow them to experiment

891 with their own motes, some testbeds provide an open facil-

892 ity on which users can plug their own motes, assuming

893 that they are compliant with the existing infrastructure.

3.4.4. Nomadic testbeds

905

Some testbeds are not necessarily permanently 906

installed. MOTEL, for instance, is not a typical testbed. It 907

is a robotic-assisted mobile wireless sensor network 908

testbed which can be installed in any indoor environment 909

in several hours for a particular experiment. This brings 910

ﬂexibility in the platform topology, since the number of 911

robots is unlimited and the used robotic platforms can be 912

exchanged easily. MOTEL provides both software frame- 913

works to manage the WSN and the robot platform. When 914

the testbed is not installed, the cameras and robots are 915

used for other, non-WSN experiments and research.

916

18 http://www.memsic.com/wireless-sensor-networks.

Please cite this article in press as: A.-S. Tonneau et al., How to choose an experimentation platform for wireless sensor networks? A survey on static and mobile wireless sensor network experimentation facilities, Ad Hoc Netw. (2015), http://dx.doi.org/10.1016/ j.adhoc.2015.03.002

ADHOC 1204
24 March 2015
12

A.-S. Tonneau et al. / Ad Hoc Networks xxx (2015) xxx–xxx

No. of Pages 13, Model 3G

917 4. Concluding discussions

918

With the development of new technologies, these last

919 years have witnessed the quick development of IoT and

920 WSN. Many platform initiatives have thus pop up to help

921 the design of protocols for IoT and WSN. But designing,

922 deploying, setting up and then maintaining such platforms

923 is a very difﬁcult task as testiﬁes the fact that large number

924 of used testbeds have been decommissioned (MoteLab,

925 Motescope, TrueMobile). This article describes some of

926 the most currently active and meaningful testbeds for IoT

927 related research.

928

To summarise, Fig. 3 features their different characteris-

929 tics at a glance. It shows that most of the testbeds are het-

930 erogeneous and multi-purpose, offering an increasing set

931 of services to answer a large range of user expectations,

932 even though none of them manages to fulﬁll all require-

933 ments, especially in terms of maintenance, since testbeds

934 need continuous updates to follow the technology

935 advances. SmartSantander and WISEBED are the two best

936 answering best on criteria we listed, especially in terms

937 of scale, heterogeneity, and possibilities of experi-

938 mentation. Even if FIT IoT-LAB is slightly set back, it is

939 strongly oriented to scale and repeatability criteria, while

940 answering at the same time to mobility concerns. Like

941 CONET-IT, it features heterogeneity in terms of motes

942 and mobile platforms, it is remotely accessible and the

943 mobility can be fully controlled in a decentralised way.

944 However, if the user focuses his work on mobility only,

945 and needs to have full control of several mobile devices

946 involved in his experimentation, CONET-IT could be the

947 best choice regarding experimentation means. On the

948 other hand, if a large scale and possibly mobile devices

949 are not required for the user to experiment its applications

950 in an indoor environment, INDRIYA and TWIST are valu-

951 able testbeds since they offer the basics functionalities of

952 a WSN testbed, an interesting three-dimensional deploy-

953 ment of reliable and widely used motes.

954

Surviving testbeds are wonderful tools for the IoT solu-

955 tions developments. Most of the ones discussed in this arti-

956 cle follow the technological trends and have been

957 continuously opening new services in order to integrate

958 societal behaviour modiﬁcations and arising challenges.

959 We can discuss potential future new directions and ser-

960 vices they might consider. First, the inclusion of actuators

961 could, not only allow the user to visualise an experiment

962 (in the case of the LEDs) but also to act on the environment

963 and change some of its characteristics by opening doors,

964 turning on lights, etc. This could open the way to perform

965 experimentations for house automation or personal health

966 monitoring applications. Also, to address some new hot

967 research topics like security and safety issues or energy

968 harvesting integration in network decision, new hardware

969 should feature some energy harvesting components (solar

970 cell, piezo cells, etc.) and new tools should be designed to

971 ease the tests for security and safety research purposes.

972

The purpose of the IoT is to make objects and environ-

973 ment able to communicate, to recognise themselves and to

974 exchange data. Therefore, another direction to extend and

improve testbeds could be the introduction the RFID tech- 975

nology into the experiments, thus making possible auto- 976

matic identiﬁcation and tags tracking.

977

To conclude, this survey shows the great advances 978

made by different IoT experimental platforms in different 979

directions, offering a large set of diversiﬁed services. 980

They all present some strengths and lacks with regards to 981

the user needs. We detailed some possible extensions that 982

could be done to allow an even larger set of experi- 983

mentations following the new research trends. Finally, 984

we expect this survey assist a potential user to easily 985

choose the one to use regarding his own needs.

986

References
[1] M. Nati, A. Gluhak, H. Abangar, W. Headley, Smartcampus: a usercentric testbed for internet of things experimentation, in: Proc. of International Symposium on Wireless Personal Multimedia Communications (WPMC), Atlantic City, NJ, USA, 2013.
[2] C.B. des Roziers, G. Chelius, T. Ducrocq, E. Fleury, A. Fraboulet, A. Gallais, N. Mitton, T. Noël, J. Vandaele, Using sensLAB as a ﬁrst class scientiﬁc tool for large scale wireless sensor network experiments, in: Proc. of Networking, Valencia, Spain, 2011.
[3] A. Jimenez-Gonzalez, J.R.M.-D. Dios, A. Ollero, An integrated testbed for cooperative perception with heterogeneous mobile and static sensors, Sensors 12 (2011).
[4] V. Handziski, A. Köpke, A. Willig, A. Wolisz, TWIST: a scalable and reconﬁgurable testbed for wireless indoor experiments with sensor networks, in: Proc. Workshop on Multi-hop Ad Hoc Networks: From Theory to Reality, Florence, Italy, 2006.
[5] A. Arora, E. Ertin, R. Ramnath, M. Nesterenko, W. Leal, Kansei: a highﬁdelity sensing testbed, IEEE Internet Comput. 10 (2006) 35–47.
[6] D. Sakamuri, H. Zhang, Elements of Sensornet Testbed Design, 2009. [7] G. Coulson, B. Porter, I. Chatzigiannakis, C. Koninis, S. Fischer, D.
Pﬁsterer, D. Bimschas, T. Braun, P. Hurni, M. Anwander, G. Wagenknecht, S. Fekete, A. Kröller, T. Baumgartner, Flexible experimentation in wireless sensor networks, ACM Commun. 55 (2012) 82–90. [8] O. Hahm, M. Günesß, K. Schleiser, Des-testbed a wireless multi-hop network testbed for future mobile networks, in: Proc. of GI/ITG KuVS Workshop on Future Internet (KuVS), Hannover, Germany, 2010. [9] R. Lim, F. Ferrari, M. Zimmerling, C. Walser, P. Sommer, J. Beutel, Flocklab: a testbed for distributed, synchronized tracing and proﬁling of wireless embedded systems, in: Proc. of International Conference on Information Processing in Sensor Networks (IPSN), Philadelphia, Pennsylvania, USA, 2013. [10] M. Doddavenkatappa, M. Chan, A. Ananda, Indriya: a low-cost, 3d wireless sensor network testbed, in: Testbeds and Research Infrastructure. Development of Networks and Communities, Thessanoliki, Greece, 2012. [11] S. Bouckaert, W. Vandenberghe, B. Jooris, I. Moerman, P. Demeester, The W-iLAB.t testbed, in: Testbeds and Research Infrastructures. Development of Networks and Communities, Shanghai, China, 2011. [12] M.A. Hail, J. Pinkowski, T. Teubler, M. Danckwardt, D. Pﬁsterer, H. Hellbrück, Roombanet – testbed for mobile networks, Electron. Commun. EASST 37 (2011). [13] E. Förster, A. Förster, T. Leidi, K. Garg, D. Puccinelli, F. Ducatelle, S. Giordano, L.M. Gambardella, Poster abstract: motel: towards ﬂexible mobile wireless sensor network testbeds, in: Proc. of the 8th European Conference on Wireless Sensor Networks (EWSN), Bonn, Germany, 2011. [14] P. De, A. Raniwala, R. Krishnan, K. Tatavarthi, J. Modi, N. Syed, S.Sharma, T. Chiueh, MiNT-m: an autonomous mobile wireless experimentation platform, in: Proc. of International Conference on Mobile Systems, Applications, and Services (Mobisys), Uppsala, Sweden, 2006. [15] M. Barbosa, A. Bernardino, D. Figueira, J. Gaspar, N. Gonçalves, P.U. Lima, P. Moreno, A. Pahliani, J. Santos-Victor, M.T.J. Spaan, J. Sequeira, ISRobotNet: a testbed for sensor and robot network systems, in: Proc. of International Conference on Intelligent Robots and Systems (IROS), St. Louis, MO, USA, 2009.

987
988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044

Please cite this article in press as: A.-S. Tonneau et al., How to choose an experimentation platform for wireless sensor networks? A survey on static and mobile wireless sensor network experimentation facilities, Ad Hoc Netw. (2015), http://dx.doi.org/10.1016/ j.adhoc.2015.03.002

1046
1049 105405 1051 1052 1053 1054 1055 1056 1057 1058 1059
1048
1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1061

ADHOC 1204 24 March 2015

A.-S. Tonneau et al. / Ad Hoc Networks xxx (2015) xxx–xxx

No. of Pages 13, Model 3G
13

Anne-Sophie Tonneau received the MSc in computer science in 2011 from Lille 1 University. She had a brief experience in an IT consulting company before joining the FUN research group in late 2011. Specialised in software development and project management, she is in charge of the deployment of the new FIT equipex IoT-LAB platform in Lille and the study of a mobility solution involving robots.
Nathalie Mitton received the MSc and PhD. degrees in Computer Science from INSA Lyon in 2003 and 2006 respectively. She received her Habilitation diriger des recherches (HDR) in 2011 from Lille 1 University. She is currently an Inria full researcher since 2006 and from 2012, she is the scientiﬁc head of the Inria FUN team which is focused on small computing devices like electronic tags and sensor networks. Her research interests are mainly focused on self-organisation, selfstabilisation, energy efﬁcient routing and neighbour discovery algorithms for wireless sensor networks as well as RFID middlewares. She is involved in the set up of the SensLAB (www.senslab.

info) and FIT platforms (http://ﬁt-equipex.fr/) and in several program and organisation committees such as AdHocNets 2014, HPCC 2014, WiMob 2013, MASS 2012 & 2011, LoGASN 2012, WPMC2012, IST-AWSN 2012, iThings 2012, and Comnet-iot 2012.
Julien Vandaële received the MSc in computer science in 2005 from Lille 1 University. Since this date, he is Research Engineer at Inria Lille – Nord Europe. He is working on the development and implementation of the FIT IoT-Lab testbed since the start of the project in 2008, in the FUN research group led by Dr. Nathalie Mitton. Specialised in software development, ubiquitous and distributed systems and project management, he manages the Lille developer team, related to the other developers divided in different sites in France. In addition to this mission, as a member of the Experimentation and Development Department, he supervises the work of young engineers of the research center, advises them about methodology, technical choices and tools.

1076 1077 1078 1079 1080
1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 11008927 1098 1099

Please cite this article in press as: A.-S. Tonneau et al., How to choose an experimentation platform for wireless sensor networks? A survey on static and mobile wireless sensor network experimentation facilities, Ad Hoc Netw. (2015), http://dx.doi.org/10.1016/ j.adhoc.2015.03.002

