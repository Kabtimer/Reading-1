CHAPTER
20 A random access model
for M2M communications in LTE-advanced mobile networks

Meriam Bouzouita1,2, Yassine Hadjadj-Aoul1, Nawel Zangar2, Sami Tabbane2, and Ce´ sar Viho1
1University of Rennes, Rennes, France
2Higher School of Communication of Tunis (SUPCOM), Ariana, Tunisia

1 INTRODUCTION
Machine type communication (MTC), also known as machine-to-machine (M2M) communication, is an ongoing standardized form of communication in mobile networks [1,2]. In opposition to the former modes of communications, M2M enables devices or machines and also terminals to communicate directly without involving the human factor. Indeed, M2M allows an automated communication between remote machines and central management applications, providing real-time control and monitoring. It constitutes an emerging market with predictions of more than 500 billion M2M devices embedded in the near future [3].
Cellular mobile networks were formally designed to support classical humanto-human (H2H) applications, which are very different from M2M applications with their particular characteristics [1,4]. Thus, mobile networks should be accommodated to support such devices by efficiently managing the different supported applications, while maintaining, at the same time, the same guarantees for the former communications.
The support of M2M communications in mobile networks, and particularly in Long Term Evolution-Advanced (LTE-A) networks [5], comes with a set of challenges and open issues for network operators (NO). In fact, the increasing number of MTC devices, with their stringent constraints in terms of energy and traffic pattern (i.e., typically represented by a small portion of data and a huge amount of signaling traffic), may reduce the efficiency of such networks and may cause severe congestion in the different levels of the cellular networks: radio access network (RAN), core network (CN) and signaling network. As a result, this will impact the user data and control planes. RAN congestion happens when a high

Modeling and Simulation of Computer Networks and Systems. © 2015 Elsevier Inc. All rights reserved.

577

578 CHAPTER 20 A random access model for M2M communications
number of MTC devices try to connect to the network at almost the same time. The CN congestion can be caused by simultaneous transmissions from a large number of MTC devices. Whenever congestion occurs, this may degrade performance of the networks by causing intolerable delays, packet loss and even service unavailability.
Different solutions have been proposed in the literature to deal with the network overload of LTE networks [6,7]. The European Telecommunications Standards Institute (ETSI) [8] and the Third Generation Partnership Project (3GPP) [9], introduced a list of solutions to overcome such problems. The Access Class Barring (ACB) scheme is a key technique used by many to alleviate the congestion of MTC devices [2]. The ACB procedure is based on an access probability called the ACB factor. If the value of this factor is set properly, this may help to insure both small contention on radio resources and low access delays for MTC devices. In the present chapter, we propose a novel dynamic model to help in computing such a factor for M2M applications in LTE-A networks.
The rest of this chapter is organized as follows. In the second section, we give an overview of MTC applications and their generic architecture. In the third section, we list some congestion and overload mechanisms. We devote the fourth section to the random access process and Physical Random Access Channel (PRACH) resources allocation. The fifth section is dedicated to a brief description of RAN overload mechanisms and specifically the ACB scheme. Then, the dynamic model and the proposed method to compute the ACB factor are presented in the sixth section. The performance evaluation of the classical random access process and the proposed solution are described in the seventh section, and finally we conclude the chapter.
2 M2M APPLICATIONS OVERVIEW
As mentioned previously, MTC communications involve many devices such as computers, embedded systems, sensors, meters, mobile devices, etc. These devices are generally the origin of data packets, which are transferred, through a network, to an application-called server or an application server (AS). As mentioned in [2], a simple architecture of M2M applications is mainly composed of three essential domains:
• MTC Device Domain: includes the MTC devices. • Network Domain: transports messages or events between MTC devices and
MTC servers. • MTC Application Domain: where the MTC servers are localized. Theses
servers are under the control of the NO.
Within the newest 3GPP agreement, two new entities were introduced (see Figure 20.1). The MTC Interworking Function (MTC-IWF) [2], which helps in

FIGURE 20.1 MTC architecture and communications scenarios.

580 CHAPTER 20 A random access model for M2M communications
facilitating the interworking between the MTC servers and the mobile network by authenticating MTC servers and by supporting the control plane messaging from and to these servers. The second entity is the Services Capability Server (SCS) [10] that provides optional services between the MTC devices and the MTC applications server in the external network.
Based on the SCS’s provider, different architectural scenarios were proposed for M2M applications [10]. In the first model, called the “direct model,” the application server connects directly to the mobile network without passing through the SCS. In the second model, called the “indirect model,” the server connects to the network through the SCS if it requires additional services for MTC devices. A third model, denoted the “hybrid model,” combines the direct and indirect models.
3 CONGESTION CONTROL FOR M2M APPLICATIONS OVER LTE NETWORKS
Congestion is a fundamental problem in mobile networks; it usually occurs when the aggregated demand for bandwidth exceeds the available link capacity [11]. However, when supporting M2M applications, new forms of congestion arise. Indeed, the congestion for M2M applications may concern the data plan, but also the control plan, which represents the main source of congestion in mobile networks. In order to combat such congestion, LTE network nodes should be able to intelligently reject attach and connection requests without impacting either nonMTC traffic or traffic from other MTC applications that are not causing any problem. To manage the overload and congestion network caused by MTC applications, many solutions have been developed, as detailed in [2] and [11]. These solutions can be classified as follows:
• Access Control by the RAN (i.e., eNB) • RRC connection and channel requests’ rejections by the RAN • Connection requests’ rejection by the CN (e.g., MME)
When the RAN handles overload situations, an internal congestion alarm can trigger the broadcasting of an access control message to the MTC devices to avoid further access to the network. The CN may also initiate the process by sending a notification message called OVERLOAD START to the RAN node. The OVERLOAD START message indicates the barring information (barring factor, barring time, M2M group to be blocked, etc.). Thus, time tolerant MTC devices can be treated as low priority devices, which may lead to access rejection with an extended waiting time. Indeed, in the case of massive simultaneous connection requests, it is of benefit to reject connection requests as early as possible during the access procedure to optimize resources’ utilization. This is the only solution preventing signaling messages sending from MTC devices.

4 Random access procedure and PRACH resources 581
When the MME handles the rejection of connection/attach requests, the targeted devices can belong to a particular Access Private Network (APN), an MTC group or an MTC device access priority. Indeed, MME can perform rejection by providing a back-off time to the MTC devices in order not to re-initiate a connection/attach request immediately after a first rejection. Also, when the number of MTC devices becomes large, the back-off time should be randomized to avoid synchronous re-initiating access requests.
Access control by RAN is considered to be the most beneficial, due to the fact that there is no wasting of resources. Thus, in this chapter we focus on this mechanism by proposing a solution allowing the calculation of the barring factor.

4 RANDOM ACCESS PROCEDURE AND PRACH RESOURCES
4.1 RANDOM ACCESS PROCEDURE
The rapid growth of the number of MTC devices complicates considerably their support in LTE-Advanced Networks and may significantly increase the probability of congestion and access failure when performing the random access (RA) procedure. In fact, to attach or connect to the network, every MTC device should first accomplish the random access procedure. The RA is a process initiated by terminals in the idle state to request uplink radio resources required to send data. In LTE networks, this procedure can be achieved in two ways: contention-based and contention free-based access.
M2M devices usually perform such access in a contention manner. This contention-based RA procedure consists of four essential steps (or exchanged messages) and uses an uplink channel called the Physical Random Access Channel (PRACH) [12]. These different steps are listed below (see Figure 20.2):

MTC device

eNB

Msg1 RA preamble transmission Msg2 RAR
Msg3 RRC connection request Msg4 RRC connection response

FIGURE 20.2 Contention-based RA procedure.

582 CHAPTER 20 A random access model for M2M communications
• Step 1: Random access preamble transmission: in the first message, the MTC device chooses randomly a sequence code called a preamble, among the set of available preambles. This preamble is then transmitted using the PRACH to the eNodeB (eNB). In each PRACH, if two or more MTC devices select the same preamble, the eNB will be unable to identify the initiator of the RA since the devices don’t indicate their own identities in this request. Thus, eNB cannot decode any of these preambles and a collision will happen.
• Step 2: Random access response (RAR): when the preambles are detected, eNB assigns uplink resources to the concerned MTC devices and sends a RAR message using the Physical Downlink Shared Channel (PDSCH). If the message is not received within a time window (i.e., RAR window), a collision event is generated by the nodes. These will retransmit their preambles after a random back-off time.
• Step 3: RRC (Radio Resource Control) connection request: during this step, the MTC device transmits its unique identity to the network using the Physical Uplink Shared Channel (PUSCH). This is done only if msg2 (i.e., RAR message) contains the RA preamble that corresponds to the preamble transmitted in the first message.
• Step 4: RRC connection Response: using the PDSCH, the network sends a contention resolution message to the device. In fact, after receiving msg3 and using msg4, eNB confirms that the connection is established successfully and thus ends the RA procedure.
Thus, whenever two or more MTC devices choose the same preamble, a collision will happen. Consequently, when the number of terminals trying to access the network at the same time is larger, this leads to an excessive level of PRACH congestion and a low RA success probability.
4.2 PRACH RESOURCES
In LTE systems, every cell contains 64 preambles. These preambles are available for random access but only 54 preambles are reserved for contention based RA [13]. As mentioned previously, the RA process takes place within the PRACH. The PRACH or Physical Random Access Channel is a time frequency resource block (RB) reserved by the eNB. In LTE networks, and for each radio frame whose duration is equal to 10 ms, a limited number of PRACH resources, called also Random Access Opportunities (RAO), are available. This number depends on a parameter called the PRACH configuration index.
For example, and as you can see in Figure 20.3, if this parameter is equal to 6, then the number of available PRACH occasions within a radio frame is 2. As the number of preambles reserved for the contention mode is equal to 54 per one PRACH opportunity (i.e., during 1 ms). Then the total number of preambles (or RAOs) is equal to 54Ã2 5 108 [14].

5 RAN overload control 583

1st PRACH opportunity

0

1

2

3

2nd PRACH opportunity

4

5

6

7

8

9

10

Radio Frame
FIGURE 20.3 PRACH opportunities (case PRACH configuration index 5 6) here.

t (ms)

5 RAN OVERLOAD CONTROL
5.1 RAN OVERLOAD MECHANISMS
To reduce the PRACH overloads, the 3GPP specified a list of different PRACH overload resolution methods to improve MTC device support in LTE-Advanced Networks. These solutions may help such networks to meet performance requirements even under excessive MTC loads [14,15]. It also helps in avoiding resources’ wastage since every failed attempt consumes radio resources. In the following paragraphs, we will briefly describe such solutions.
• Separation of RACH resources: consists of affecting separate resources for MTC devices and human to human (H2H) devices. The separation can be achieved by either separating the preambles or by allocating different timefrequency resources or resource blocks (RBs). Two different approaches considering such solution are proposed in [16]. In the first scheme, the preambles are split into two groups, one for H2H devices and another for M2M devices. In the second scheme, resources are also divided into two groups: one dedicated to H2H devices and the other shared between MTC and H2H devices.
• Dynamic allocation of RACH resources: eNB may allocate additional resources for MTC devices in case of a huge load. In [17], an algorithm was proposed to dynamically change the number of RA slots according to the channel load. This solution might be effective but it depends on limited availability of additional resources.
• MTC-specific back-off scheme: the network can set the back-off time to a large value in order to delay the RA reattempts of some MTC devices, for example after a first failed access. It is expected that an extended back-off time can alleviate congestion between devices and, thus, facilitating overload resolution.
• Slotted access: the network distributes the access of MTC devices in dedicated access slots. A device is allowed to access the network during a

584 CHAPTER 20 A random access model for M2M communications
specified interval called AGTI (Access Grant Time Interval) and will be blocked during a FTI (Forbidden Time Interval). • Pull based schemes: in this method, the RACH procedure is initiated by the eNB. This is feasible only when the eNB is aware of the future transmissions of MTC devices. In fact, only devices whose identities are included in the message paging sent from the base station can attempt random access procedure. Then, the operation of a particular MTC device can start only after receiving a paging from the network. The transmission can start immediately or after a back-off time depending on the paging message. • Grouping of MTC devices: according to [2], MTC groups can be formed to help the radio resources allocation and decrease the redundant signaling to avoid congestion. In [18], a massive access management scheme, based on group optimization, was proposed to efficiently manage massive accesses on the air interface. In fact, a massive number of MTC devices request to attach to the eNB all at once. To deal with this problem, it is of benefit to group M2M devices according to their QoS characteristics and requirements. • Access Class Barring (ACB) scheme: it is used for barring, or not, the access of an MTC specific class. To do it, an ACB factor and a barring time are defined for each MTC access class. These parameters determine if a device is blocked for a certain time from accessing the cell or not. This may effectively reduce the collision probability of transmitting a bulk of preambles over the same radio resources.
In this chapter, we proposed a RAN overload control method based on the ACB scheme. Thus, in the following subsection, we explain in more detail the principles of such an approach.
5.2 ACB PROCEDURE
As mentioned previously, the ACB concept is a solution adopted to deal with the RACH overload and to control the access attempts of mobiles over the radio interface. Originally, the ACB scheme defined 16 access classes (AC). AC in the interval 0À9 represent normal MTC terminals, AC equal to 10 represents the emergency case, and finally AC in the interval 19 specified some services with high priority requirements.
Initially, eNB broadcasts an AC barring information, that is, ac_BarringInfo via the System Information Block (SIB2). The AC barring information contains the following three parameters: [19]
• ACB factor p labeled ac_BarringFactor; • Access barring time labeled ac_BarringTime; • Bit-string.
The ac_BarringFactor pA½0; 1 determines the barring probability of a device, whereas the ac_BarringTime is used to determine the duration (i.e., Tbarring)

5 RAN overload control 585

before retrying the RA in case the device wasn’t allowed to access the PRACH during the first trial. These two parameters are applied to all AC in 0À9 in the same way. SIB2 also contains the information about the allowed and barred classes.
Before performing the RA, the device should pass the ACB check. It initially draws a random number q. If this number is less than the ACB factor p, the device starts the random access procedure; otherwise the device will be blocked during a barring time. Consequently, the ACB method can help to alleviate the level of congestion by adjusting the value of p according to the load’s level. However, a low value of p leads to high access delays and radio resources’ underutilization; whereas a high value of p leads to heavy traffic load. Thus, it will be interesting to design a new solution allowing computing of the appropriate and adaptive value of p.
Using the ac_BarringTime, the value of Tbarring is calculated as follows:
Tbarring 5 ð0:7 1 0:6ÃrandÞÃac BarringTime
where rand is a random number generated by the MTC device after passing a first failed ACB check and before a second attempt. The values of ac_BarringTime can range from 4 s to 512 s.
AC in the interval 11À15 use a bit-string configuration in which every bit indicates if the corresponding AC is barred or not. For AC equal to 10, SIB2 contains information related to that access class [19]. Figure 20.4 illustrates the ACB mechanism followed by a random access attempt.
Backlogged MTC devices

Select a random q

ACB barring time

q < ACB-factor

No

Starting RA and preamble transmission
Remaining RA steps
FIGURE 20.4 ACB procedure and RA diagram.

No

Retransmission

586 CHAPTER 20 A random access model for M2M communications
Many works have dealt with the ACB procedure. In [20], a cooperative ACB scheme was proposed. All ACB parameters in each Base Station (BS) shall be jointly decided by all BSs rather than individually decided by one BS, in order to achieve more stabilization. In [21], a prioritized random access scheme was proposed. This PRA architecture is composed of a virtual resources allocation with class dependent back-off procedures and dynamic access barring.
In [22], the author proposed an algorithm to adaptively change the ACB factor if the number of backlogged MTC devices is not known. On the contrary, if the eNB has information of backlogged devices, a method to determine the optimal ACB factor was proposed. In [23], the authors proposed to adopt an adaptive scheme. In other words, eNBs can dynamically adjust ACB factors based on network loads rather than using fixed ACB probabilities, which are not optimal. In fact, high values of barring factor may increase access latency of devices, whereas low values may lead to an excessive resource contention. The simulation results of such work showed that adaptive ACB scheme could gain better performances than those obtained with a static ACB scheme.
In this chapter, we have proposed a dynamic model to compute the value of the ACB factor.

6 RANDOM ACCESS MODEL FOR M2M APPLICATIONS

6.1 MODEL

Our model for M2M device random access, in LTE-Advanced networks, is influenced by the fluid model proposed in [24]. The proposed system model uses the following parameters and quantities:

x3ðtÞ: average number of MTC devices that succeed the RA procedure at time t. λ: the arrival rate of MTC devices in terms of number of devices per second. θ1: the rate (percentage) of ACB failure. θ2: the rate (percentage) of RA failure (collision and retransmission). μ: the rate (percentage) of MTC departure after performing RA successfully. N: total number of radio resources (preambles) available during one RA
time slot.
p: ACB factor (percentage).

Our system model is illustrated in Figure 20.5. Based on this model, the evolutions over the time of x1ðtÞ, x2ðtÞ and x3ðtÞ are given by:

dx1 dt

5 λ 2 F1ðx1Þ 2 θ1x1

(20.1)

6 Random access model for M2M applications 587

λ

x1

F1 (x1)

x2

F2 (x2)

x3

μ

θ1

θ2

FIGURE 20.5 System model.

dx2 dt

5 F1ðx1Þ 2 F2ðx2Þ 2 θ2x2

(20.2)

dx3 dt

5 F2ðx2Þ 2 μx3

(20.3)

along with the constraint that x1ðtÞ, x2ðtÞ and x3ðtÞ should be nonnegative. F1ðx1Þ

denotes the average number of MTC devices that passed the ACB procedure suc-

cessfully. F2ðx2Þ denotes the average number of MTC devices that transmitted

their preambles successfully. This is achieved if and only if every MTC device

chooses one preamble that isn’t chosen by another MTC device.

Let’s now compute the values of F1ðx1Þ and F2ðx2Þ. Denote X as the number

of backlogged users and, among them, only Z users pass the ACB process suc-

cessfully. Then, the probability to have Z users who access successfully is given

by the following formula:



ProbðZ 5 ijX 5 nÞ 5

n i

pið12pÞn2i

By applying Newton’s binomial theorem [25], the average number is equal to:

EðZ 5 ijX 5 nÞ 5 np. Thus, we obtain the following result: F1ðx1Þ 5 px1

In this case, x2 devices contend for N preambles. It is similar to placing x2 balls into N bins. Thus, the number F2ðx2Þ of MTC devices which transmitted their preambles successfully is equal to having only F2ðx2Þ bins and each one of

them contains just one ball.

Denote:

&

Ij 5

1 0

if bin j contains one ball otherwise

folloYw, tsh:eYex5pePcteNj5d1

number of bins that EðIjÞ, where, EðIjÞ

contain just corresponds

one ball, can be expressed as to the probability that bin j

contains exactly one ball.

Thus,

Y

5

À x2 12

1 Áx221
N

EðIjÞ

5

Cx12

ðN 21Þx221 N x2

588 CHAPTER 20 A random access model for M2M communications

Consequently, F2ðx2Þ is equal to:

!x221

ðx221ÞLn

F2ðx2Þ 5 x2

1

2

1 N

5 x2e

!

12

1 N

Cx2 e2ðx2 21Þ=N

Finally, after approximation we obtain the following expressions for F2ðx2Þ:

F2ðx2Þ 5 x2e2ðx221Þ=N

Consequently, Equations (20.1), (20.2) and (20.3) become:

dx1 dt

5 λ 2 px1

2 θ1x1

5 f1ðx1; x2; x3; pÞ

dx2 dt

5 px1 2 x2e2ðx221Þ=N

2 θ2x2 5 f2ðx1; x2; x3; pÞ

(20.4) (20.5)

dx3 dt

5 x2e2ðx221Þ=N

2 μx3 5 f3ðx1; x2; x3; pÞ

(20.6)

6.2 STEADY-STATE ANALYSIS
During the rest of this section, we will study the stability of our system. To analyze the stability, we first linearize the system. In fact, linearization allows reducing the system’s complexity and assessing the local stability of an equilibrium point of a system.
In the case of our system, that linearization is done around the equilibrium point ðx1; x2; x3; pÞ, where, x1; x2; x3; and p are the values of x1; x2; x3; and p, respectively, in the steady state.
To study the steady-state performance of our system, we let:
dx1 5 dx2 5 dx3 5 0 dt dt dt
Then, we obtain
λ 2 px1 2 θ1x1 5 0 px1 2 x2e2ðx221Þ=N 2 θ2x2 5 0 x2e2ðx221Þ=N 2 μx3 5 0
where x1, x2 and x3 are the equilibrium values of x1, x2, and x3 respectively.

6 Random access model for M2M applications 589

Table 20.1 Simulation Parameters

Parameters

Designations

N_SEED

Number of seeds used for Monte Carlo simulation

N_M2M_MAX N_M2M_MIN N_EXPERIMENTS N_PREAMBLES

Maximum number of devices considered
Minimum number of devices considered
Number of realized experiments for the Monte Carlo simulation
Number of available preambles

Values 8 values from the following set: {10,100,1234,6753,10000, 16000,50000,100000} 54
10
10000
54

To simplify the resolution of such a system of equations, we suppose that θ2 5 0, which represents one of the objectives of such a system. Then, we easily obtain:

x1

5

p

λ 1 θ1

(20.7)

x3

5

pλ μðp 1

θ1Þ

(20.8)

Getting x1 and x3, it will not be evident to get x2. However, it can be obtained using simulation. Thus, to find the optimal number of devices, x2, we used the Monte Carlo simulation method. Such experiments are a broad class of computational algorithms that rely on repeated random sampling to obtain numerical results; typically one runs simulations many times over in order to obtain the distribution of an unknown probabilistic entity.
To do that simulation, we adopt a number of simulation parameters under a Cbased discrete event simulator. The different parameters are specified in Table 20.1.
To find the optimal x2, we focus on the evaluation of two metrics: the mean and the variance of the number of devices. Varying the number of M2M devices between N_M2M_MAX and N_M2M_MIN, we evaluate the mean and the variance obtained. Many seeds were tested and the results were similar. Figure 20.6 shows the obtained results.
As shown in this figure, optimal values of the mean and the variance are obtained for a number of M2M devices equal to 53 (i.e., N 2 1). This value will be considered in the rest of the chapter. The value of x2 is the optimal value we should have using the appropriate ACB factor.

590 CHAPTER 20 A random access model for M2M communications

35

30

Number of successful RA

25

20

15

10

5 0
FIGURE 20.6 Successful RA.

10

20

30

40

50

60

Number of M2M devices in x2

6.3 LOCAL STABILITY

We first start, in this subsection, by linearizing our model,nexpressed in the system

(Equations 20.4À20.6), around the equilibrium point o

x1

5

λ p 1 θ1

; x2

5N

2 1;

x3

5

pλ μðp 1 θ1Þ

obtained in the previous section. We, then, analyze its stability

around this po0int. 1 x1
Note X 5 @ x2 A the state vector of the system and p the entry variable or the

x3

controller output of the system. To analyze the stability of such system, we first

should rewrite the previous system in the state space form:

& X_ 5 AX 1 B Y 5 CX

(20.9)

The matrices A, B and C are respectively the system matrix, the control matrix and output matrix [26]. Matrix A relates how the current state affects the state change X_ . It is also called the Jacobian Matrix, which helps to determine if the system is stable or not. To analyze the system stability, we compute the eigenvalues of this Jacobian matrix. If the eigenvalues are all negatives, then the system is said to be stable.
The matrix B determines how the system input affects the state change and finally the matrix C determines the relationship between the system state and the system output.

6 Random access model for M2M applications 591

Matrices A, B and C are given as follows:

0

1 01

@f1 @f1 @f1

@f1

A

5

BBBBBBBBB@

@x1 @f2 @x1 @f3

@x2 @f2 @x2 @f3

@x3 @f2 @x3 @f3

CCCCCCCCCA;

B

5

BBBBBBBBB@

@p @f2 @p @f3

CCCCCCCCCA;

0 1
C5@0 0

0 1 0

1

01

0

x_1

0 A; and X_ 5 @ x_2 A

1

x_3

@x1 @x2 @x3

@p

Then,

0

2p 2 θ1

A 5 BBBBBBBBB@

p 0

12x2 0 0

1

2e

N

@1 2

x2A N

2

θ2

12x2 0

1

e N @1 2 x2A

N

1

0

0 2μ

CCCCCCCCCA

and

B

5

0 @

2x1 x1 0

1 A

As some eigenvalues of A are negative, the system represented in (20.9) is unstable. This means that a controller is necessary to allow the convergence towards such desired equilibrium points. Before doing that, let analyze now the controllability and the observability of our system model. The controllability and the observability represent, indeed, two major concepts of modern control system theory [27]. R. Kalman introduced these two concepts in 1960 [28]. A system is said to be controllable if we will be able to do whatever we want with the given dynamic system under the control input (i.e., we will be able to change the system states by changing the system input). On the other hand, a system is considered observable if the system states can be deduced from the system observation.
Formally, a system with a number n of states is said to be observable if rank½C CA CA2?CAn21T 5 n, where A and C are the matrix defined previously.
Concerning the controllability, a system with n states is considered controllable if rank ½B AB A2B?An21B 5 n.
It can be easily verified that the system described in (Equations 20.4À20.6) is controllable and observable. This means that a feedback controller can be designed for this system.

6.4 CONTROLLER DESIGN
In the following, the regulation of the appropriate ACB factor guaranteeing a number of devices around the desired value (x2 5 N 2 1) is achieved using a discrete PID (Proportional Integral Derivative) controller [29]. The reduced complexity of the PID controller and its efficient design, even in some classes of nonlinear systems, allow this controller to be one of the most common controllers used.

592 CHAPTER 20 A random access model for M2M communications

The discrete PID controller can be written as follows [29]:

uðnÞ

5

Kp

eðnÞ

1

Ki

Xn
k50

eðkÞ

1

Kd

ðeðnÞ

2

eðn

2

1ÞÞ

(20.10)

where n, u, e, Kp, Ki and Kd represent respectively the discrete step at time t, the controller output, the difference between the measured value and the reference

value (the objective or the set point value), the proportional gain, the integral gain

and the derivative gain.

There are several methods used for tuning the PID parameters in order to get

the ideal response of the system. We considered the Ziegler-Nichols method,

which has proven to be efficient for many problems [30]. First of all, derivative

and integrative terms are set to zero and proportional gain is increased until a

stable oscillation around the set point (x2 5 N 2 1) is obtained on the output sys-

tem. Once the maximum gain “Kc” is achieved and the oscillation period “Tc” is

obtained, we can easily calculate the proportional, integrative and derivative gains

using the following equations:

8 < Kp 5 0:6Kc

:

Ki Kd

5 2Kp=Tc 5 KpTc=8

(20.11)

7 PERFORMANCE EVALUATION

7.1 SIMULATION PARAMETERS

Having described the details of our proposed ACB scheme and to verify the effectiveness and the accuracy of the proposed model, we now direct our focus on evaluating its performance using computer simulations using ns-3 [31].
In order to evaluate the system performance, we assume that MTC devices access the network following a Beta-based traffic. That type of traffic models a sudden M2M traffic surge where a large number of MTC devices access the network in a synchronized manner [32].
We assume that a total number (NMAX) of MTC devices activate between t 5 0 and T with the time limited beta distribution described in Equation (20.12):

f

ðtÞ

5

tα21ðT 2tÞβ21 Tα1β21 Betaðα;

βÞ ;

(20.12)

where α . 0; β . 0; and Betaðα; βÞ is the beta function with parameters α and β.

Then, the number of M2M arrivals (i.e., access intensity) in the ith access

opportunity is given by:

ð ti11 access intensityðiÞ 5 NMAX f ðtÞdt;
ti

(20.13)

7 Performance evaluation 593

Table 20.2 Simulation Parameters
Parameters
Simulation Time / Distribution period (T) Number of eNBs Cell bandwidth N: Total number of preambles Maximum number of preamble retransmissions Arrival distribution Beta function parameters Total number of MTC devices Interarrival interval ac_BarringTime Processing_Time

Settings
10 s [32] 1 5 MHz 54 10 Beta distribution over T α 5 3; β 5 4 [32] 5000; 10000 1 frame (10 ms) 4s 1 ms

where ti is the time of the ith access opportunity. The general parameter settings are summarized in Table 20.2. To validate our model while evaluating the performance of ACB scheme, we
have shown the results in terms of collision probability, success probability, number of simultaneous RACH attempts, number of successful ACB tests per second and number of devices abandoning the system after reaching maximum preamble retransmissions. Two different scenarios are considered: a first one where no RAN overload control is applied (e.g., ACB control) and a second one where devices should pass the ACB test before performing random access.
Let’s now present methods for computing analytically collision and success probability. Suppose that there are N available preambles in each RA opportunity and x MTC devices present during this opportunity (x includes new arrivals and preambles retransmissions). The success probability for MTC devices (i.e., probability that a given preamble is chosen by only one user) is, as described in Section 6, equal to F2ðxÞ. Then,

PMsu2ccMess 5 xe2ðx21Þ=N

(20.14)

The idle probability means that no user chooses a given preamble. It is writ-

ten as:



PMidl2eM 5

x 0

e2x=N 5 e2x=N

(20.15)

From (20.14) and (20.15), we can easily derive the collision probability as following:

PMco2llMision 5 1 2 PMsu2ccMess 2 PMidl2eM 5 1 2 xe2ðx21Þ=N 2 e2x=N

(20.16)

To validate the proposed model, we present in the next section a comparison of these values against simulation results.

594 CHAPTER 20 A random access model for M2M communications

Success Probability (%) Success Probability (%)

(A)
60 50 40 30 20 10

Simulation Analysis

(B)
60

50

40

30

20

10

Simulation Analysis

0

0

0

2

4

6

8

10

0

2

4

6

Time (s)

Time (s)

FIGURE 20.7

Success probability (NMAX 5 10000): (A) without ACB, (B) with ACB.

8

10

7.2 NUMERICAL RESULTS
In this section, we present the simulation results obtained for the number of simultaneous RACH attempts, the number of successful ACB tests per second, the number of abandons, the success probability and collision probability.
Figures 20.7 and 20.8 show the simulation results obtained respectively for success probability and collision probability against those of theoretical models. It can be seen easily that simulation results match the theoretical ones whenever an ACB control is applied or not and thus validate our proposed model.
From Figure 20.8, we can also see that collision probability, for 10000 MTC devices, exceeds 80% when no RAN control is applied, whereas this probability remains close to 20% when applying an ACB control. This demonstrates the efficiency when using an ACB control process.
Figure 20.9 illustrates the number of simultaneous RACH attempts which includes new arrivals due to beta traffic and preamble retransmissions. This number increases considerably when the total number of devices increases. In fact, when NMAX 5 10000, the number of RACH attempts reaches 180 when no access control is applied. This is almost four times the total number of available preambles (i.e., 54), which results in a huge number of collisions (see Figure 20.8). At the same time, it can be clearly seen that when applying ACB control, this number remains close to the optimal value (i.e., 53) and doesn’t exceed 60. Indeed, the M2M RACH attempts are

7 Performance evaluation 595

(A)
100
80

Simulation Analysis

(B)
100

80

Simulation Analysis

Collision Probability (%) Collision Probability (%)

60

60

40

40

20

20

0

0

0

2

4

6

8

10

0

2

4

6

Time (s)

Time (s)

FIGURE 20.8 Collision probability (NMAX 5 10000): (A) without ACB, (B) with ACB.

8

10

(A)
180
160

N_MAX=10000 N_MAX=5000

(B)
180
160

140

140

Nbr of RACH attempts Nbr of RACH attempts

120

120

100

100

80

80

60

60

40

40

20

20

0

0

0

2

4

6

8

10

0

2

4

6

Time (s)

Time (s)

FIGURE 20.9

Number of simultaneous RACH attempts: (A) without ACB, (B) with ACB.

N_MAX=10000 N_MAX=5000

8

10

596 CHAPTER 20 A random access model for M2M communications

Cumulative Number of arrivals per second Cumulative Number of successful ACB per second

(A)
2000
1500

(B)
2000 N_MAX=10000
1500

N_MAX=10000

1000

1000

500

500

0

0

0

2

4

6

8

10

0

2

4

6

8

10

Time (s)

Time (s)

FIGURE 20.10

Number of beta arrivals per second vs. number of successful ACB tests per second.

spread in bigger intervals, which results in a reduced collision probability (Figure 20.8). This demonstrates the effectiveness of the proposed controller as it helps in regulating the ACB factor according to the overload level.
Figure 20.10 illustrates the number of successful ACB tests per second compared with the number of arrivals per second. We can clearly note that the number of MTC devices that pass the ACB test is largely lower than the one of the beta arrivals during one second. It results in reducing the number of RA trials and consequently low collision probability is observed (see Figure 20.8).
Figure 20.11 shows the number of MTC devices that abandon the system after reaching a maximum number of preamble retransmissions. This number is equal to zero when NMAX 5 5000; however, it increases considerably (reaches 60) when NMAX 5 10000. This is because of the huge number of simultaneous RACH attempts as described in Figure 20.9. In case of applying an ACB control, there is no abandon, which is one of the objectives of our proposed model.

8 CONCLUSION
In this chapter, we propose a solution to access network congestion, which is considered to be one of the most critical issues faced by the M2M communications. Such congestion is mainly caused by random accesses performed simultaneously. By using only the ACB principles, we proposed a novel fluid-based random access model for MTC devices in order to facilitate devices escaping from continuous congestions.

References 597

(A)
60 50

N_MAX=10000 N_MAX=5000

(B)
60 50

N_MAX=10000 N_MAX=5000

40

40

Nbr of Abandons Nbr of Abandons

30

30

20

20

10

10

0

0

3.0

3.5

4.0

4.5

5.0

5.5

3.0

3.5

4.0

4.5

5.0

5.5

Time (s)

Time (s)

FIGURE 20.11

Number of abandons: (A) without ACB, (B) with ACB) here.

Using the Monte Carlo simulation, we find the optimal number of MTC devices that successfully passed the ACB procedure and wait for an RA attempt. After that, in order to regulate the adaptive ACB factor guaranteeing a number of devices around that reference value, we use a discrete PID controller.
The proposed model is validated using computer simulations under ns-3. Simulation results show that the proposed model can accurately predict the different considered performance metrics (i.e., collision/success probability, number of RACH attempts and number of abandons). Therefore, even when the arrival rate increases significantly, the number of RACH attempts remains close to the optimal value and the system reaches a zero number of abandons.
Finally, it should be stressed out that even if the tuning of the PID controller considers the real system model, exploiting the structure of the proposed model should allow enhancing further the performance of the M2M device RA process. This forms the focus of the authors’ future research work.

REFERENCES
[1] European Telecommunications Standards Institute (ETSI). ETSI TS 102 689 V1.1.1 (2010-08), Machine-to-Machine communications; M2M service requirements.
[2] 3GPP TR 23.888 V1.6.0. Third generation partnership project; Technical specification group services and system aspects; System improvements for machine-type communications. (Release 11); 2011-11.

598 CHAPTER 20 A random access model for M2M communications
[3] Yankee Group. Mobile broadband connected future: from billions of people to billions of things. Commissioned by 4G Americas White Paper; 2011.
[4] 3GPP TS 22.368 V10.2.0. Third generation partnership project; Technical specification group services and system aspects; Service requirements for Machine-Type Communications (MTC); Stage 1. (Release 10); 2010-09.
[5] 3GPP TR 36.912 V11.0.0. Third generation partnership project; Technical specification group radio access network; Feasibility study for further advancements for EUTRA (LTE-Advanced). (Release 11); 2012-09.
[6] 3GPP TS 36.413 V12.0.0. Third generation partnership project; Technical Specification group radio access network; Evolved universal terrestrial radio access network (E-UTRAN); S1 Application Protocol (S1AP). (Release 12); 2013-12.
[7] Alcatel-Lucent. The LTE network architecture: a comprehensive tutorial. Strategic White Paper. Available from: ,www3.alcatel-lucent.com.; 2009.
[8] European Telecommunications Standards Institute (ETSI). Official web site: available from: ,http://www.etsi.org/.; 2015.
[9] Third Generation Partnership Project (3GPP). Official web site: Available from: ,http://www.3gpp.org/.; 2015.
[10] 3GPP TS 23.682 V12.0.0. Third generation partnership project; Technical specification group services and system aspects; Architecture enhancements to facilitate communications with packet data networks and applications, (Release 12); 2013-12.
[11] Ksentini A, Hadjadj-Aoul Y, Taleb T. Cellular-based machine type communication: overload control. IEEE Network 2012;26(6):54À60.
[12] 3GPP TS 36.321 V10.2.0. Medium Access Control (MAC) protocol specification; 2011-06.
[13] Sesia S, Toufik I, Baker M. LTE: the UMTS long term evolution: from theory to practice. 2nd ed. Wiley; 2011.
[14] 3GPP TR 37.868 V11.2.0. Study on RAN improvements for machine-type communications; 2011-09.
[15] Shao-Yu L, Kwang-Cheng C, Yonghua L. , Toward ubiquitous massive accesses in 3GPP machine-to-machine communications. IEEE Commun Mag; April 2011.
[16] Lee K-D, Kim S, Yi B. Throughput comparison of random access methods for M2M service over LTE Networks. In: Proceedings of the 2011 IEEE GLOBECOM Workshop; December 2011. p. 373À77.
[17] Lo A, Law YW, Jacobsson M. Enhanced random-access mechanism for massive machine-to-machine (M2M) communications. In: Proceedings of the 27th meeting of wireless world research forum; October 2011.
[18] Shao-Yu L, Kwang-Cheng C. Massive access management for QoS guarantees in 3GPP machine-to-machine communications. IEEE Commun Lett 2011;15(3).
[19] 3GPP TS 36.331 V10.2.0. Evolved universal terrestrial radio access (E-UTRA); Radio Resource Control (RRC); Protocol specification. (Release 10); 2011-06.
[20] Lien SY, Liau TH, Kao CY, Chen KC. Cooperative access class barring for machine-to-machine communications. IEEE Trans Wireless Commun 2012;11 (1):27À32.
[21] Cheng J-P, Han Lee C, Lin T-M. Prioritized random access with dynamic access barring for RAN overload in 3gpp lte-a networks p. 368À72 GLOBECOM workshops, 2011. IEEE; December 2011.

References 599
[22] Duan S, Shah-Mansouri V, Wong VWS. Dynamic access class barring for M2M communications in LTE Networks, submitted to IEEE global communications conference (GLOBECOM), Atlanta, GA; December 2013.
[23] CMCC TSG R2-113197. Performance Comparison of Access Class Barring and MTC Specific Backoff Schemes for MTC. 3GPP Meeting; 2010-08.
[24] Qiu D, Srikant R. Modeling and performance analysis of BitTorrent-like peer-to-peer networks. In: Proceedings of the 2004 conference on applications, technologies, architectures, and protocols for computer communications (SIGCOMM ’04); 2004. p. 367.
[25] Benaoum HB. h-Analogue of Newton’s binomial formula. J Phys A Math Gen 1998;31:L751À5.
[26] Goodwin GC, Graebe SF, Salgado ME. Control system design, vol. 240. New Jersey: Prentice Hall; 2001.
[27] Ogata K. Modern control engineering. 3rd ed. Upper Saddle River, NJ: PrenticeHall; 1997.
[28] Kalman RE. A new approach to linear filtering and prediction problems, transactions of the ASME. J Basic Eng 1960;82(Series D):35À45.
[29] Astrom KJ, Hagglund T. ISBN 1556179421 Advanced PID control. ISA-The Instrumentation, Systems, and Automation Society; 2006.
[30] Hang CC, Astrom KJ, Ho WK. Refinements of the Ziegler Nichols tuning formula. IEEE ProcÀD 1991;138(2).
[31] NS-3 Consortium. ns-3. Official website. Available at: ,http://www.nsnam.org/.; 2015.
[32] 3GPP TR 37.868 V11.0.0. Third generation partnership project (3GPP). Technical specification group radio access network; Study on RAN Improvements for Machine-type Communications. (Release 11); 2011-09.

