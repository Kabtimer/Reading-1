Journal of Network and Computer Applications 81 (2017) 74–84
Contents lists available at ScienceDirect
Journal of Network and Computer Applications
journal homepage: www.elsevier.com/locate/jnca

Enabling IoT interoperability through opportunistic smartphone-based mobile gateways
G. Aloi, G. Caliciuri, G. Fortino, R. Gravina, P. Pace⁎, W. Russo, C. Savaglio
DIMES - University of Calabria, Rende, Italy

MARK

ARTICLE INFO
Keywords: Internet of Things Interoperability Interconnection Smartphone-centric Computing Smart Objects

ABSTRACT
In the near future, all our everyday things and objects will be both connected to the Internet and equipped with enough sensing, acting and processing capabilities to exploit the full potential beneﬁts of the so called Internet of Things (IoT) paradigm. Even the simplest objects will become “smart” because they will be interconnected to other objects to share and collect data from the environments in which they are placed thus paving the way to novel application services, computing and communication scenarios.
In this context, interoperability among diﬀerent standards and communication technologies is still a signiﬁcant challenge that we have started to address by proposing a smartphone-based mobile gateway acting as a ﬂexible and transparent interface between diﬀerent IoT devices and the Internet. The presented uniﬁed, highlevel and extendible software architecture supports opportunistic IoT devices discovery, control and management coupled with data processing, collection and diﬀusion functionalities.
A speciﬁc testbed on common smartphones with diﬀerent hardware and software capabilities was deployed to evaluate the real feasibility of the designed solution measuring the system performance in terms of energy consumption, memory and CPU usage in high and low load scenarios. According to the obtained results, the implemented software architecture for multi-standard and multi-technology interoperation presents a reduced use of hardware resources in front of a relatively high energy consumption value, mostly due to the simultaneously active radio interfaces combined with a small battery capacity, that limits the smartphone lifetime. Nevertheless, the presented general approach is still remarkable because this latter aspect will most likely be exceeded, in a short time, thanks to daily technological advancements in both batteries and radio interfaces.

1. Introduction
The advancing Internet of Things (IoT) age aims to enhance the lifestyles experienced until today by combining the “smart” objects in our environment into a fully integrated future Internet (Atzori et al., 2012). The dominance of people-to-people communications will soon be overcome by device-to-device communications. In fact it is expected that the IoT paradigm will involve billions of smart-devices with processing, sensing and actuating capabilities able to be connected to the Internet (Fortino et al., 2012). The number of things connected to the Internet will be much greater than the number of human beings, and things will become the major producers and consumers (prosumers) of data traﬃc. IoT is a paradigm that was born at the edge of the network where there are things that are able to obtain data or information from the real physical world. These things can either be directly connected (using wireless technologies e.g. 3G, LTE, 5G, Wi-

Fi) or they can be connected through a gateway, forming a local thing network (LTN), to connect to the Internet. Through a network, these objects can be connected to other devices to analyze data obtained from the information sensing equipment and make independent decisions (Fortino and Trunﬁo, 2014; Fortino et al., 2014, 2015). Providing a good connection to such a wide number of devices is still challenging; thus, in this direction we believe that smartphones could play a key role since they possess many useful features for this purpose. For example, smartphones are always connected, have a mass diﬀusion, are equipped with several communication interfaces (e.g. Wi-Fi, NFC, Bluetooth) and have signiﬁcant storage and computing capability (Aloi et al., 2014). All these features make them ideal candidates to carry out the delicate task of linking the world of the Internet and the world of “things”. In particular, smartphones can be considered as a fundamental block in making the so-called Opportunistic IoT paradigm (Guo et al., 2013) that extends the concept of Opportunistic Mobile

⁎ Corresponding author. E-mail addresses: aloi@dimes.unical.it (G. Aloi), gcaliciuri@dimes.unical.it (G. Caliciuri), fortino@dimes.unical.it (G. Fortino), rgravina@dimes.unical.it (R. Gravina),
ppace@dimes.unical.it (P. Pace), wrusso@dimes.unical.it (W. Russo), csavaglio@dimes.unical.it (C. Savaglio).
http://dx.doi.org/10.1016/j.jnca.2016.10.013 Received 13 July 2016; Received in revised form 30 September 2016; Accepted 18 October 2016 Available online 20 October 2016 1084-8045/ © 2016 Elsevier Ltd. All rights reserved.

G. Aloi et al.

Journal of Network and Computer Applications 81 (2017) 74–84

Social Networks (Vastardis and Yangi, 2012) real, by merging human users (carrying mobile devices) and smart things. In this exciting context, novel and challenging issues related to the opportunistic communication among IoT devices, need to be addressed in order to provide a strong interoperability level between diﬀerent standards and technologies to support (i) the bi-directional information exchange, (ii) the multi-protocol interaction (iii) the mobility of people and things (iv) the dynamic creation and activation of local and transient new IoT services.
Although in recent years, many solutions have been implemented at diﬀerent levels thanks to the extensive interest of both Industry and Academia in researching and developing IoT technology, there is no reference standard for IoT platform technology even if many eﬀorts in this direction have also been made by the European Community under the ICT-30 call (Internet of Things and Platforms for Connected Smart Objects) of the Horizon 2020 research and innovation programme and by the IEEE P2413 working group on Standard for an Architectural Framework for the Internet of Things (IoT).
Lack of interoperability causes major technological and business issues such as impossibility to plug non-interoperable IoT devices into heterogeneous IoT platforms, impossibility to develop IoT applications exploiting multiple platforms in homogeneous and/or cross domains, scarce re-usability of technical solutions and, user dissatisfaction.
Starting from this context, we propose a Smartphone-based Gateway solution for IoT Interoperability. It is based on a multistandard, multi-interface and multi-technology communication framework able to integrate diﬀerent communication standards and radio interfaces in a whole platform.
We developed a software architecture to support a complete smartphone-centric gateway application and ﬁnally, we implemented a real testbed in order to measure the performances of the proposed solution in terms of energy consumption and resources occupancy in diﬀerent load conditions with the aim of drawing signiﬁcant discussions on the real feasibility of such integrated communication architecture.
A ﬁrst embryonic version of our proposal was presented in Aloi et al. (2016) and in this work we extended the contents adding (i) new discussions on the requirements for the interoperability of such opportunistic mobile gateways, (ii) more details on the architecture of the developed application (iii) realistic use cases based on funded ongoing research projects and (iv) new results in high load data traﬃc scenario.
The rest of the paper is organized as follows. In Section 2 we review recent literature of IoT interoperability solutions based on gateways. In Section 3 we propose an Opportunistic Smartphone-based Gateway approach for IoT Interoperability able to handle and use several communication interfaces in a uniﬁed fashion. In the same section there is also a description of the implemented software modules and components within the proposed architecture. The testbed implementation and the performance evaluation are shown in Section 4 whilst Section 5 that concludes the paper also presents future research directions.
2. Motivations and related works
Global interoperability of hardware/software infrastructures is usually based on standards (Fortino et al., 2008). However, as the IoT is an evolving technology without any speciﬁc central technical coordination and control, it is foreseen that many solutions and (pseudo) standards will be developed and proposed in the coming years leading to massive heterogeneity. Indeed, currently many diﬀerent (quasi) standards do exist in the IoT arena from several perspectives that meet sectoral needs which refer to worlds that do not talk between themselves.
IoT scenarios will be characterized by a high-degree of heterogeneity at any level (device, networking, middleware, application

service, data and semantics), preventing IoT solutions from interoperating (Al-Fuqaha et al., 2015).
At the device level, several communication solutions are currently used. Traditional ubiquitous communications (i.e. 3/4/5G cellular communications and Wi-Fi technologies) are evolving to support higher bandwidths and lower cost while other mobile phones, that have already embedded commercial technologies (e.g. Bluetooth, NFC, ANT+), are opening up new possibilities for the IoT (i.e. Bluetooth v4.x and upcoming v5). Alongside these, it is also necessary to consider traditional communication protocols and mechanisms for sensors, actuators and smart objects (e.g. ZigBee, ISA100, WirelessHart, IEEE802.11ah, Z-Wave, ZigBee Smart, 802.15.4e, ISA100.11a) together with other non-standard proprietary solution (e.g. SIGFOX, LoRa).
At the network level there are many solutions for encapsulation (e.g. 6LowPAN, 6TiSCH, 6Lo, Thread) and routing (e.g. RPL, CORPL, CARP).
At the middleware level, the situation is not very diﬀerent and there are several competing solutions (e.g. FIWARE, FedNet, Ubicomp, SmartProducts, ACOSO, SkyNet) also including cloud computingbased infrastructures (e.g. Amazon EC2, Google App Engine, Xively, MS Windows Azure).
The data and semantics level also presents high heterogeneity (e.g. WSDL, JSON, UD CAP, uCode Relational Model, RDF, OWL, W3C Semantic Sensor Network XG) and the software realm is even richer including many basic software technologies (e.g. TinyOS, Contiki, FreeRTOS, eCos, Android, Ubuntu, Java, WebRTC, REST, WAMP and, Django).
Finally, from the hardware perspective, the technological state of the art is also very heterogeneous as many commercial solutions have already been developed (e.g. Arduino, BeagleBoard, TelosB sensor mote, RaspberryPI, pcDuino, Cubieboard, Libelium waspmote) and new digital business opportunities will arise and evolve as software is adapted to meet changing needs by designing interoperable ﬂexible systems based on the Software Deﬁned Radio (SDR) paradigm (Aloi et al., 2011; Costanzo et al., 2013).
Although many IoT-oriented projects have either dealt with, or are currently dealing with, developing IoT architectures in any or speciﬁc application domains (Internet Of Things—Architecture,, Collaborative Open Market to Place Objects at your Service, Web of Objects), not many projects have addressed or are addressing interoperability/ integration issues (e.g. iCore-Butler (uBiquitous,), INTER-IoT (INTER-IoT European project, 2020)).
This panorama, which remains very heterogeneous and complex, is acting as an inhibitor to the mass-market diﬀusion that, on the contrary, asks for clear use-cases, ease of use and low price devices and solutions (Liu et al., 2015). Therefore, all these new areas suﬀer from “young technology” problems and have evident diﬃculties in becoming established on a large-scale market.
On the contrary, the smartphone market continues to dominate the scene, thus all the developers and creators of new services and technologies are working to have a close interaction with the smartphone world, even if most of them proposes proprietary solutions causing the lack of a comprehensive strategy. Since smartphones are increasingly present in people's pockets and home and they are often already equipped with several radio interfaces to communicate with diﬀerent devices becoming the ideal candidates to collect, process and forward data coming from wireless IoT devices or sensor networks (Gaggioli et al., 2013; Silva et al., 2013; Aloi et al., 2014). In particular, an interesting literature overview on an improved framework for smartphones using Internet of Things is presented in Bhatkal and Bharati (2014) and the authors highlighted the close link that exists between these worlds.
Actually, several works involving smartphones in IoT scenarios have been conducted. One ﬁrst approach on smartphones used as a mobile and autonomic service gateway is presented in Golchay and

75

G. Aloi et al.

Journal of Network and Computer Applications 81 (2017) 74–84

Mou (2011). The authors propose a service-oriented middleware approach where smartphones provide gateway services to bridge the gap between IoT services and Cloud services. However, this work is mainly focused on few issues such as collaborative event-based context management, adaptive and opportunistic service deployment and invocation, multi-criteria (user and performance-oriented) optimization decision algorithm.
An additional example of the gateway approach is given in Santos et al. (2016) where the authors present a novel mobile gateway solution for ubiquitous m-Health scenarios where a body sensor network (BSN) monitors a person in real-time and collects information about his environment (i.e. user location, user heart rate, fall detection). Each piece of information is mapped to an individual service on the mobile gateway application deployed in a smartphone. The mobile gateway is responsible for sending the information of each service to a caretaker intelligent personal assistant (IPA) platform. In this latter contribution a user centric approach is followed while collaborative and opportunistic aspects are lacking.
Hub-based approaches for IoT interoperability are presented in Blackstock and Lea IoT (2014) and in Talavera et al. (2015). In the former, the authors advocate the use of IoT “hubs” to aggregate things using web protocols, and suggest a staged approach to interoperability while, in the latter, a generic mobile middleware for Internet of Mobile Things (IoMT) is proposed to provide scalable and reliable mobile communication and data processing capabilities to mobile smart objects.
Another interesting protocol and architecture proposal to bring things into the IoT is presented in Asensio et al. (2014). In particular, the paper proposes the use of an IoT gateway as a fundamental component, within IoT architectures, to provide seamless connectivity and interoperability among things. In such a case, however, the IoT gateway is not a smartphone but an embedded computer running Linux OS. Following the same philosophy of the authors, our main goal is related to the porting of all the functionality of an IoT gateway on a common smartphone. Thus, we propose an architecture that is able to interact with all current major IoT technologies and which is suﬃciently ﬂexible to host the technological advances that will come by exploring the possibility of creating a smartphone-centric mobile gateway that can organise the current panorama according to a simple paradigm: “my world in my pocket”.
Today's smartphones certainly have a set of potentialities to support gateway services (i.e., they are always interconnected, they host sophisticated operative systems and they have many connection interfaces) but they need to overcome some critical obstacles such as limited computation, memory and, last but not least, battery life that is inexorably compromised by concurrent use of multiple communication interfaces.
3. Smartphone-based gateway to support opportunistic IoT scenarios
This section presents the main proposal of this work consisting of the design of a Smartphone-based Gateway solution to support diﬀerent IoT communication scenarios mainly related to the seamless interoperability and opportunistic data gathering/distribution and dynamic service creation, through a uniﬁed smartphone-centric application able to support multi standard, multi interface and multi technology communications. According to this vision, we ﬁrst describe the requirements for interoperable opportunistic gateways in diﬀerent application scenarios and then we provide a high level description of the proposed software architecture further detailing some important implementation aspects.
3.1. Requirements for interoperable opportunistic gateways
The following IoT application scenarios are introduced to motivate

the need for the proposed research on smartphone-based gateways and for eliciting their fundamental requirements; in particular, they also consider the possibility of having intermittent connectivity, enabling interaction between smart objects and mobile users (Wirtz, 2014; Zhang, 2016)
• Data gathering—In a smart health scenario, doctors need to collect data from patients' medical IoT devices (pulsioximeters, blood pressure monitors, balances, smart watches, ﬁtbit devices, etc). Doctors may perform such data collection whilst moving and in diﬀerent locations (hospital, medical oﬃce, patients' home). Such devices are usually heterogenous both in the communication technology and in the access interface (or speciﬁc high-level interaction protocol).
• Data distribution—In an outdoor smart infotainment scenario, a nomadic user wants to use a smart screen to better view a video content available on her/his smartphone or to share the view with other users. As soon as the user comes close to an IoT screen device, the media is sent to the screen and is thus displayed.
• Device-to-Device interaction—In a smart home scenario, the temperature value detected by a bluetooth ambient sensor has to be shown on a close TV screen (thus acting as temperature display as the sensor does not have a display) only supporting Wi-Fi communication. This interaction may be enabled (activated and supported) by the presence of the gateway, which is able to mediate between the two heterogeneous devices and implement a higher-level application logic, i.e. the display of the temperature on the nearby smart TV screen.
• Pervasive dynamic services—In a smart city scenario, (smart) roads, equipped with IoT devices measuring local real-time pollution information, provide air quality information that can be exploited by (smart) cars that, on the basis of the air quality level, can automatically lock, unlock, raise, or lower their side windows. The mobile gateway (inside the car) can therefore enable the collection of pollution information from the road IoT devices, the processing of such data, and interaction with the car control system. Therefore, multiple IoT devices and the co-located gateway interact to provide co-located transient services. Such services could be pre-programmed or created following a goal-driven and smart-based approach (Mayer et al., 2016).
On the basis of such typical and basic IoT scenarios, the following requirements for opportunistic mobile gateways have been deﬁned:
• Multi-communication technology—supporting communication interoperability by the use of diﬀerent communication standards and interfaces (e.g. Zigbee, Bluetooth, Ant+, NFC, etc);
• Multi-protocol interaction—supporting device access through the adaptation of heterogeneous high-level device protocols;
• Bi-directional information exchange—enabling both data collection and dissemination, and device control;
• Physical mobility—enabling anywhere opportunistic interactions; • Co-located transient service execution—triggering the (dynamic)
creation and activation of local and transient IoT services.
3.2. System architecture
Fig. 1 shows a future communication scenario in which widely available and powerful smartphones, which are already present on the market, can play a vital role in our daily life by helping us in diﬀerent situations. The proposed smartphone-centric system architecture can use diﬀerent communication technologies to interact with several human contexts by acquiring data from diﬀerent IoT devices and sensors and provide them to speciﬁc user-oriented services through Internet and Cloud connections.
The main challenge of this communication architecture is the

76

G. Aloi et al.

Journal of Network and Computer Applications 81 (2017) 74–84

Fig. 1. General communication architecture.

seamless integration and interoperability of such variegated communication standards, already supported by diﬀerent IoT devices and sensors speciﬁcally designed for precise purposes at diﬀerent times. For example, by focusing on communication technology, IoT devices (i.e., Smart Tv, air conditioners, video projectors, printers, etc.) are based on a standard Wi-Fi communication interface; most of recent medical devices support the ANT+ (ANT, 2016) standard; lifestyle IoT devices are mostly based on Bluetooth SMART (Decuir, 2014) and NFC (Sethia et al., 2014) whilst environmental sensors, whose technology is less recent than the other ones, make use of ZigBee (ZigBee Alliance, 2014) high level communication protocol based on the IEEE 802.15.4 standard.
The integration, harmonization and interoperability of such dissimilar communication protocols and standards represents the main issue to be addressed in order to fully realize the exciting IoT vision by actually taking advantages from the potential oﬀered by modern smartphones equipped with multiple radio interfaces.
3.3. Gateway architecture
In this section we describe the general architecture of the smartphone-centric mobile gateway application that is mainly constituted by (i) a Management GUI through which the user can control through commands and receive notiﬁcations from IoT devices and sensor nodes, (ii) an Application Services to start a set of diﬀerent services according to a speciﬁc application scenario, (iii) a Communication, Coordination and Management Brain (CCMB) able to acquire data from diﬀerent interfaces and to control several devices. In particular the CCMB module consists of three main logical blocks that can interact with each other as shown in Fig. 2:
• The Communication block handles the reception and transmission of messages over the air, and manages the radio duty cycling. It is formed by a series of decoders for incoming packets and a series of encoders for outgoing packets. Each message received or sent is initially handled by the radio controller that provides a common interface on a speciﬁc radio adapter that can be dynamically loaded to support several communication technologies such as Bluetooth SMART, ANT+, IEEE 802.15.4, ZigBee, NFC, Wi-Fi, Z-wave.
• The IoT Device Management block acts as an interface to the IoT

devices by creating periodic timers when the remote sensing operation on the IoT devices is required by a speciﬁc user or when a speciﬁc command message needs to be send to an IoT device. The controller within this block can handle a variety of IoT devices regardless of their hardware speciﬁcations through the appropriate interfaces by implementing the speciﬁc high level protocol for each device. This ensures modularity and eﬃciency. The controller also uses a BuﬀerPool to store the readings that become available for further applications. Finally, the Device Registry contains a list of each active IoT device to connect to in order to receive information or to send control messages.
• The Coordination Manager block, which derives from Aiello et al. (2011), is in charge of the management of the interaction between the IoT device Management and Communication modules. It includes the following blocks: 1. Event dispatcher: it triggers when a particular event occurs, such as the discovery of new nodes or a particular alarm (e.g. temperature monitoring and the alarm is triggered when the temperature falls under a speciﬁc threshold). 2. Function datamodel: it represents the available functionalities for each speciﬁc IoT device, such as the independent speciﬁcation of sampling rates for multiple IoT devices. 3. Message Datamodel: it is used to forward a message after a particular event or any user action (e.g. it is possible to receive a message with the average value of the performed measurements or a message that contains the new discovered IoT devices or a generic error message) 4. IoT network control API: it represents the interface for developers through which it is possible to control, conﬁgure and reset the IoT Device.
4. Testbed implementation
In this section we describe the testbed implemented to measure the performances of the proposed IoT mobile gateway application with the aim of validating the overall system architecture. In particular, we ﬁrst detail the implementation of the software architecture within the smartphone-based gateway, then we describe a couple of real use cases where the presented software architecture was exploited and, ﬁnally, we measure the performances of our gateway by discussing the

77

G. Aloi et al.

Journal of Network and Computer Applications 81 (2017) 74–84

Fig. 2. Software architecture of the smartphone-centric gateway.

Fig. 3. Speciﬁc implementation of the smartphone centric gateway application. 78

G. Aloi et al.

Table 1 Devices and application services in different use cases.

Use case

Devices

Communication Service

Smart Health

Shimmer wearable sensors
Fitbit Flex Bangle Diagnostic Scale BF800 Heart rate PM250 (Heart rate measurement PM250)

SPINE Bluetooth

Smart Street

Waspmote Ultra Low power sensors OBD II dongle Bluetooth (The ODB II home page)

Wi-Fi Bluetooth

Application Service Lifestyle monitoring
Car Window automatic control

obtained results.
4.1. Application architecture
Fig. 3 summarizes an implementation of the smartphone-based gateway architecture presented in Section 3.3 constituted by the following modules:
• Manager—it includes the functional software modules. It starts all software blocks by also handling the logic functionalities of the application at a high level. This module is an implementation of the Coordinator Manager depicted in Fig. 2.
• Communication Service Engine—it creates ﬁve bound services (i.e., ZigBee, SPINE, Wi-Fi, Bluetooth and 3G/LTE) in this speciﬁc implementation, by handling the logical functionality of access to data and measures. The bound services are based on a standard client-server communication model by allowing other components and applications to be connected, to send requests and receive replies. This module represents an implementation of the Communication block depicted in Fig. 2.
• IoT Device Management—it is in charge of the data interpretation exchange, control commands execution, and dynamic adapters loading of discovered devices. This module is an implementation of the IoT Device Management block depicted in Fig. 2. It is formed by three software sub-modules: 1. Protocol Device—it implements the data exchange protocol to which the speciﬁc request is addressed (e.g. reset sensor, read accelerometer measure, reset gateway). Furthermore it addresses the request to the speciﬁc sensor/platform/gateway by correctly interpreting each speciﬁc data frame structure. 2. IoT Device Board Controller—it is in charge of the dynamic device adapter loading by setting the speciﬁc data structure for each new device, adding it to the protocol device module. 3. Message Handler—it handles the communication between services and GUI by favouring the message passing (e.g. measures, errors, requests failure) from the IoT devices to the graphical interface. It also allows the diﬀusion of control messages from the GUI to the IoT devices.
• GW database—it is used to store the acquired measurements on a local database on the smartphone in order to visualize and manage the acquired data; it is implemented by using SQLite software library.
• Graphical User Interface—it handles an easy interaction with users. Through these modules it is possible to show all measurements and access all settings of the software modules; this module is an implementation of the Management GUI depicted in Fig. 2.

Journal of Network and Computer Applications 81 (2017) 74–84
• Application Services—it allows for the starting of diﬀerent bound services and to manage them through a speciﬁc GUI in order to show all the performed measurements and to send the control commands to the IoT devices; this module is an implementation of the Application Services block depicted in Fig. 2.

4.2. Use cases

In this section we describe two reference use cases (Smart Health and Smart Street) in order to further demonstrate the ﬂexibility and adaptability of the proposed software architecture. In particular the considered use cases represent fundamental building blocks of ongoing funded research projects.
• Smart Health—In a smart health scenario, assisted livings can perform measurements of multiple physiological parameters using modern wireless medical devices (e.g., weight scale, blood pressure monitor, oxymeter, spirometer, ECG, glucometer, wearable lifestyle devices) connected to the mobile Smartphone-based Gateway through a Bluetooth connection. Measures are sent in real time to a central server via the mobile gateway installed on a common smartphone, so that, doctors can easily evaluate the results (by web access to a speciﬁc medical platform) and, on the basis of the patients’ condition, are able to interact with them and modify their treatments. Such a realistic and challenging scenario is being developed within the INTER-IoT project (INTER-IoT European project, 2020) with the aim of integrating, in a transparent way, two diﬀerent e-Health platforms ((e-Care Nuvola It) and BodyCloud (Fortino et al., 2014)) that share some high-level characteristics while they diﬀer in both objectives and technology. This integration supported by the proposed mobile gateway architecture will produce a full-ﬂedged m-Health integrated platform on top of which multitudes of m-Health services could be developed and delivered.
• Smart Street—A smart street environment in the city of Cosenza (Italy) has been designed and implemented within the Res-Novae project (The RES-NOVAE,). The goal of this project is to provide all citizens with a series of services by covering particular areas of the city with an infrastructure characterized by a set of fourteen computational nodes and seventy wireless Waspmote sensors nodes. This infrastructure is used to measure the concentration of CO, CO2, NO, O3, temperature, relative humidity and luminosity. Furthermore, all citizens have access to all information through a web portal. In this context, the proposed Smartphone-based Gateway application installed on a car, can obtain the measurements from the roads on the Wi-Fi link and use them to automatically raise or lower the car windows according to the air quality level by using the Bluetooth service to interact with the OBD-II bluetooth dongle installed on the car.
Table 1 synthesizes the diﬀerent technologies and the application services supported by the two use cases integrated through the proposed mobile gateway.

Table 2 Smartphones used for the testbed.

Samsung Galaxy Samsung

S2

Galaxy S3

CPU
RAM Battery Operating
System

Dual-Core 1.2 GHz
1 GB 1800 mAh Android 2.3.3

Quad-Core 1.4 GHz 1 GB 2100 mAh Android 4.0.4

Gingerbread

Ice Cream Sandwich

Samsung Galaxy S4
Quad-Core 1.9 GHz 2 GB 2600 mAh Android 4.2.2
Jelly Bean

79

G. Aloi et al.

Journal of Network and Computer Applications 81 (2017) 74–84

Fig. 4. Communication scenario for testing the smartphone-centric application.

Table 3 IoT devices connected to the Smartphone-centric application throughout several interfaces.

Interfaces

Bluetooth

SD-Zigbee Wi-Fi

Low Load Scenario 2 Fitbit Flex 1 Scale Beurer 74822 BF 3 Shimmer

3 Waspmote XBee ZB-Pro

1 Samsung Air Conditioner 1 Samsung Smart TV

High Load Scenario 8 Shimmer

6 Waspmote XBee ZB-Pro

1 Samsung Air Conditioner 1 Samsung Smart TV for video streaming

4.3. System performance evaluation testbed
In this section we describe the implemented testbed to evaluate the performances of the proposed solution. In particular, the testbed has been conducted by using three smartphones with diﬀerent hardware and software capabilities listed in Table 2. It is worth noting that none of the used devices represents the cutting edge in the mobile phones market and none has any speciﬁc add-ons, so that they can be considered as representative for a wide range of current common user devices and customers.
We developed an App based on Android OS as described in Section 4.1, able to activate all the communication interfaces available on common smartphones in order to collect data from diﬀerent IoT devices as shown in Fig. 4. In particular, since smartphones available on the market do not include the ZigBee radio interface, we equipped our smartphones with a Micro SD ZigBee card in order to add a new radio interface well suited for communication with environmental IoT

Fig. 5. Screenshots of the mobile gateway application: (a) Main GUI, (b) multiple interfaces choice and activation, (c) data received on a speciﬁc interface. 80

G. Aloi et al. Fig. 6. CPU load by activating all the interfaces in low load scenario.

Journal of Network and Computer Applications 81 (2017) 74–84
devices such as the widely used Waspmote (Waspmote Ultra Low power sensors, Gungor et al., 2007). Furthermore, biomedical and lifestyle data can be acquired by setting the communication on the standard bluetooth radio interface to exchange data with IoT devices such as bangles, pedometers and scales or integrating the SPINEandroid framework (Fortino et al., 2013) within the smartphonecentric application to communicate with speciﬁc Shimmer wearable sensors well designed to acquire high quality, biophysical and movement data in real-time. Finally, the smartphones can also exchange data with a smart TV and an air conditioner through the standard WiFi interface by using a simple oﬀ-the-shelf wireless access point.
All the data from these diﬀerent interfaces are ﬁrstly stored on a local SQLite DataBase (see Fig. 3) before being sent to a remote server throughout a 3 G/4 G interface in order to be further processed and made available to diﬀerent experts in speciﬁc ﬁelds. To support the opportunistic interaction during the mobility of the gateway, a timed scanning procedure has been implemented in order to periodically discovery new IoT devices for data exchange according to the supported bound services as described in Section 4.1. In our testbed the scanning procedure is performed every 60 s as we veriﬁed that this period is good compromise to keep the system suﬃciently reactive

Fig. 7. CPU utilization in low and high load scenarios: (a) Samsung Galaxy S2, (b) Samsung Galaxy S3, (c) Samsung Galaxy S4. 81

G. Aloi et al.

Journal of Network and Computer Applications 81 (2017) 74–84

Fig. 8. Memory usage by using all the interfaces: (a) low load, (b) high load.

Fig. 9. Energy consumption: (a) low load scenario, (b) high load scenario.

Table 4 Average performance values in different load scenarios.

Low load

High load

Smartphone model
Samsung Galaxy S2
Samsung Galaxy S3
Samsung Galaxy S4

CPU % Memory [MB]
8,17 40,22
11,36 48,10
13,69 83,14

Energy % CPU % Memory

[MB]

12

15,01 98,72

12

21,22 111,13

12

26,57 200,96

Energy % 23 21 20

without wasting too much energy. The implemented testbed aims to investigate the potentials of
heterogeneous communication scenarios in which the smartphone gateway application, installed on common smartphones, represents the natural and transparent interface between IoT devices and more complex services platforms. Once the smartphone-centric application

to support all the communication standards within the presented scenario has been designed, we show the smarthphone performances in terms of energy consumption, memory and CPU usage to further discuss the eﬃcient use of such integrated communication architecture.
4.4. Results analysis
Throughout the conducted testbed, the smartphone-centric mobile gateway application collects and forwards data received from diﬀerent sensors and IoT devices on diﬀerent communication interfaces (i.e. see Table 3) for several periods, 360 s long using the Replication Method for Steady-State Simulations (Banks et al., 2010; Pawlikowski et al., 2002). In particular, to evaluate the system performances, we made 10 replications, repeating the test 10 times, initializing and deleting from each one the same way in order to average the traﬃc load distribution due to natural asynchronous data transmission. We set the conﬁdence interval level to 0.95 and we excluded the ﬁrst 60 s from the statistical error computation in order to verify the correctness of the statistical analysis for the obtained results also reducing the system's transient

82

G. Aloi et al.

Journal of Network and Computer Applications 81 (2017) 74–84

eﬀects. According to this approach, all the presented results, satisfy the chosen conﬁdence level after the ﬁrst minute of the test.
We tested two diﬀerent communication scenarios in which the traﬃc load, to be handled by the smartphone-centric application, is low and high. In particular, the high load scenario is generated by using 14 diﬀerent sensors constantly transmitting data and a Smart TV receiving a video streaming (a resolution of 480 p with an average rate of 998 kbps at 25f ps) from the smartphone-centric application on the Wi-Fi interface. On the contrary, the low load scenario presents a smaller number of sensors (9 instead of 14) and it does not support video streaming toward the smart TV that represents the most demanding application.
The GUI of the implemented IoT mobile gateway application is shown in Fig. 5 in which all the communication interfaces can be independently activated to discover IoT devices and sensors able to transmit/receive data to/from the smartphone-centric application.
Fig. 6 shows that the IoT gateway application has a reduced average CPU load regardless of the diﬀerent tested smartphones; certainly the greater the computational capacity of the device, the greater the percentage of CPU load. However since the average CPU load value is around 15% in the case of the most performing smartphone (Samsung Galaxy S4), we can argue that the implemented IoT gateway application is fully supported.
We noted the soundness of the proposed solution by showing the CPU utilization in high load scenario; in fact, looking at Fig. 7, it is possible to appreciate the diﬀerence between the low load and the high load communication scenario that has been activated after 120 working seconds. The greatest CPU value reached in high load conditions is approximately 50% whilst the average value is around 25% making the proposed solution still valid and robust.
We also tested the proposed application in terms of memory usage and signiﬁcant results are shown in Fig. 8a where a maximum memory amount of approximately 85 MBytes is required to run the IoT gateway application on the Samsung Galaxy S4 smartphone in low load scenario. This value is entirely reasonable since that smartphone is equipped with 2 GB of memory. Regarding the high load scenario, Fig. 8b shows a marked diﬀerence between the two scenarios demonstrating that the most performing smartphone uses about 200 MBytes of memory to run the implemented application.
The energy consumption was evaluated by conducting a 30 min long test to make the battery level decrease more evident. Starting with a diﬀerent battery level for each smartphone model, we experienced quite similar behaviour in terms of battery discharge speed as shown in Figs. 9a and b for low and high load scenarios respectively. This result is mostly due to the fact that, even if the most performing smartphone is equipped with a more powerful battery, it also has a bigger screen and a higher CPU load due to more performing hardware characteristics oﬀsetting the beneﬁts of having a bigger battery.
However, the obtained results conﬁrmed the lightweightness of the implemented application that can easily run on common smartphones for several hours; to provide a numerical example, we can refer to the Samsung Galaxy S3 smartphone equipped with a 2100 mAh battery at 3.8 V turning into an energy capacity of 7.98 Wh. In this case, during the whole testing period, we experienced an increase in terms of energy reduction from approximately 12% in low load scenario (see Fig. 9a) to almost 27% in high load scenario (see Fig. 9b). According to this analysis in diﬀerent load conditions, the smartphone lifetime ranges from approximately 2.5 to more than 4 h.
Finally, Table 4 resumes all the measured performances in order to provide a clear and concise view of the conducted work.
5. Conclusion
In this paper a complete mobile gateway software architecture to support IoT interoperability through a smartphone-centric application, has been proposed and deployed. The solution presented can con-

tinuously collect and forward data coming from wireless IoT devices and sensors transmitting over diﬀerent communication interfaces and standards; moreover it can send control messages or data ﬂows, such as video streaming, to neighbouring IoT devices in an opportunistic fashion. The results, obtained through a real testbed on diﬀerent common smartphones, validate the proposed software architecture that is able to act as a data collector, diﬀusion and handler by enabling novel pervasive and transient services without making an excessive use of hardware resources in terms of CPU and memory. At the same time, the testbed has highlighted the existence of a few limitations mostly related to energy consumption which, realistically, can be quickly overcome by the development of more eﬃcient radio interfaces and batteries. In terms of future research, we plan to set a baseline test to compare our proposal with other existing frameworks, once they become available, and to extend the testbed to explore current real limits of such communication architecture by increasing the number of IoT devices and by using cutting edge smartphones and tablets equipped with enhanced radio interfaces (e.g. Bluetooth Low Energy, ANT+). In particular, the wide ﬂexibility of the presented framework is guaranteed by the modular implementation that allows the possibility to extend the framework by adding new bound services (NFC, BLE, etc.) if necessary. Moreover, as the gateway solution is being used in real IoT application use cases (Smart Health of the INTER-IoT project and Smart Street of the Res-Novae project), a future evaluation of such scenarios will provide both useful lessons learned and results to be used to further enhance the proposed gateway.
Acknowledgment
This work has been carried out under the framework of INTER-IoT, Research and Innovation action—Horizon 2020 European Project, Grant Agreement #687283, ﬁnanced by the European Union.
References
Aiello, F., Bellifemine, F., Galzarano, S., Gravina, R., Fortino, G., 2011. An agent-based signal processing in-node environment for real-time human activity monitoring based on wireless body sensor networks. J. Eng. Appl. Artif. Intell. 24 (7), 1147–1161.
Al-Fuqaha, A., Guizani, M., Mohammadi, M., Aledhari, M., Ayyash, M., 2015. Internet of things: a survey on enabling technologies, protocols, and applications. IEEE Commun. Surveys Tutorials 17 (No. 4), 2347–2376.
Aloi, G., Borgia, A., Costanzo, S., Di Massa, G., Loscrí, V., Natalizio, E., Pace, P., Spadafora, F., 2011. Software deﬁned radar: synchronization issues and practical implementation. GogART—ISABEL 2011, 26–29.
Aloi, G., Di Felice, M., Loscrí, V., Pace, P., Ruggeri, G., 2014. Spontaneous smartphone networks as a user-centric solution for the future internet. IEEE Commun. Mag. 52 (December (12)), 26–33.
Aloi, G., Caliciuri, G., Fortino, G., Pace, P., 2014. A smartphone-centric approach for integrating heterogeneous sensor networks, in: International Conference on Body Area Networks BODYNETS, London, Great Britain September 29–October 1.
Aloi, G., Caliciuri, G., Fortino, G., Gravina, R., Pace, P., Russo, W., Savaglio, C., 2016. A mobile multi-technology gateway to enable IoT interoperability, in: IEEE International Conference on Internet-of-Things Design and Implementation (I4T), Berlin, April 4.
ANT+ technology—available on line at 〈http://www.thisisant.com/consumer/ant-101/〉 Asensio, A., Marco, A., Blasco, R., Casas, R., 2014. Protocol and architecture to bring
things into internet of things. Int. J. Distrib. Sensor Netw. 18, Article ID 158252. Atzori, L., Iera, A., Morabito, G., Nitti, M., 2012. The social internet of things (SIoT)—
when social networks meet the internet of things: concept, architecture and network characterization. Comput. Netw. 56 (November (16)), 3594–3608. Banks, J., Carson, J., Nelson, B., Nicol, D., 2010. Discrete-Event System Simulation Fifth ed.. Pearson. Bhatkal, A.P., Bharati, K., 2014. A survey on improved framework for smart phone using internet of things. Int. J. Sci. Res. 3 (December (12)). Blackstock, M., Lea, R., 2014. IoT interoperability: A hub-based approach, in: IEEE International Conference on the Internet of Things (IOT), pp. 79–84. Collaborative Open Market to Place Objects at your Service, available on line at 〈http:// www.compose-project.eu〉 Costanzo, S., Spadafora, F., Di Massa, G., Borgia, A., Costanzo, A., Aloi, G., Pace, P., Loscrí, V., Moreno, H.O., 2013. Potentialities of usrp-based software deﬁned radar systems. Progr. Electromagn. Res. B 53, 417–435. Decuir, J., 2014. Introducing Bluetooth Smart: part 1: A look at both classic and new technologies. IEEE Consumer Electron. Mag. 3 (1). Diagnostic Scale BF800—available at 〈https://www.beurer.com/web/en/products/

83

G. Aloi et al.
weight/diagnostic_scales/BF-800-black〉 e-Care Nuvola It—Home Doctor—available on line at 〈https://tmed.telecomitalia.it/en/
home〉 Fitbit Flex—available on line at 〈http://www.ﬁtbit.com/ﬂex〉 Fortino, G., Trunﬁo, P., 2014. Internet of Things Based on Smart Objects, Technology,
Middleware and Applications. Springer, ISBN 978-3-319-00490-7. Fortino, G., Garro, A., Russo, W., 2008. Achieving Mobile Agent Systems interoperability
through software layering. Inf. Softw. Technol. 50 (4), 322–341. Fortino, G., Guerrieri, A., O'Hare, G.M.P., Ruzzelli, A., 2012. A ﬂexible building
management framework based on wireless sensor and actuator networks. J. Netw. Comput. Appl. 35 (6), 1934–1952. Fortino, G., Giannantonio, R., Gravina, R., Kuryloski, P., Jafari, R., 2013. Enabling eﬀective programming and ﬂexible management of eﬃcient body sensor network applications. IEEE Trans. Hum.-Mach. Syst. 43 (1). Fortino, G., Parisi, D., Pirrone, V., Di Fatta BodyCloud, G., SaaS, A., 2014. Approach for community body sensor networks. Future Gen. Comput. Syst. 35 (6), 62–79. Fortino, G., Guerrieri, A., Russo, W., Savaglio, C., 2014. Integration of agent-based and Cloud Computing for the smart objects-oriented IoT, in: IEEE International Conference on Computer Supported Cooperative Work in Design—CSCWD, pp. 493– 498. Fortino, G., Galzarano, S., Gravina, R., Li, W., 2015. A framework for collaborative computing and multi-sensor data fusion in body sensor networks. Inf. Fusion 22, 50–70. Gaggioli, A., Pioggia, G., Tartarisco, G., Baldus, G., Corda, D., Cipresso, P., Riva, G., 2013. A mobile data collection platform for mental health research. Personal Ubiquitous Comput. 17 (2), 241–251. Golchay, R., Mouël, F.L., Frénot, S., Ponge, J., 2011. Towards Bridging IoT and Cloud Services: Proposing Smartphones as Mobile and Autonomic Service Gateways, CoRR abs/1107.4786 (2011). Guo, B., Zhang, D., Wang, Z., Yu, Z., Zhou, X., 2013. Opportunistic IoT: exploring the harmonious interaction between human and the internet of things. J. Netw. Comput. Appl. 36, 1531–1539. Gungor, V. C., Pace, P., Natalizio, E. 2007. AR-TP: An adaptive and responsive transport protocol for wireless mesh networks. Paper presented at the IEEE International Conference on Communications, 3740-3745. doi:10.1109/ICC.2007.616 Heart rate measurement PM250—available at 〈https://www.beurer.com/web/en/ productnews/news_products/PM250.php〉 INTER-IoT European project, Research and Innovation action—Horizon 2020—available on line at 〈http://www.inter-iot-project.eu/〉 Internet Of Things—Architecture, available on line at 〈http://www.iot-a.eu〉

Journal of Network and Computer Applications 81 (2017) 74–84
Liu, Q., Ma, Y., Alhussein, M., Zhang, Y., Peng, L., 2015. Green data center with iot sensing and cloud-assisted smart temperature control system. Elsevier J. Comput. Netw. 101 (December), 104–112.
Mayer, S., Verborgh, R., Kovatsch, M., Mattern Smart, F., 2016. Conﬁguration of smart environments. IEEE Trans. Automat. Sci. Eng. 13 (July (3)).
Micro SD ZigBee card—available on line at 〈http://www.spectec.com.tw/sdz-539.html〉 Pawlikowski, K., Jeong, H.D., Lee, J.S., 2002. On credibility of simulation studies of
telecommunication networks. IEEE Commun. Mag. 40 (1), 132–139. Santos, J., Rodrigues, J., Silva, B.M., Casal, J., Saleem, K., Denisov An, V., 2016. IoT-
based mobile gateway for intelligent personal assistants on mobile health environments. J. Netw. Comput. Appl. 24 (March), available on line from. Sethia, D., Gupta, D., Mittal, T., Arora, U., Saran H., 2014. NFC based secure mobile healthcare system, in: International Conference on Communication Systems and Networks (COMSNETS), January. Shimmer wearable sensors—available on line at 〈http://www.shimmersensing.com/〉 Silva, B., Rodrigues, J.R., Lopes, I.L., Machado, T.M., Novel, A., 2013. Cooperation strategy for mobile health applications. IEEE J. Select. Areas Commun. 31 (September (9)), 28–36. Talavera, L.E., Endler, M., Vasconcelos, I., Vasconcelos, R., Cunha, M., Silva, F.J.D.S., 2015. The mobile hub concept: enabling applications for the Internet of Mobile Things, in: IEEE International Conference on Pervasive Computing and Communication Workshops (PerCom Workshops), pp. 123–128. The ODB II home page—available at 〈http://www.obdii.com/〉 The RES-NOVAE—Buildings, roads, networks, new virtuous targets for the Environment and Energy project funded by the Italian Government(PON 04a2E). uBiquitous, secUre inTernet-of-things with Location and contEx-awaReness, available on line at 〈http://www.iot-butler.eu/〉 Vastardis, N., Yangi, K., 2012. Mobile social networks: architectures, Social properties, and key research challenges. IEEE Commun. Surveys Tutorials, 1355–1371. Waspmote Ultra Low power sensors—available on line at 〈http://www.libelium.com/ products/waspmote/〉 Web of Objects, available on line at 〈http://www.web-of-objects.com/〉 Wirtz, H., Rüth, J., Serror, M., Ágila Bitsch, J., Wehrle, K., 2014. Opportunistic interaction in the challenged Internet of Things, in: ACM MobiCom workshop on Challenged networks (CHANTS), pp. 7–14. Zhang, Y., 2016 GroRec: A Group-centric intelligent recommender system integrating social, mobile and big data technologies, IEEE Trans. Serv. Comput., no. 1, pp. 1, PrePrints, http://dx.doi.org/10.1109/TSC.2016.2592520 ZigBee Alliance—available on line at 〈http://www.zigbee.org/〉

84

