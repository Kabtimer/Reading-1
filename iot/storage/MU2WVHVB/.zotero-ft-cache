2014 IEEE International Conference on Cloud Engineering

SD-CRN:Software Deﬁned Cognitive Radio Network Framework

Yaser Jararweh1, Mahmoud Al-Ayyoub1, Ahmad Doulat1, Ahmad Al Abed Al Aziz1, Haythem A. Bany Salameh2, and Abdallah A. Khreishah3,
1 Jordan University of Science and Technology, Irbid, Jordan 2 Yarmouk University, Irbid, Jordan
3 New Jersey Institute of Technology, NJ, USA

Abstract—Software deﬁned networking (SDN) provides a novel network resource management framework that overcomes several challenges related to network resources management. On the other hand, Cognitive Radio (CR) technology is a promising paradigm for addressing the spectrum scarcity problem through efﬁcient dynamic spectrum access (DSA). CR provides unlicensed secondary users with the ability to coexist with licensed users in non-interfering mode. In this paper, we introduce a virtualization based SDN resource management framework for cognitive radio networks (CRNs). The framework uses the concept of multilayer hypervisors for efﬁcient resources allocation. It also introduces a semidecentralized control scheme that allows the CRN base station (BS) to delegate some of the management responsibilities to the network users. CRN resource virtualization allows dynamic, infrastructure free and efﬁcient resources allocation to the CR users. The main objectives of the proposed framework is to reduce the CR users’ reliance on the CRN BS and physical network resources while improving the network performance by reducing control overhead.
I. INTRODUCTION
Due to the low cost and widespread acceptance of the wireless communication devices, the available radio spectrum became insufﬁcient to fulﬁll the need of these large numbers of wireless devices. Users of wireless networks are generally viewed as either primary users or secondary users. Primary users are licensed to operate over a licensed spectrum that is reserved for their own services. These reserved spectrum bands are not fully utilized [1]. So, to improve the spectrum utilization, secondary users are allowed to opportunistically access the licensed bands without affecting the performance of the primary users.
Cognitive Radio (CR) is a technology that enables a cognitive radio node (secondary user) to sense its surrounding environment and change its transmission parameters according to the acquired information with the goal of increasing spectrum utilization. For example, the cognitive radio interface can sense its environment for the available spectrum (spectrum holes) and then divides it into a set of channels and select the best channel that does not cause interference with a primary user according to a predeﬁned policy [2].
The IEEE 802.22 standard for Wireless Regional Area Network (WRAN) is the ﬁrst effort to make commercial

applications based on CR technology feasible [3, 4]. According to IEEE 802.22, a network consists of a base station (BS) and a set of users. The available spectrum is divided into orthogonal channels. To provide better knowledge of the availability of channels, the users sense the spectrum availability in their vicinity and periodically send their sensing reports to the BS. The BS acts as a centralized broker governing the users’ use of the spectrum. Thus, whenever a user wants to transmit, the BS has to be consulted. Such high overhead of control communication between the users and the BS will surely have a negative impact on the overall performance of the network.
Simplifying network resource conﬁguration and management is a very challenging and complex task. The newly emerged concept of software deﬁned networking provide a new paradigm shift in efﬁciently managing network resources [5]. SDN is receiving an increasing attention from both academic and industrial communities for its promising features. SDN permits network manager to control the network resources with software tools without the need for tedious manual conﬁguration. It promotes the separation between the data plane and the control plane of the network [6– 8].
In this paper, we introduce Software Deﬁned Cognitive Radio Network (SD-CRN) framework. SD-CRN provides a virtulization based resource allocation approach for cognitive radio networks. In our approach, we advocate delegating some of the management responsibilities of the BS to the users and allow them to make local decisions. By doing so, we aim to reduce the users’ reliance on the BS and improve network performance by reducing the unneeded control overhead. The resource management process is totally software based without the need for any network administrator interventions.
The distinct features/advantages of our work are, (1), the cooperative resource management over wireless cognitive networks, (2), a centralized base station controls and manages the resource allocation using a centralized manager called the Global Hypervisor (GH) among the different cognitive users joining the network without affecting the primary users, and (3), virtualizing of the physical radio nodes, to have several instances for different virtual net-

978-1-4799-3766-0/14 $31.00 © 2014 IEEE

592

DOI 10.1109/IC2E.2014.88

works, each of which having an intermediate layer called the Local Hypervisor (LH). The LHs support the GH in distributing the resources to minimize the control overhead at the BS. These features/advantages play a signiﬁcant role in improving the overall network throughput, as well as minimizing the management overhead at the BS.
The rest of the paper is organized as follows. The following section contains a brief overview of the literature whereas Section III discusses the proposed SD-CRN framework, which is tested and evaluated in Section IV. The conclusion and future directions of this work are discussed in Section V.
II. RELATED WORKS
The keyword “virtual” was used in the CR literature in several contexts. For example, the authors of [9] used it in the context of how to use CR technology to re-use allocated (but unused) spectrum. The authors of [10] used the virtual concept to deﬁne a virtual wireless networks (VWN), which is a network with no physical resources of its own. A VWN provides services to the clients using the resources of other networks in a CR-based fashion.
On the other hand, other works have used the word “virtual” in a more general context. In [11], the authors proposed a platform where different virtual radio networks running on top of the physical nodes can share the available spectrum. The access to the spectrum was managed according to a multiple access scheme like CDMA, TDMA or FDMA.
In [12], the authors proposed AMPHIBIA, a platform that exploits the network virtualization and cognitive radio technologies while keeping the advantages of each. In AMPHIBIA, a cognitive base station dynamically conﬁgures a wireless access network for each virtual network. For each service provider, AMPHIBIA tries to build an independent and conﬁgurable virtual network. These virtual networks can be used by the service provider to provide its services for the end users. AMPHIBIA has three main components. The ﬁrst one is the service provider, which requests a virtual network from AMPHIBIA to provide its services. The second component is the infrastructure provider, which provides the AMPHIBIA with a physical infrastructure that can be used to build multiple virtual networks over it. The last component is the radio terminal, which requests the service provider to provide a service and also provides AMPHIBIA with the corresponding quality of service (QoS).
In a follow-up work [13], the authors implemented a system prototype for AMPHIBIA including the implementation of a cognitive virtualization manager, which controls the process of network reconﬁguration. The authors demonstrated that a virtual machine-based virtual network including a virtual Cognitive Base Station (vCBS) that can be dynamically established, expanded, and removed, and the streaming services can be ﬂexibly deployed on demand on the virtual network. They also showed that AMPHIBIA is

capable of creating and reconﬁguring vCBSs in a nearly short time interval. They showed the node setup for the virtual cognitive base station, which is hosted on a host base station, and dealt with as a virtual machine. It also contains a node manager and a number of vCBSs. The node manager is responsible of managing the available resources and the access control in the host base station. On the other hand, the node manager has an interface for the network virtualization manager, and initiates and removes the virtual cognitive base stations based on the instructions from the network virtualization manager. Each virtual cognitive base station has all the functionalities of the original cognitive base station, in which it contains a Cognitive Base Station Reconﬁguration Manager (CBSRM), a Cognitive Base Station Measurement Collector (CBSMC), and Cognitive Base Station Reconﬁguration Controller (CBSRC).
Network virtualization has been widely used in traditional wireless technologies. For example, the authors of [14] applied network virtualization on a WLAN system adopting the IEEE 802.11e EDCA (Enhanced Distributed Channel Access). The authors focused their study on controlling the air-time usage rather than controlling the bandwidth usage. They proposed an air-time based resource management technique for wireless network virtualization where many virtual networks compete on the available network resources. For each virtual network a dedicated Virtual Access Point (VAP) was created on a physical access point (AP). The VAP enables its corresponding virtual network to reserve and control the required resources on the physical wired network.
The authors of [15, 16] proposed to virtualize LTE networks. They proposed the use of a virtual base station called enhanced Nobe-B (eNB). Such nodes have a middle layer called hypervisor. This hypervisor is responsible for distributing resources among various virtual instances implemented on the higher layer. Such resource scheduling depends on different metrics including conditions for the user channel, the trafﬁc loads, the priorities, the QoS requirements and the contract information for each virtual operator. They also proposed to divide the available spectrum into small and similar units called Physical Resource Blocks (PRBs), which will be allocated to the virtual operators. They implemented two algorithms for their scheme. The ﬁrst one is a static algorithm, in which the spectrum is divided and assigned for each virtual operator which can keep using it for the whole time. The second algorithm is a dynamic version in which the resource allocation has to be done during the runtime. Therefore this allocation and the amount of resources can vary upon time, based on the load of the operator’s trafﬁc.
The authors in [6] presented the Software Deﬁned Wireless Networks (SDWNs) architecture. This work is considered as one of the earliest works proposing to use SDN for wireless communication. Using SDN was extended to

593

cover Wireless Sensor Networks (WSNs) [17]. SD-WSN provides an SDN based framework to handle WSNs common management problems such as manual reconﬁguration of WSN [17]. In [7], the authors claim that SDN can make cellular networks much simpler and easier to manage. The ﬁrst integration between SDN and CRN was presented in [18]. Neither virtualization was used nor resource allocation algorithm was proposed in [18].
III. PROPOSED FRAMEWORK
We now discuss the proposed framework. We consider a network with one base station (BS) and n physical radio nodes (PNs) with varying sets of resources. For simplicity, we assume that these resources include a number of radio interfaces at each PN and a set of orthogonal channels1 available for speciﬁc periods of time based on the primary user’s activity along with constraints on the power levels that can be used for transmission in order to achieve several nonconﬂicting concurrent transmissions. Additional resources such as coding schemes can be easily incorporated into our framework. The existence of multiple channels and multiple radio interfaces at each PN requires some access coordination which is achieved using multiple transreceivers per node [11].
Each one of the PNs hosts a set of virtual nodes (VNs). VNs residing in different PNs may need to communicate with each other. To facilitate such communications, VNs request resources from their hosting PNs. The merits of our scheme are most evident when we are dealing with a heavily loaded network, which is characterized by two ratios. The ﬁrst one is the ratio of the number of VNs residing at any PN to the number of available radio interfaces at the same PN. This ratio can be smaller or equal to one, where each VN will be assigned one or more radio interfaces, or it can be larger than one, where a number of VNs will have to take turns using the same radio interface, which can be achieved using any time sharing policy such as Time Division Multiple Access (TDMA). The second ratio is the ratio between the number of VNs residing in any PN and the number of available channels at the same PN. Again, this ratio can be smaller than or equal to one, where each VN will be assigned one or more channels. It can be larger than one, where a number of VNs will have to take turns using the same channel. This can be done using Frequency Division Multiple Access (FDMA) procedure or TDMA procedure. We are interested in the interesting and challenging scenario in which both ratios are greater than one.
Different VNs residing on different PNs form virtual networks (VNets). See Figure 1. VNs of the same VNet communicate with each other using the physical resources of the PNs. The goal of our proposed framework is to
1The unrealistic assumption of orthogonality between channels is made here for simplicity. It can be relaxed by introducing guard bands [19]

Figure 1. Virtual network architecture.
coordinate the access to these resources with minimal control overhead.
Note that the discussion in this work is meant to be as general as possible without enforcing a speciﬁc meaning of VNets. Nonetheless, to give a concrete example, consider a scenario in which PN j1 has a stream of packets to be broadcasted to a set of PNs, j2, . . . , jn. Then, for each PN ji, where i = 2, . . . , n, j1 creates a VNet consisting of two VNs: one residing in j1 and one residing in ji.
To achieve our goal of resource sharing with minimal control overhead, we propose a two-tier management scheme where the resources of the entire network is managed by a middle layer at the BS called the Global Hypervisor (GH). The GH allocates resources to the PNs where they will be managed by another middle layer at the PN called the Local Hypervisor (LH). LHs allocate the available resources to the different VNs running on them. Obviously, the resources are allocated based on their availability as well as the requests made by the VNs. A critical aspect to the success of this approach is the ability to avoid both the contention between secondary users and any potential conﬂict with primary users. To address the former issue of coordinating SUs’ access to the resources, the GH must assign the resources to the LHs in a way that allows each LH to make local decisions on how to utilize the resources assigned to it without interfering with other LHs. GH can use any fairness scheme to distribute the available resources among the LHs. As for the latter issue of avoiding interference with PUs’ communication sessions, cooperative sensing is exploited in which each SU sends periodic sensing reports to the BS.
The following subsections discuss the steps of the proposed resource allocation framework as depicted in Figure 2. The discussions therein pertain to speciﬁc resources: the radio interfaces and the available channels; similar techniques can be applied to other resources.
A. Tier 1: Global Hypervisor (GH)
As mentioned before, the objective of the GH is to globally manage the resources of the entire network while

594

Figure 2. Allocation ﬂow control.

the local management of the resources is left to LHs. In this subsection, we discuss the details of how this can be achieved.
When the GH receives a request from the LH of some PN j (LHj) for a certain number of channels to be used for a certain period of time (request time), it will check whether enough channels are available at the Global Pool (GP). If not, then the GH will wait for a speciﬁc period of time to determine if some channels can be vacated from other nodes in the network to satisfy the request. When the waiting period is expired, the request is dropped.
Now, if there are enough channels to satisfy the request, the GH will assign them to LHj. For each channel c assigned to LHj, the GH sets an upper limit on the transmission power that can be used by j. The transmission power is selected such that for each transmission from PN s (to some PN t) that belongs to the set Jc of concurrent transmissions on channel c, the following SINR equation is satisﬁed [20, 21]:

Ps

N+

dαs,t
Pj j∈Jc dαj,t

≥ β,

(1)

where Ps is transmission power from s, N is the white noise, ds,t is the distance between s and t, α is the path loss exponent usually assumed to be greater than 2 and β is
the SINR threshold that depends on the desired data rate, the

modulation scheme, etc. The GH resource allocation control is depicted in the right-hand side of Figure 2.
Note that the GH assigns the upper limits on the power levels such that even if each transmitter uses the maximum allowed power, Equation 1 will still be satisﬁed at each receiver of all concurrent transmissions. This means that the GH need not be aware of the details of every communication session taking place in its region as long as every node is restricting itself to the assigned power limits. Nonetheless, if the GH is informed of the current transmissions, it will be able to better utilize the channels. This can be achieved by piggybacking such information into the control messages sent from the LHs to the GH such as sensing information, and requests for more resources.
Channels should be vacated in different scenarios such as a primary user starts to use the licensed channels, the request time is over, communication session is over before the end of the request time, etc. In some cases, the LHs might ask for an extension of the request time, such requests are granted provided that no starvation or interference is caused.
B. Tier 2: Local Hypervisor (LH)
A LH at a certain PN is responsible for allocating the available resources to the VNs running on the PN. In accordance with the common terminology in the literature, we say that each LH has a local pool (LP) of resources obtained from the GH’s global pool (GP) of resources. Obviously, the resources are allocated based on their availability as well as the requests made by the VNs.
When a VN i1 (residing in PN j1) wants to communicate with another VN i2 (residing in PN j2) in the same VNet,2 both i1 and i2 have to request the resources necessary to complete their communication sessions from their respective LHs. For simplicity, we assume that these resources include the number of radio interfaces from j1, the same number of radio interfaces from j2, the number of channels that are available at both j1 and j2 and the ability to transmit at an appropriate power level at both j1 and j2. Additional resources such as coding schemes can be incorporated easily into our framework. These resources are requested for a speciﬁc period of time. The LHs have a speciﬁc time period during which they must satisfy the request or drop it. Note that the request can be single-minded (where the request must be satisﬁed completely or rejected) or besteffort (where the request is made for speciﬁc amounts of each resources, but it is acceptable to be assigned a certain fraction of the original request). Either way, there will always be a minimum set of resources acceptable for any request.
To satisfy the minimum requirements of resources for a given request, the LH at j1 must coordinate with the LH at
2Instead of assuming that one VN sends packets and the other VN receives them, we assume here the more interesting case of two-way communication.

595

Figure 3. Scale down resources.
j2. The two LHs should be willing to assign enough radio interfaces to each VN and they should agree on a set of channels to be used for communication at acceptable power levels. These channels must be available at the local pool of each LH. If this is not the case, the channels (along with the acceptable power level) must be requested from the GH by the LH of the sender, j1. If there are enough channels available at the GH, then they will be assigned to the LHs. Otherwise, the GH will wait for a speciﬁc time period to determine if some channels can be vacated to satisfy the request. When the waiting period is expired, the request will be dropped. The LH resource allocation control is depicted in the left-hand side of Figure 2.

Figure 4. Scale up resources.
1 SD-CRN
0.8

Overhead %

0.6

0.4

0.2

0

345

7

9

Number of virtual nodes per physical node

Figure 5. The network overhead computed by taking the ratio between the number of control messages sent by SD-CRN and the number of control messages sent by a non-virtualized framework.

C. Dynamic Resource Allocation
An important aspect of virtualization is the ability to dynamically allocate the available resources to competing entities. In our framework, this means that when a VN is trying to establish a communication session on a PN with a small total of requested resources, then this VN might get all the resources it requests. As more VNs emerge and request resources, the amount of resources available to each VN decreases. This scenario of scaling down the resources is depicted in Figure 4. On the other hand, if some communication sessions are completed and their allocated resources are vacated, the amount of resources available for each VN increases. This scenario of scaling up the resources is depicted in Figure 3.
It should be noted that the procedures of scaling up and down the resources are not as straightforward as they seem due to the potential interference with other concurrent transmissions (e.g., if a channel c is currently being used by i1, it cannot be simply used by another VN, i2, if i2 requires a transmission power level that is high enough to interfere with other concurrent transmissions over c). Note that based on our previous discussion, a decision on how to handle the newly available resources at the LH should be investigated. The ﬁrst option of decision is to perform a scale up procedure and allow other VNs at the same PN to utilize these resources. The other option is to vacate the resources and return them to the global pool. This decision is directly related to the fairness policy. A thorough exploration of this issue is the subject of future research.

IV. PERFORMANCE EVALUATION
We evaluate the performance of our proposed SD-CRN framework using simulation. The simulation results presented below are based on the average of ten independent simulation runs, each lasting for 2000 seconds. The experiment setup uses single cell with 10 physical nodes and 60 channels. The numbers of antennas per physical node are 1, 2 and 4 radio interfaces and the packet size is 64 Kbit. Finally, we note that if SD-CRN is restricted to having only one virtual node on each physical node (i.e., each user uses its own physical node), its performance will be equivalent to a non-virtualized framework. So, in the following plots, we show the performance of the non-virtualized framework and compare it with the cases where more virtual nodes are allowed share the same physical node.
Figure 5 shows the effect of using SD-CRN on the network overhead. Speciﬁcally, each point in the plot shows the ratio between the number of control messages sent by SD-CRN and the number of control messages sent by a non-virtualized framework. Intuitively, using a 2-tier management hierarchy should reduce the number of packets communicated with the base station since some of the management tasks are delegated to local hypervisors and the global hypervisor at the base station need not be consulted about them. As the ﬁgure shows, even with multiple VNs operating on each PN, the number of control message sent by SD-CRN is slightly above half (56.5%) of the control messages sent by a non-virtualized framework.
Figure 6 shows how SD-CRN improves the network throughput. The ﬁgure shows that a huge improvement

596

Average throughput (kbps)

2000 SD-CRN

1500

1000

500

0

1

3

5

7

Number of virtual nodes per physical node

Figure 6. Network throughput.

in throughput is achieved by just allowing VNs to share the same physical node. If we consider the non-virtualized framework as one that allows exactly one VN per PN, then the improvement in terms of the average throughout per VN reaches 6.7 folds. This is due to better resource utilization and reduced need to communicate with the base station (reduced overhead).
V. Conclusion and Future Work
In this paper, we introduced SD-CRN framework. SDCRN is a virtualization based resources allocation framework for cognitive radio networks (CRNs). The framework uses the concept of multilayer hypervisors for efﬁcient resources allocation. It also introduces a semi-decentralized control schema that allows the CRN base station (BS) to delegate some of the management responsibilities to the network users. CRN resources virtualization allows dynamic, infrastructure free and efﬁcient resources allocation to the CRN users. The main objective of the framework is to reduce the CRN users’ reliance on the CRN BS and physical network resources and to improve the network performance by reducing the introduced control overhead.
REFERENCES
[1] H. Bany Salameh and M. Krunz, “Channel access protocols for multihop opportunistic networks: Challenges and recent developments,” IEEE Network-Special Issue on Networking over Multi-hop Cognitive Networks, July 2009.
[2] H. Bany Salameh, “Rate-maximization channel assignment scheme for cognitive radio networks,” in IEEE GLOBECOM, Dec. 2010, pp. 1–5.
[3] C. Cordeiro et al., “IEEE 802.22: An introduction to the ﬁrst wireless standard based on cognitive radios,” JCM, vol. 1, no. 1, pp. 38–47, 2006.
[4] H. Bany Salameh, Y. Jararweh, T. Aldalgamouni, and A. Khreishah, “Trafﬁc-driven exclusive resource sharing algorithm for mitigating self-coexistence problem in WRAN systems,” in IEEE WCNC, 2014, pp. 1–5.
[5] H. Kim and N. Feamster, “Improving network management with software deﬁned networking,” IEEE Communications Magazine, vol. 51, no. 2, pp. 114–119, 2013.

[6] S. Costanzo, L. Galluccio, G. Morabito, and S. Palazzo, “Software deﬁned wireless networks: Unbridling sdns,” in EWSDN, 2012, pp. 1–6.
[7] L. Li, Z. Mao, and J. Rexford, “Toward software-deﬁned cellular networks,” in EWSDN, 2012, pp. 7–12.
[8] S. Hasan, Y. Ben-David, C. Scott, E. Brewer, and S. Shenker, “Enhancing rural connectivity with software deﬁned networks,” in ACM DEV, 2013, pp. 49:1–49:2.
[9] D. Cˇ abric´, S. M. Mishra, D. Willkomm, R. Brodersen, and A. Wolisz, “A cognitive radio approach for usage of virtual unlicensed spectrum,” in The 14th IST Mobile and Wireless Communications Summit, 2005.
[10] B. Ishibashi, N. Bouabdallah, and R. Boutaba, “QoS performance analysis of cognitive radio-based virtual wireless networks,” in IEEE INFOCOM, 2008, pp. 2423–2431.
[11] J. Sachs and S. Baucke, “Virtual radio: a framework for conﬁgurable radio networks,” in The 4th Annual International Conference on Wireless Internet. ICST, 2008, p. 61.
[12] K. Nakauchi, K. Ishizu, H. Murakami, A. Nakao, and H. Harada, “AMPHIBIA: A cognitive virtualization platform for end-to-end slicing,” in IEEE ICC, 2011, pp. 1–5.
[13] K. Nakauchi, K. Ishizu, H. Murakami, Y. Kobari, Y. Nishida, A. Nakao, and H. Harada, “Virtual cognitive base station: Enhancing software-based virtual router architecture with cognitive radio,” in IEEE ICC, 2012.
[14] K. Nakauchi, Y. Shoji, and N. Nishinaga, “Airtime-based resource control in wireless LANs for wireless network virtualization,” in ICUFN. IEEE, 2012, pp. 166–169.
[15] Y. Zaki, L. Zhao, C. Go¨rg, and A. Timm-Giel, “A novel LTE wireless virtualization framework,” Mobile Networks and Management, pp. 245–257, 2011.
[16] L. Zhao, M. Li, Y. Zaki, A. Timm-Giel, and C. Go¨rg, “LTE virtualization: from theoretical gain to practical solution,” in ITC, 2011, pp. 71–78.
[17] T. Luo, H.-P. Tan, and T. Quek, “Sensor openﬂow: Enabling software-deﬁned wireless sensor networks,” IEEE Communications Letters, vol. 16, no. 11, pp. 1896–1899, 2012.
[18] A. Dutta, D. Saha, D. Grunwald, and D. Sicker, “An architecture for software deﬁned cognitive radio,” in ACM/IEEE ANCS, 2010, pp. 1–12.
[19] H. Bany Salameh, M. Krunz, and D. Manzi, “An efﬁcient guard-band-aware multi-channel spectrum sharing mechanism for dynamic access networks,” in IEEE GLOBECOM, 2011, pp. 1–5.
[20] M. Al-Ayyoub and H. Gupta, “Joint routing, channel assignment, and scheduling for throughput maximization in general interference models,” IEEE Transactions on Mobile Computing, vol. 9, no. 4, pp. 553–565, 2010.
[21] A. Khreishah, C. C. Wang, and N. Shroff, “Cross-layer optimization for wireless multihop networks with pairwise intersession network coding,” IEEE Journal on Selected Areas in Communications, vol. 27, no. 5, pp. 606–621, 2009.

597

