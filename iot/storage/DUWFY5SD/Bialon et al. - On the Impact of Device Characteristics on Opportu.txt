2019 International Conference on Internet of Things (iThings) and IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData)

On the Impact of Device Characteristics on Opportunistic Network Performance
Raphael Bialon Jan Steimann Kalman Grafﬁ Department of Computer Science, University of Düsseldorf, Germany
bialon@hhu.de jan.steimann@hhu.de grafﬁ@hhu.de

Abstract—With smartphones gaining relevance in everyone’s regular day more than ever, the application of opportunistic networks on those devices has become a popular ﬁeld of research, as it enables smartphones to connect locally with high bandwidth and to provide networked applications for regional use. Conventional Delay Tolerant Networks and opportunistic network methods and techniques however cannot be directly applied on smartphones. Challenges are brought up by missing ad-hoc communication possibilities and system architecture constraints. Through tethering hotspot-based communication it is possible to create opportunistic networks for smartphones, although with speciﬁc network characteristics. We conduct a survey on the impact of device characteristics and network transmission properties on the overall network performance. Using the ONE simulator, we deploy a tethering hotspot-based connection strategy and, as the main contribution of this paper, asses the inﬂuence of single device properties onto the global opportunistic network performance. By applying a Linear Regression, we conclude a device’s radio transmission range as the most signiﬁcant factor one should consider when designing algorithms for smartphonebased opportunistic networks.
I. INTRODUCTION
Opportunistic networks, subclass of Delay Tolerant Networks (DTNs), have emerged from their usage in Mobile Ad Hoc Networks (MANETs). Utilizing mobility of network nodes and wireless communication possibilities, opportunistic networks offer a feasible method of data transportation and delivery without the need for existing infrastructure [1]. Due to their nature, they are not supposed to offer real-time communication from end-to-end as in usual internet-based connections. Nevertheless, existing communication and routing methods offer a foundation for internet-like services to be deployed in opportunistic networks [2].
Android devices, including smartphones, tablets, and smartwatches, offer a wide-range variety of different device options from several vendors and manufacturers all featuring the same operating system. This variety allows both low-budget and sophisticated high-end as well as a complete range of intermediate devices to be used by consumers. It also has made Android the most common smartphone operating system worldwide [3].
While Android does not feature ad hoc networking using integrated wireless communication per se, the use of tethering hotspot technology combined with distributed communication strategies adds an additional communication method. Applications and strategies as presented in [4], [5] enable Android devices to utilize opportunistic networking by combining

existing WiFi hardware with a novel connection strategy. Other forthcoming strategies, such as WiFi Direct and LTE Direct, offer one-to-one connections only or rely on technology not available on common smartphones yet. As the evaluated extension solely works with the existing drivers and operating system, it can be installed as a simple application on any Android device with integrated WiFi capabilities. Some devices provide an infrastructure-like access point by opening a WiFi tethering hotspot not necessarily providing connection to the internet. Those devices are called Hotspots, leading to the naming of this connection strategy as hotspotting. Other devices are then able to scan their surroundings for existing Hotspots and connect to one accordingly, becoming Clients as they are connected to a Hotspot. If no surrounding and ﬁtting Hotspot can be found within the scan results, the device can choose to become a Hotspot. Hotspots, which did not have any connected clients for some time, can then choose to break their tethering hotspot down and scan for other surrounding Hotspots. This is necessary as Hotspots are not able to scan for other surrounding Hotspots due to the functionality of tethering hotspots on Android. Following these states according to a state machine given in [4], participating devices are able to form islands of opportunistic connectivity leading to an opportunistic network over time.
But having a great variety of different hardware from different vendors and manufacturers not only supports the prevalence of Android. As is shown in [6], a strong fragmentation of both hardware and software capabilities results in a great number of possible distinct device performances. Newer versions of the Android operating system take advantage of new technology, but also improve utilization of existing hardware, resulting in improved device performance only through software upgrades. Devices equipped with the same or comparable hardware but different software version thus lead to an even greater set of possible inﬂuencing factors on their impact on device usage. In addition to the provided performance through hardware and software combinations, the way users interact with their Android smartphones further increases the amount of possible device utilization [7]. We propose that for a devices’ decision of becoming a Hotspot several of those parameters from hardware and software combinations have to be taken into account. As the Hotspot is an important part of the opportunistic network performance, devices having the most positively inﬂuencing parameters should be preferred for Hotspot roles.

978-1-7281-2980-8/19/$31.00 ©2019 IEEE

373

DOI 10.1109/iThings/GreenCom/CPSCom/SmartData.2019.00082

In this paper we give an overview of the inﬂuencing factors on opportunistic network performance using the hotspotting principle and provide an insight on which device characteristics to focus on when choosing combinations of devices for hotspotting-like communications. Therefore, we introduce a taxonomy of different device parameters and inﬂuencing factors. Categorizing those characteristics into Device Characteristics, Data Characteristics, Opportunistic Network Characteristics, and Peripheral Inﬂuencing Factors, we emphasize the impact of these categories on opportunistic network performance.
Discussing their general impact, a selection of relevant parameters is evaluated through simulations using the Opportunistic Network Environment (ONE) simulator [8]. Because of the large number of possible device characteristics and inﬂuencing factors, not only the preceding selection of relevant parameters takes place, but also single device characteristics are evaluated in simulation scenarios featuring only a variation of the individual characteristic. We argue that a large simulation model including all combinations of possible device characteristics and inﬂuencing factors is not feasible as the number of dimensions from input variables becomes too large to compute with a manageable set of resources. After identifying the most inﬂuential device characteristic, we present a ranking of selected device characteristics sorted by their impact on opportunistic network performance as the main contribution of this paper.
The remainder of this paper is structured as follows: First, we introduce publications related to our work and also papers providing the base of opportunistic networking on Android used in our simulations. An overview and selection of device characteristics in addition to a taxonomy is given in section III. Section IV deﬁnes the base simulation scenario used for further examinations and depicts the simulation outcomes of examined parameters. To identify the most inﬂuential parameter in section V, we motivate our use of linear regression and depict the execution, followed by our ranking of the impact of device characteristics on opportunistic network performance. We conclude our paper with a summary of the executed work and concisely state the result of our examinations as the contributions of this paper.
II. RELATED WORK
The characteristic feature of opportunistic networks is delivery of messages by the Store-Carry-Forward principle which is caused by intermittent connections. A message often passes multiple nodes before its reaches its destination. These nodes, which pass the message, carry the message until they forward it to a suitable other node, either by an algorithmic decision or simple opportunity.
We presented a framework enabling Android smartphones to create and participate in an opportunistic network in [4]. This communication scheme relies solely on the features of the Android OS, utilizing tethering hotspots for node connections as ad hoc WiFi communication is not possible using standard Android smartphones. The concept of communication through

tethering hotspots dividing participating nodes into Client and Hotspot roles provides the basis for our examinations.
A similar concept not only using on-device tethering hotspots but also including stationary access points into the communication process is shown in [5]. As the role of stationary access points as hotspots is predetermined, there is no use in deciding whether to use a stationary access point or tethering hotspot for connections. Usually provided with constant power, not restricted by mobility features or build size, stationary access points provide a signal having greater range, transmission and receive power as well as a broad range of WiFi standards, thus excelling tethering hotspots in most if not all features. Having conducted their study, energy consumption of devices throughout communication process was one key feature. We utilize this data to apply a realistic energy consumption model to our simulations.
The utilization of WiFi Direct to enable opportunistic networking on Android smartphones has been evaluated in [9], [10]. While their ﬁndings show good applicability of this technique, WiFi Direct requires special hard- and software support which has yet to be included by smartphone vendors in nearly all models and makes, whereas the hotspotting technique evaluated in this paper works on any WiFi hardware available on Android smartphones.
III. METHODOLOGICAL APPROACH
In this section we outline the structure of our investigations. First, we deﬁne metrics used for simulation evaluation. Using these metrics, we can compare the impact of single device characteristics’ alterations on the simulation results. By introducing a taxonomy on the given device characteristics, it is possible to group characteristics belonging to the same subset of having similar impact. The last part of this section introduces the device properties we conduct our simulations on.
A. Metrics
To evaluate the inﬂuence of single device property deviations on network performance, we deﬁne four metrics that are applied on every simulation run. All metrics are scalars, therefore they are represented by a single value allowing easier comparison between different scenarios. Though one metric gives a deﬁnite assertion about the ﬁeld its measurements cover, one has to take into account all metrics to evaluate the outcome of a simulation in context.
1) Delivery Ratio: The delivery ratio is the probability of a successful delivery of a message. It is calculated by comparing the number of delivered messages with the number of created message.
2) Overhead Ratio: The overhead-ratio represents the efﬁciency of the network by considering the number of total transmissions and delivered messages.
3) Hop Count: This metric counts the number of nodes a message has passed until it reached its destination. Therefore it can be understood as the length of the path the message has traveled in the network.

374

4) Latency: The latency is the time (in minutes) a message needs to reach its destination.
B. Taxonomy
To ease the identiﬁcation of a parameter’s inﬂuence on opportunistic network performance, we categorize the device characteristics and inﬂuencing factors into the following four categories:
1) Device Characteristics: This category includes all parameters directly inﬂuenced by the device hardware and software.
2) Data Characteristics: These characteristics describe user interaction with the device and installed applications, which then generates data input for the opportunistic network.
3) Opportunistic Network Characteristics: Set by the underlying opportunistic network design, these characteristics describe the opportunistic network behavior.
4) Peripheral Inﬂuencing Factors: These factors originate from the environmental inﬂuence on the opportunistic network.
In the following section we list the parameters according to their category and give a short assumption on their inﬂuence on the given metrics.
C. Device Characteristics
a) Energy consumption: An important parameter which has to be considered for a real life application of opportunistic networking using smartphones is the energy consumption. Therefore, we employed values from [5] to study the behavior of the network with different initial battery charges and extract a realistic model. As different battery usage and size can resemble the same relative discharging behavior, we only focus on energy consumption through a relative charge and discharge factor. We expect no inﬂuence on our metrics if the simulated devices can sustain a sufﬁcient charge during simulations, but expect a degrading delivery probability as more and more devices cannot partake in the opportunistic network due to an empty battery.
b) Buffer Size: To identify the impact of buffer size on the performance of an opportunistic network we vary the size of the buffer of a node. This has a direct inﬂuence on the nodes’ capacity to carry messages. A large buffer allows the nodes to carry many messages, while a smaller buffer decreases the amount of carried messages linearly. As the buffer size is limited by the general storage size of a device, we can only extend the buffer size within a reasonable range. We expect a deterioration of delivery probability, but the other metrics might actually display an improvement due to less messages arriving their destination faster and with fewer hops as generally less messages can be forwarded.
c) IEEE 802.11 Standard: Due to the use of WiFi for communications, we study the IEEE 802.11 Standard to examine its impact on the given metrics. The IEEE standard 802.11 [11] includes many standards for WiFi communications. We only focus on standards used for smartphone WiFi

communication such as the IEEE 802.11b or IEEE 802.11n standards. As smartphones can handle multiple standards, this lets us suggest that there could be a possibility to actively govern the standard in use.
1) Speed: Due to the frequent movement of nodes it is important for each node to transmit messages as quickly as possible. The longer the transmission lasts, the more likely it is that contact time is not long enough to transfer the whole message.
2) Range: Like the speed, the range has a great inﬂuence on transmissions, too. The nodes have to be in range of each other to transfer a message. Depending on the context in which the opportunistic network is used the contact range can be vastly different. E.g., if we use the opportunistic network on an open space we have to cover a greater range because the nodes do not come in transmission range very often. An opposing example would be an urban environment.
As deﬁned in the IEEE 802.11 Standard, not all combinations of speed and range are possible. We focus on standardized combinations only, expecting them to have a great impact on all metrics as these parameters inﬂuence the amount of transfered messages directly.
d) Scan Delay: The scan delay represents the time a node takes to search for Hotspots in its surroundings. During this time it cannot transmit any messages. This delay can be directly inﬂuenced by the Hotspot method in use. While a longer Scan Delay increases the probability of ﬁnding an already existing Hotspot, it also lessens the time available for message transfers. Thus, we expect a longer scan delay to reduce opportunistic network performance as measured by our metrics.
D. Data Characteristics
The data characteristics are set by the usage context of the participating device in the opportunistic network. E.g., if one sends chat messages using the opportunistic network, generated trafﬁc will be different to as if one would use it for a ﬁle sharing application.
a) Message Interval: The message interval determines the time between sending of messages and thus the number of messages a node sends during a simulation. The more messages are sent, the more messages have to compete against each other for the resources of the network. Thereby, we assume a better network performance when the message interval and resulting count is low.
b) Message Size: The message size can effect the network performance due to limitations from the transmission speed of the WiFi interface. A larger message takes more time to be transfered. Because of node mobility, this means that there might not be enough time to ﬁnish the transfer before the nodes are out of range. As with the message interval, we expect an increased message size to deter network performance.

375

c) TTL: The Time To Live (TTL) of a message describes the duration it should be considered as a valid message for forwarding it to other nodes. The higher a message TTL is chosen by the sending application, the longer messages are ought to stay in node buffers. We suggest that higher TTL values improve delivery probability while increasing the overhead ratio and message delay.
E. Opportunistic Network Characteristics
These options are device- and user-independent as they are speciﬁed by the design of the opportunistic network in use. Parameters belonging to this category are the utilized routing algorithm and buffer management strategies as presented in [12]. While these parameters are expected to have a large impact on opportunistic network performance as evaluated by the given metrics, they are completely device-independent as they are only settings for the software used to enable opportunistic networking.
F. Peripheral Inﬂuencing Factors
Movement of nodes partaking in the opportunistic network and their overall amount as well as density form the last of our categories. They can be easily adjusted in simulations, but can generally not be inﬂuenced for the whole opportunistic network as in the real world each node, represented by a human individual carrying an Android smartphone, independently makes decisions.
IV. EVALUATION
To assess the impact of parameters named in the previous section, we evaluate simulation runs conducted on individual parameters by applying the aforementioned metrics. First, we argue that only the ﬁrst two categories are relevant within the scope of our study. We then introduce a base scenario for conducted simulations and state the changed parameters and their value ranges. Following this, evaluations of relevant parameters are given, providing a greater focus on two of them.
A. Characteristics Category selection
As stated in our research goal, we want to examine the impact of device characteristics on the performance of opportunistic networks. While single simulations of all stated parameters are feasible, we argue that only the ﬁrst two categories, Device Characteristics and Data Characteristics, are relevant for our examinations. These values solely depend on a devices’ properties and are therefore something which the connection strategy has to employ without changing it.
Parameters from Opportunistic Network Characteristics can be set by the opportunistic connection strategy creating and enabling participation in the opportunistic network, these values are relevant only on the underlying network and routing layer. Peripheral Inﬂuencing Factors also impact an opportunistic networks’ behavior, but can generally not be modiﬁed in real-world situations. Those interactive decisions are made by the node participating in the opportunistic network, a general governance is not feasible.

Table I BASE SCENARIO, FIXED AND VARIABLE SETTINGS

Simulation Time Number of Nodes Movement Model Routing Protocol Buffer Size Interface Type Interface Speed Interface Range Scan Delay Message Interval Message Size TTL
Initial Battery Charge Buffer Size Interface Speed Interface Range Scan Delay Message Interval Message Size TTL

Fixed Settings
43 200 s = 12 h 50 ShortestPathMapBasedMovement HotspotEpidemic 3.5 GB HotspotInterface 10 MB/s 100 m 3s [25 s, 100 s] [250 kB, 20 MB] 300 min = 5 h
Variable Settings
[10 %; 100 %] [100 MB; 5 GB] [1 MB/s; 50 MB/s] [10 m; 160 m] [1 s; 300 s] [25 s, 100 s] [1 MB, 20 MB] [10 min; 300 min]

From these propositions we infer that only Device Characteristics and Data Characteristics are relevant for our evaluation and are thus the parameters we focus on in the remainder of this section.
B. Experimental Description
Table I states the general settings used in our simulation run and value ranges for the property currently under investigation in the scenario. The given values are chosen as to represent pedestrians equipped with Android smartphones walking on a map of Helsinki as given in the default scenario of ONE. The HotspotInterface behaves like the state machine detailed in section I and [4], and nodes either connect to existing Hotspots or create new ones following the rules given. Instead of the already implemented Epidemic [13] routing, an adapted version had to be implemented to correctly close connections between nodes. This is necessary because of the infrastructure-like connections with Hotspots and Clients in contrast to regular ad hoc connections in ONE. Routing behavior remains the same as with the original Epidemic routing included in ONE. A buffer size of 3.5 GB is chosen as to represent a plausible proportion of todays smartphone storage sizes, which exceed this value by far. While message sizes are drawn from an interval representing text messages up to larger images or short videos, the message creation interval spans a range representing avid smartphone users generating some load for the opportunistic network. By placing 50 nodes into the simulation area we chose a moderate number of network participants. Using only predetermined paths on the underlying road graph, encounters still happen regularly but leave room for improvements which we try to raise by varying device properties.

376

Delivery probability

0 1 0.95 0.9 0.85 0.8 0.75 0.7 0.65 0.6 0.55 0.5
0

Transmission speed in MB/s

10

20

30

40

50

Speed with range 100 Range with speed 10M
20 40 60 80 100 120 140 160
Transmission range in m (a) Delivery probability

Hop count

0 3.6 3.4 3.2
3 2.8 2.6 2.4 2.2
0

Transmission speed in MB/s

10

20

30

40

50

Speed with range 100 Range with speed 10M
20 40 60 80 100 120 140 160
Transmission range in m (b) Average hop count

Transmission speed in MB/s

0 50

10

20

30

40

50

45

40

35

30

25

20
15
10 0

Speed with range 100 Range with speed 10M
20 40 60 80 100 120 140 160

Transmission range in m

(c) Overhead ratio

Average latency in min

0 160 140 120 100
80 60 40 20
0

Transmission speed in MB/s

10

20

30

40

50

Speed with range 100m Range with speed 10MB/s

20 40 60 80 100 120 140 160
Transmission range in m (d) Average latency

Figure 1. Varying WiFi speed and range simulation results

Overhead ratio

The four metrics stated in section III-A and utilized in our examinations are extracted from ONEs’ MessageStatsReport for all simulations. We conducted two simulation runs for every parameter with two unique seeds for generating randomness in ONE and our examinations focus on the mean of both runs. Our implementations and simulation scenario conﬁgurations can be found on Github1.
C. Device Characteristics
a) Battery charge: As shown in table I, we varied the initial battery charge from 10 % to 100 % with steps of 10 percentage points. Conﬁrming our expectations, battery charge had no impact on metrics while some power was still available to simulated devices. Starting with the ﬁrst devices turning off, our metrics show a clearly degraded network performance, eventually bringing message transmissions to a complete halt as all devices were discharged. We identify an initial battery charge of around 40 % to be sufﬁcient for most devices to endure the simulation duration and generate outcomes with minor deviations only for our metrics.
b) Buffer size: While we chose a reasonable and feasible buffer size based on current Android smartphone storage sizes, we were interested in the impact of different available storage sizes for carried messages. We altered buffer size for our simulations from one of 100 MB and 500 MB, and 1 to 5 GB with steps of 500 MB. From this, we observe the following measurements: Starting with a buffer size of 1 GB or larger,
1https://github.com/hhucn/the-one-device-characteristics

delivery probability is above 90 % with only little deviation. Hop count and delay can be observed as almost constant for buffer sizes equal to or greater than 2 GB and overhead ratio at around 50 starting with a buffer size of 3 GB.
c) IEEE 802.11 Standard: As previously explained, there are many diverse IEEE 802.11 Standards and different smartphones employ distinct subsets of those. Due to this we examine the impact of transmission range and speed on the performance of the opportunistic network. Because the parameters are closely related our plots show both in one ﬁgure. This also allows us to compare the effect on the whole network. For our measurements, we varied only one parameter while keeping the other constant, as otherwise one can not differentiate which parameter caused which effect. Examining ﬁg. 1, we see that on the one hand, if the parameters are above a certain threshold, the metrics are close to being constant. Note the y-axis showing only the relevant value range for each metric. On the other hand, the transmission range has higher impact on network performance if its value falls below this threshold. The reason for this is that a low transmission speed causes messages to not fully transfer during contact time. In our simulations messages have uniformly distributed ﬁle sizes ranging from small to large messages. We assume that for more primarily large messages, a greater inﬂuence on transmission speed can be observed. Concluding from the aforementioned arguments, the transmission range has a larger impact due to the distribution of messages sizes. Increasing the duration of node contacts through an increased transmission range leads to greater performance of

377

Buffer level in percent

Delivery probaility

0.96 0.95 0.94 0.93 0.92 0.91
0.9 0.89 0.88 0.87
0

100

80

Seed 1

60

Seed 2

buffer level 40

20

0 1000 2000 3000 4000 5000 6000 7000 8000
Number of messages

(a) Delivery probability

Buffer level in percent Hop count

14

100

12 80
10 60
8

6

40

4
20 2

0

0

1000

10000

Number of messages

(b) Average hop count

80 100
70

60

80

50

Seed 1

60

40

Seed 2

buffer level

30

40

20 20
10

0

0

5000 10000 15000 20000 25000 30000

Number of messages

Buffer level in percent Average latency in min

350 100
300
80 250

200

60

150 40
100
20 50

0

0

1000

10000

Number of messages

(c) Overhead ratio

(d) Average latency

Figure 2. Varying number of messages simulation results

Buffer level in percent

Overhead ratio

the opportunistic network than increasing transmission speed. Hop count and overhead ratio show an apparent improvement for lower transmission speed and range, but this occurs due to a lower number of delivered messages having traveled along shorter paths. Contrary to this, the average latency induces a real improvement with higher transmission range or speed as messages can travel along more optimal paths as generally more transmissions are possible.
d) Scan Delay: Utilizing the connection strategy deﬁned in [4], nodes can either become Client or Hotspot. Before becoming a Hotspot itself, a node scans its surroundings for other Hotspots available. While the deployed hardware enforces a lower limit on Scan Delay, our investigations focus on the impact of an upper boundary. As a Hotspot consumes a greater share of battery while being in this state as shown in [5], a smaller number of Hotspots for the general opportunistic network is preferred. This way, a small subset of partaking devices enables the greater part of all devices to efﬁciently communicate with regards to battery consumption. On the other hand, if devices are looking out for available Hotspots for too long, time available for transmission is reduced accordingly. Our ﬁndings from simulations outcomes show, that if Scan Delay is increased metrics indicate weaker network performance and we observe similar results as in [5]. Delivery probability declines and average latency is increasing because of reduced node contact time available for message transmissions. As another effect of this, overhead ratio and average hop count show an ostensible improvement.

D. Data Characteristics
a) Message Interval: Depicted in ﬁg. 2 is the measured simulation outcome of our metrics applied on simulations altering Message Interval and thus the shown total number of messages. A strong connection between increasing the number of messages and lessened network performance can clearly be seen. Transmitting more messages during the same simulation length ﬁlls up buffers faster and leads to an increased number of transmissions for forwarding messages. To show at which thresholds full buffers might impact simulation outcomes, we also plot the average buffer level on the right y-axis. Please note that ﬁg. 2a shows only an extract of the most interesting behavior, delivery probability decreases nearly linearly outside of the shown section. For ﬁgs. 2b and 2d a logarithmic scale is applied to the x-axis to allow a better spacing between presented measurements. Upon closely examining the metrics it is apparent that once buffers have been ﬁlled near completion because of the high number of messages, network performance degrades steadily for delivery probability and overhead ratio. But for the average hop count and latency, measurements remain more stable over an increasing number of messages. This is caused by fewer messages being successfully delivered and only their properties taken into account for evaluation. It is evident, as also explained in our expected outcome, that the opportunistic network can only handle that many messages before physical capacity limits are reached. For our simulations, message counts of up to 1000 messages show a preferred message performance.

378

Table II RESULTING WEIGHTS OF THE APPLIED LINEAR REGRESSION

Weight for
Delivery probability Average hop count Overhead ratio Average latency

Transmission range (a1)
0.004 112 75 0.007 055 35 0.095 268 58 −34.327 491 05

Transmission speed (a2)
0.005 035 64 0.019 614 55 0.585 918 68 −15.298 703 48

Scan delay (a3)
−0.002 719 55 −0.003 835 38 −0.040 694 36 20.807 528 43

b) Message Size: We executed simulation runs for average message sizes from 1 to 20 MB with a step size of 1 MB and a standard deviation if 100 kB for each average. Inspecting the simulation outcomes through our metrics, we found out that having a message sizes smaller than or around the interface speed for one second (10 MB) returned the highest network performance. We deduce that when a messages’ size is greater than the duration needed for message transfer during a regular node contact duration, network performance decreases as shown by all our examined metrics.
c) TTL: For the message TTL we varied its values between 10 min and 30 to 300 min with increments of 30 min. Our main observation is that following a minimum TTL of 120 min is sufﬁcient to achieve high network performance in our examined simulation scenarios. Message are allowed to remain in node buffers long enough to be successfully forwarded and delivered through the simulated opportunistic network to obtain delivery probabilities above 90 %. Other metrics maintain a near steady measurement for TTL greater than or equal to 120 min.
In this section, we detailed on simulation results for single parameter variations. For each evaluated parameter, we outlined the most important observations, giving an overview of changing network behavior on diverse values. For WiFi transmission speed and range as well as the number of total messages, we gave visual representation of all values using the depicted graphs.
V. IDENTIFYING THE MOST INFLUENTIAL PARAMETER
In the previous section we investigated the impact of individual Device and Data Characteristics on opportunistic network performance. These information can easily be used to chose optimal values for speciﬁc opportunistic network applications. For our paper, we not only want to expose those individual impacts, but as our main contribution we want to provide an insight on which Device Characteristic has the most inﬂuence on network performance. We motivate and explain our use of Linear Regression on the conducted simulation results and provide the computation and conclusion on it.
A. Motivation
To expose the inﬂuence of various parameters on each other and to study how to improve the opportunistic network performance, an extensive number of simulations for all permutations of parameters we previously selected would have to be conducted. To reduce the complexity of ﬁnding the parameter having the greatest impact on Opportunistic

Network Performance, once again we select relevant parameters by using indications from our simulations. Namely, the parameters we select from are battery charge, buffer size, IEEE 802.11 Standard (transmission range and speed), scan delay and TTL. While this includes all of our deﬁned Device characteristics, the inclusion of TTL might seem odd. It is justiﬁed as the network layer can modify certain TTL values to improve network performance. As long as new TTL values are not lower than the original, no impairment for the sending application is expected. The other Data Characteristics are passively used in the network, no active inﬂuence is possible as explained in section III-D.
From this set of six parameters we argue that only the IEEE 802.11 Standard and scan delay are relevant. For the buffer size and TTL, our examinations identiﬁed optimal values for the scenarios considered. Battery charge has limited inﬂuence on simulation outcomes, as it effects devices to either participate in the opportunistic network or not.
As identifying the parameter with most inﬂuence from the newly selected parameters creates a three-dimensional optimization problem, we apply Linear Regression as explained below. For our evaluation, we do not focus on the values calculated by applying the linear function, but rather use the weights to identify the parameter with the greatest impact by comparing those weights.

B. Methodology

According to [14], Linear Regression is able to assemble

a linear function which approximates on given values. For

the mathematical background, the regression determines the parameters a1, . . . , am, b ∈ R for the equation

m

xik ≈

al · xk(jl) + b

(1)

l=1

while minimizing an error function. A ﬁtting error function is given through the method of least squares shown in eq. (2).

E

=

1 n

n

e2k

=

1 n

n

m

2

x(ki) −

al · x(kj) − b

(2)

k=1

k=1

l=1

x(kjl) is deﬁned as one component of the characteristic

x(i) ≈ f (xk(j1), . . . , xk(jm))

For our application, xk(j1), . . . , xk(jm) is given by the parameter variation values and x(ki) resembles the outcomes of one metric, e.g. delivery probability.

379

C. Application
As indicated in our motivation, we identify the characteristic with the greatest inﬂuence by comparing the weights a1, . . . , am ∈ R. This implies that if we look at the parameters after the regression learned them, we can see which parameters has which impact on the linear function due to its weight. A lesser weight indicates that the parameter has less impact on the result of the linear function, i.e. the metric it is applied on.
For our examinations, m is 3 and x1 is transmission range, x2 transmission speed, and x3 scan delay. Using these connections, we receive the weights shown in table II.
To achieve a ranking of those parameters and identify the parameter having the greatest impact on opportunistic network performance, we examine every weight and its inﬂuence on our four metrics.
Starting with weight a3 for the inﬂuence of scan delay on network performance, the values allow us to interpret its impact along with the evaluations done in section IV. As we already learned in our evaluation section, a higher scan delay does not improve network performance according to our metrics. The values shown in table II conﬁrm this behavior. The impact on delivery probability is four magnitudes below the one on average latency. While average hop count and overhead ratio show the apparent improvement, using the same argumentation as in our previous evaluation it is clear to see that this only happens due to fewer messages being delivered successfully. Concluding from this, we propose the scan delay as the parameter with least inﬂuence on network performance.
For the remaining two parameters, transmission range and speed, we also compare their weights (a1 and a2) inﬂuence on network performance. What is interesting to see for the weight values on average latency is that a higher transmission range has a linear factor more than twice as high as the one of transmission speed. Normally, one would assume that a higher transmission speed leads to reduced latencies. For opportunistic networks, where normally no end-to-end connection is available, the latency also includes the time nodes take to travel until they reach another node for message forwarding. Due to this, a greater transmission range causes node contacts more often and for longer durations, leading to greater improvements of average latency than as with transmission speed. Both parameters also lead to promising weight values with regards to delivery probability. Although only by a small factor, both improve delivery probability and transmission speed has a greater impact, even if not by much. We already showed that increasing average hop count and overhead ratio are one side effect of increasing delivery probability in our evaluations. This is especially true in this case as Epidemic routing was utilized in our evaluations and ﬂooding-like routing algorithms generate a large number of message copies distributed to a greater number of nodes. Using these arguments, it is clear that higher values for each of transmission range and speed provide better network performance, although not directly visible through examining single metrics.

Ranking those two parameters by their weights impact

only and focusing on delivery probability as the main metric,

one would assume transmission speed to have the greatest

impact. But taking their parameters value ranges into account,

transmission range clearly leads the ranking. Its values x2 span from 10 to 160 m as compared to transmission speeds

x1 between 1 to 50 Mbit/s. This becomes even more clear

if we additionally include its impact on average latency as

previously discussed.

VI. CONCLUSION

In this paper we showed the impact of several parameters

within the context of opportunistic networks on Android

devices on general network performance. By giving a taxon-

omy on parameter categories we are able to give a reasoned

selection of relevant parameters for our study. An evaluation

on this selection offers insight on their individual impact

on opportunistic network performance. To achieve the main

contribution of our paper, we utilized a Linear Regression.

After carefully comparing the results of our Linear Regres-

sion examination, we propose a device’s transmission range as

the parameter having the most impact on opportunistic network

performance.

REFERENCES

[1] M. Conti and M. Kumar, “Opportunities in opportunistic computing,” Computer, vol. 43, no. 1, pp. 42–50, 2010.
[2] L. Pelusi, A. Passarella, and M. Conti, “Opportunistic networking: data forwarding in disconnected mobile ad hoc networks,” IEEE communications Magazine, vol. 44, no. 11, 2006.
[3] “IDC - Smartphone Market Share - OS,” https://www.idc.com/promo/smartphone-market-share/os, Accessed 05/2019.
[4] A. Ippisch and K. Grafﬁ, “An Android Framework for Opportunistic Wireless Mesh Networking,” in Proceedings of the International Conference on Networked Systems, 2015, pp. 1–2.
[5] S. Trifunovic, B. Distl, D. Schatzmann, and F. Legendre, “Wiﬁ-opp: Ad-hoc-less opportunistic networking,” in Proceedings of the 6th ACM Workshop on Challenged Networks, 2011, pp. 37–42.
[6] T. McDonnell, B. Ray, and M. Kim, “An empirical study of api stability and adoption in the android ecosystem,” in Software Maintenance (ICSM). IEEE, 2013, pp. 70–79.
[7] D. T. Wagner, A. Rice, and A. R. Beresford, “Device analyzer: Understanding smartphone usage,” in International Conference on Mobile and Ubiquitous Systems: Computing, Networking, and Services. Springer, 2013, pp. 195–208.
[8] A. Keränen, J. Ott, and T. Kärkkäinen, “The ONE Simulator for DTN Protocol Evaluation,” in SIMUTools: Proceedings of the International Conference on Simulation Tools and Techniques. ICST, 2009.
[9] C. Funai, C. Tapparello, and W. Heinzelman, “Enabling multi-hop ad hoc networks through wiﬁ direct multi-group networking,” in International Conference on Computing, Networking and Communications (ICNC). IEEE, 2017, pp. 491–497.
[10] N. P. Palma, V. Mancuso, and M. A. Marsan, “Infrastructureless pervasive information sharing with cots devices and software,” in World of Wireless, Mobile and Multimedia Networks (WoWMoM). IEEE, 2018, pp. 1–9.
[11] “IEEE standard for information technology–telecommunications and information exchange between systems local and metropolitan area networks–speciﬁc requirements - part 11: Wireless LAN medium access control (MAC) and physical layer (PHY) speciﬁcations,” IEEE Std 802.11-2016 (Revision of IEEE Std 802.11-2012), pp. 1–3534, 2016.
[12] S. Sati, C. Probst, and K. Grafﬁ, “Analysis of buffer management policies for opportunistic networks,” in International Conference on Computer Communication and Networks (ICCCN), 2016, pp. 1–8.
[13] A. Vahdat, D. Becker et al., “Epidemic routing for partially connected ad hoc networks,” 2000.
[14] T. Runkler, Data Mining–Modelle und Algorithmen intelligenter Datensysteme. Springer Verlag, Wiesbaden, 2015.

380

