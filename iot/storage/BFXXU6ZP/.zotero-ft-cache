Contiki CoAP and
MQTT
Antonio Liñán Colina

• Architectures: 8-bit, 16-bit, 32-bit • Open Source (source code openly
available) • IPv4/IPv6/Rime networking • Devices with < 8KB RAM • Typical applications < 50KB Flash • Vendor and platform independent • C language • Developed and contributed by Universities,
Research centers and industry contributors • +10 years development

Zolertia RE-Mote

Zolertia RE-Mote (Zoul inside)
• ARM Cortex-M3, 32MHz, 32KB RAM, 512KB FLASH
• Double Radio: ISM 2.4GHz & 863-925MHz, IEEE 802.15.4-2006/e/g
• Hardware encryption engine and acceleration
• USB programing ready • Real-Time Clock and Calendar • Micro SD slot and RGB colors • Shutdown mode down to 150nA • USB 2.0 port for applications • Built-in LiPo battery charger to work with
energy harvesting and solar panels • On-board RF switch to use both radios over
the same RP-SMA connector • Pads to use an external 2.4GHz over U.Fl
connector, o solder a chip antenna

http://electronicdesign.com/iot/mqtt-and-coap-underlying-protocols-iot

03-coap
examples/zolertia/tutorial/03-coap

• UDP-reliable (confirmable), SMS supported • CoRE Link-format (GET /.well known/core) • Client/Server • IANA Registered (error codes, content format) • Resource Discovery and asynchronous subscription • Four-bytes compact header • Multicast and one-to-one supported • HTTP verbs GET, PUT, POST, DELETE • HTTP-like header (Options) • URI (Uniform Resource Identifier)

http://coap.technology/ https://tools.ietf.org/html/rfc7252

examples/zolertia/tutorial/03-coap

http://www.slideshare.net/zdshelby/coap-tutorial

examples/zolertia/tutorial/03-coap

CoAP URI

coap://[aaaa::c30c:0:0:1234]:5683/actuators/leds?color=b

Host

Port Path

Query

examples/zolertia/tutorial/03-coap

http://www.slideshare.net/paolopat/mqtt-iot-protocols-comparison

examples/zolertia/tutorial/03-coap

http://www.slideshare.net/paolopat/mqtt-iot-protocols-comparison

examples/zolertia/tutorial/03-coap

apps/er-coap apps/rest-engine

apps/er-coap apps/rest-engine

apps/er-coap apps/rest-engine

URI Query Function to invoke whenever there’s a GET request
The CoAP Accept option can be used to indicate which Content-Format is acceptable to the client.
examples/zolertia/tutorial/03-coap/resources/res-adxl345.c

Importing the Resource Resource activation
examples/zolertia/tutorial/03-coap/resources/er-example-server.c

Search resources to include in the “resources” directory
REST engine and CoAP libraries
examples/zolertia/tutorial/03-coap/resources/Makefile

Only on Firefox: install the following plug-in:
https://addons.mozilla.org/en-US/firefox/addon/copper-270430/ http://people.inf.ethz.ch/mkovatsc/copper.php

Border Router IPv6/6LoWPAN
er-example-server CoAP server in Contiki OS
Copper CoAP user-agent On Firefox browse the CoAP Server, discover and learn its resources
examples/zolertia/tutorial/03-coap/er-example-server.c

CoAP Server

Core temperature Voltage level RGB LED

CoAP Client

Button events examples/zolertia/tutorial/03-coap/er-example-server.c

Connect a RE-Mote and program the example: make er-example-server.upload
examples/zolertia/tutorial/03-coap/er-example-server.c

On another terminal run the Border Router examples/zolertia/tutorial/02-ipv6/udp-client-and-server

Verify the UDP client is in our network and responsive examples/zolertia/tutorial/02-ipv6/udp-client-and-server

Pong! – check the CoAP server is online
examples/zolertia/tutorial/03-coap/resources/er-example-server.c

Discover the Resources of the devices, and how to use them
examples/zolertia/tutorial/03-coap/er-example-server.c

Retrieve data on different formats
examples/zolertia/tutorial/03-coap/er-example-server.c

Control devices and actuators
examples/zolertia/tutorial/03-coap/er-example-server.c

Observe a variable and receive notifications if any change
examples/zolertia/tutorial/03-coap/er-example-server.c

examples/zolertia/tutorial/03-coap/wireshark-coap-server-example.pcap

04-mqtt
examples/zolertia/tutorial/04-mqtt

http://mqtt.org

• On top of TCP/IP • Publish/Subscribe messaging pattern • Message Broker distributes topics to clients • Topics are UTF-8 string-based with hierarchical structure • No direct connection between clients • Quality of Service • Retain-Flag: new subscribed clients will received last value • Last Will: notify other clients when disconnected
ungracefully • KeepAlive: ping request messages to the bróker • Clients have to know beforehand the structure of the data
published to a topic • MQTT is data-agnostic
examples/zolertia/tutorial/04-mqtt

CONNECT
Waits for a connection to be established with the server
DISCONNECT
Waits for the MQTT client to finish any pending task and closes the TCP session
SUBSCRIBE
Request the server to subscribe the client to one or more topics
UNSUBSCRIBE
Request the server to subscribe the client to one or more topics
PUBLISH
Updates a topic with data
examples/zolertia/tutorial/04-mqtt

http://www.hivemq.com/blog/how-to-get-started-with-mqtt

examples/zolertia/tutorial/04-mqtt

http://www.slideshare.net/paolopat/mqtt-iot-protocols-comparison

examples/zolertia/tutorial/04-mqtt

Topics starting with $ are special These are reserved for the broker statistics

http://www.hivemq.com/blog/mqtt-essentials-part-5-mqtt-topics-best-practices

examples/zolertia/tutorial/04-mqtt

Required to be included in the process using MQTT apps/mqtt

To start the MQTT client this function should be called first The max_segment_size is the TCP chunk of data to be sent (default 32 bytes) The client_id is a string identifying the client
apps/mqtt

The keep_alive value is used by a timer waiting a PINGRES from the broken, if expired and no response is obtained, it triggers a disconnection
apps/mqtt

Message ID (mid) is zero for QoS=0 apps/mqtt

apps/mqtt

apps/mqtt

Border Router IPv6/6LoWPAN

mqtt-example The MQTT client publishing to the topic “zolertia/evt/status” and subscribed to “zolertia/cmd/leds”

MQTT bróker test.mosquitto.org

mqtt-client.py Paho MQTT client Subscribed to the “zolertia/evt/status” topic, used to check the example

examples/zolertia/tutorial/04-mqtt

Uptime Signal strength ID/Name Default Route

zolertia/evt/status Core temperature Voltage level
examples/zolertia/tutorial/04-mqtt

zolertia/cmd/leds

LED color and state

examples/zolertia/tutorial/04-mqtt

MQTT Mosquitto You can run your own MQTT bróker ocally on your machine, and also use the mosquitto-cients to test your application
examples/zolertia/tutorial/04-mqtt

If you don’t have DNS resolv, always double-check the broker addresses!
examples/zolertia/tutorial/04-mqtt/project-conf.h

examples/zolertia/tutorial/04-mqtt/project-conf.h

Subscribed to the topic: zolertia/cmd/leds
Publishes to the topic: zolertia/evt/status
examples/zolertia/tutorial/04-mqtt/project-conf.h

examples/zolertia/tutorial/04-mqtt/Makefile

1 STATE_INIT: mqtt_register(…)

X DISCONNECTED: mqtt_disconnect(…)

2 STATE_REGISTERED: mqtt_connect(…)

3 STATE_CONNECTING: ctimer checking(…)

4 STATE_CONNECTED: mqtt_subscribe(…)

5 STATE_PUBLISHING: etimer_set(publish interval) examples/zolertia/tutorial/04-mqtt

examples/zolertia/tutorial/04-mqtt/mqtt-example.c

examples/zolertia/tutorial/04-mqtt/mqtt-example.c

examples/zolertia/tutorial/04-mqtt/mqtt-example.c

examples/zolertia/tutorial/04-mqtt/mqtt-example.c

examples/zolertia/tutorial/04-mqtt/mqtt-example.c

examples/zolertia/tutorial/04-mqtt/mqtt-example.c

MQTT demo client running on the device
Paho MQTT client in Python subscribed
Mosquitto publishing to turn a LED on
examples/zolertia/tutorial/04-mqtt/mqtt-example.c

examples/zolertia/tutorial/04-mqtt

examples/zolertia/tutorial/04-mqtt

https://kamilfb.github.io/mqtt-spy/

examples/zolertia/tutorial/04-mqtt

Conclusions
You should be able to:
• Create CoAP server applications • Implement CoAP resources with different response format types • Use Copper plug-in CoAP client • Understand CoAP features and functionalities • Create MQTT client applications • Create publish/subscribe topics • Install a local MQTT broker using mosquitto • Use desktop and mobile applications to debug MQTT
applications

Antonio Liñán Colina
alinan@zolertia.com antonio.lignan@gmail.com
Twitter: @4Li6NaN LinkedIn: Antonio Liñan Colina github.com/alignan hackster.io/alinan

