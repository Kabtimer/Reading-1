Sliced-RAN: Joint Slicing and Functional Split in Future 5G Radio Access Networks

Behnam Ojaghi, Ferran Adelantado

Elli Kartsakli Angelos Antonopoulos, Christos Verikoukis

Wireless Networks Research Lab (WINE) Iquadrat Informatica S.L. Centre Tecnologic de Telecomunicacions

Universitat Oberta de Catalunya (UOC) Barcelona, Spain

de Catalunya (CTTC/CERCA)

Castelldefels, Spain

ellik@iquadrat.com

Castelldefels, Spain

{bojaghi,ferranadelantado}@uoc.edu

{aantonopoulos, cveri}@cttc.es

Abstract—The unprecedented surge in mobile data trafﬁc, along with the wide range of services and the corresponding different performance requirements, has raised the need for a new mobile network architecture. In that sense, 5G has been conceived as a software deﬁned network able to provide service-tailored connectivity. Network slicing is a key mechanism to serve efﬁciently the diversiﬁed service requirements. In this paper, we formulate the joint RAN slicing and functional split with optimization of centralization degree (CD) and throughput. Our results show that even though in terms of CD we have more costs, we can better meet the service requirements and also have more throughput in the network.
Index Terms—5G network, functional split, slicing
I. INTRODUCTION
The unprecedented surge in data trafﬁc experienced over the last decade has stretched the telecommunications networks to their capacity. According to Cisco’s forecast [1], global IP trafﬁc will have increased 127-fold from 2005 to 2021. This demand rise will be exacerbated for wireless and mobile trafﬁc, which is expected to account for more than 60% of the total IP trafﬁc by 2021, growing twice as fast as ﬁxed IP trafﬁc. It is precisely in this context of trafﬁc explosion in which the requirements for 5G have been deﬁned [2]. In a nutshell, 5G must support high data rates, low latency targeting about 1 ms roundtrip time, a reduction of the cost and energy consumption, and massive connectivity [3].
The diversity of performance requirements, ranging from 1Gbps peak rate to 1ms end-to-end latency, renders a classical static network architecture unfeasible for 5G. Thus, 5G is conceived as a network able to provide service-tailored connectivity, by leveraging network virtualization techniques based on Software Deﬁned Networking (SDN) [4] which provides the network with enough ﬂexibility, mainly to create isolated slices on-demand on top of the physical network.
The virtualization and the slicing process required to adapt the Radio Access Network (RAN) to users’ performance requirements pose signiﬁcant challenges in 5G networks. In the future, RAN will be composed of a Central Unit (CU) and a set of geographically distributed Remote Radio Heads (RRH) connected through a packet-based

network, as proposed by 3GPP in [5] and in [6]1. Although the optimal distribution of layers PDCP/RLC/MAC/PHY between the CU and the RRHs (known as functional split) has attracted the attention of the research community, it still remains as an open research problem [7]–[10]. In this paper, we propose a joint analysis of the functional split along with RAN slicing to meet the requirements of diverse trafﬁc slices simultaneously.
The rest of the paper is organized as follows. In Section II, an overview of the current state of the art is provided, and the main contributions of the paper are stated. Section III describes the problem. In Section IV, we formulate the optimization of computational cost and the throughput. Section V explores the performance analysis of the system model and shows the corresponding results. Finally, Section VI presents the conclusion for this work.
II. RAN VIRTUALIZATION AND SLICING
Virtualization and slicing have become two major concepts of future 5G networks. Given the importance of SDN as an enabler for both virtualization [11] and slicing [12], some recent works have been focused on RAN virtualization platforms and slicing designs. Foukas et al. propose FlexRAN in [13], a ﬂexible and programmable software-deﬁned RAN (SD-RAN) platform. The platform is composed of a centralized controller and one agent per evolved Node B (eNB) that separates control and data planes and allows a ﬂexible control plane design. This architecture enables the dynamic allocation of control functions between the centralized controller and the decentralized agents, thus tailoring the RAN to meet the performance requirements. However, despite making a step forward in the direction of the virtualization of the RAN, the proposal still lacks a slicing design. The same authors in [14] proposed Orion, which is a RAN slicing design running on the FlexRAN platform, while guaranteeing the functional isolation among slices. Isolation of functions among slices is of paramount importance, since it allows a slice-custom functional split within a single shared eNB. In other words, two different slices sharing the same physical node can be conﬁgured with different functional splits.For instance, in a speciﬁc eNB, a slice serving
1The packet-based network connecting the CU and RRHs is an integrated backhaul/fronthaul network, also known as cross-haul in [6].

978-1-5386-8088-9/19/$31.00 ©2019 IEEE

a high speed user better suits a centralized functional split, so that the coordination among neighboring cells is tighter and the handover performance can be simpliﬁed. Conversely, the slice serving a low latency user requires more decentralized functional splits to reduce the HARQ delay. This is the main weakness of [7], [8], [15] where, for simplicity, either no slicing is considered or all slices are assumed to suit the same functional split. Two notable recent works, [6] and [16], address the optimization of the functional split. Speciﬁcally, WizHaul is proposed in [6] as a joint routing and functional split optimization to achieve maximum centralization. Similarly, FluidRAN follows the same rationale but targeting the monetary cost minimization [16]. However, none of them consider the slicing of the RAN.
In this context, this paper is aimed to design a joint routing (from user to CU) and functional split optimization while considering different slices. As shown schematically in Fig. 1, the slicing of the RAN allows a customized functional split deployment per slice, thus optimizing the available resources, e.g. transport network capacity and RRH or CU computational capacity. Fig. 1 conveys how different control functions are allocated either at the RRH or at the CU for each slice.
Fig. 1. Slicing based on service requirements.
Speciﬁcally, the contributions of this paper are the following:
• We propose a joint slicing and functional split RAN optimization. As described in [5] and implemented in [14], functional isolation is assumed at the eNB. This means that each slice of an eNB can have a different functional split.
• The slice creation is extended up to the user. In general, the slicing only considers the RAN, [6], [16]. Instead, this paper aims to exploit the high density of RRHs by jointly analysing routing in the RAN and user association.
• Not all services support the whole range of possible functional splits. For instance, high transmission rates usually require a high degree of centralization to implement efﬁcient Coordinated Multipoint (CoMP). We take this into account in the functional split optimization.
III. SYSTEM MODEL As thoroughly described in Section II, the RAN can be modeled as a CU, referred to as node 0, and a set of RRHs, R = {1, . . . , R}. Connecting the RRHs and the CU, there

is a transport network (fronthaul/backhaul) composed of a set of forwarding nodes, Q = {1, . . . , Q}, connected among them and with the CU and the RRHs through a set of links L = {li,j : i, j ∈ R ∪ Q ∪ {0}}. Each link li,j ∈ L has a capacity equal to ωi,j ≥ 0 (in bps) and a delay di,j ≥ 0 (in sec). The connection between the CU and an RRH can be realized through multiple paths [16]. Let us then deﬁne the ith path P r,i from RRH r to the CU as the set of links between them. Given that there might exist multiple paths between RRH r and CU, all possible paths from RRH r to CU is denoted by P r. Additionally, the set of users served by the network is denoted by U and are characterized by their required data rate λsu, where u ∈ U and s ∈ S is the service type of the user.
3GPP has proposed in [5] a wide range of possible granularities of the functional split, from the coarsest granularity (the functional split is determined by the computational capacity of the RRH and CU computational capacities and the transport network capacity) to the ﬁnest granularity (the functional split is decided on a user, bearer or slice basis). Without precluding any of the granularity levels proposed by 3GPP, in the sequel we focus on the trafﬁc type based functional split. As shown in [5], the control functions of layers PDCP, RLC (high and low), MAC (high and low) and PHY (high and low) can be allocated either in the CU or in the RRH. Accordingly, a speciﬁc allocation (i.e., functional split) can be determined per slice. Given that slicing will be done on a service type basis, hereafter service and slice concepts will be interchangeable. In the sequel we will assume a set of four RAN functions, denoted as F = {f0, f1, f2, f3}, where f0 is the low layer network function (RF, signal and analog processing, etc.) which is always placed in the RRH and f3 is the high layer network function (e.g., PDCP and above layers). Depending on the functional split, these functions will be allocated either at the RRH or at the CU. That is, a completely centralized functional split will allocate f0 at the RRH and the rest of functions at the CU. Conversely, a completely decentralized functional split will accommodate all functions at the RRH. Initially, f0 is always placed in RRH and f3 is in CU, no matter which split we use. Based on the aforementioned deﬁnitions, three different functional splits are considered in the following, as also assumed in [6]. In split 1, φ1, f1 and f2 are located in RRH. This split is useful to serve users with low latency requirements. Split 2, φ2, which enables a better utilization of hardware, only allocates f1 in RRH while f2 is moved to CU. In split 3, φ3, all functions are moved to CU (known as Centralized-RAN, C-RAN) which allows a higher degree of coordination among eNBs.
Each functional split imposes different maximum latency and minimum throughput constraints to the fronthaul/backhaul. For instance, in functional split 1, the decentralization reduces trafﬁc overhead and the required backhaul capacity can be approximated by the aggregate users’ trafﬁc. Instead, for functional split 3, only RF function is located at the RRH, thus transmitting IQ samples through the fronthaul. In this case, samples are

usually encapsulated with CPRI [17] and the required fronthaul capacity depends on the bandwidth of the eNB, the number of antennas, etc. That is, fronthaul capacity requirement does not depend on the users’ trafﬁc for φ3. This can be observed in Table I, where fronthaul/backhaul bandwidth and latency requirements for each split are shown as described in [16].

TABLE I
BANDWIDTH AND LATENCY REQUIREMENTS OF FUNCTIONAL SPLITS (λsu IS THE DATA RATE OF USER u WITH SERVICE TYPE s)

Split Bandwidth (bps) Latency (ms) Functions allocated

at the RRH

φ1

λsu

30

φ2

1.02λsu

2

φ3

2.5 · 109

0.25

f0, f1, f2 f0, f1 f0

Given the described scenario, the network can create different slices on top of the physical RAN, each one with a speciﬁc functional split tailored to provide the required QoS, while guaranteeing the data rate and latency constraints of each functional split.

speed moving user requires a high degree of centralization
to better coordinate the handover process or, in other
words, it can only be supported by split φ3. On the contrary, an Ultra-Reliable Low Latency (URLLC) user
higher decentralization to guarantee low delay. Therefore,
not all services can be supported with all functional splits. Let us deﬁne the spectrum allocated to RRH r as Wr.
The spectrum is divided in Physical Resources Blocks
(PRB), each one with a bandwidth equal to w (in Hz).
Based on the deﬁnitions, if the user u with type s and transmission rate λsu (in bps), requires a number of PRBs per subframe equal to ρru,s when served by RRH r, the user will be served by the RRH with the highest SINR (i.e., the smaller ρru,s) as long as there are enough resources (See Fig. 2). Thus, the user association must hold the condition s∈S u∈U xru,sρru,s ≤ ρr, where xru,s ∈ {0, 1} is a binary variable to check whether user u with type s is connected to RRH r or not, and ρr = Wr/w is the number of available PRBs in that RRH.

Fig. 3. System model scheme

Fig. 2. Illustration of user associations with SINR
A. Optimal Slicing and Functional Split
The management and operation of the dynamic functional split in the RAN poses signiﬁcant challenges with several trade-offs. Not only reduction on the transport networks load can be achieved by locating RAN functions at RRHs, but also ofﬂoading the RAN functions and pooling at the CU beneﬁts from a computing costs reduction and offers centralized control that can improve the networks performance. While some splits have very tight delay constraints and create high fronthaul trafﬁc, in other splits the CU might not have enough computation power to accommodate all RAN functions. In this context, a convenient network slicing algorithm provides the network with a higher degree of ﬂexibility, enabling the adaptation of the functional split of each slice to trafﬁc requirements and network limitations (RRH and/or CU computing capacity, transport network capacity and delay, etc). Thereby, we aim to ﬁnd the optimal joint functional split and network slicing for future 5G networks.
B. User Associations
As mentioned earlier, each user’s service type can determine a minimum degree of centralization (i.e., the set of possible functional splits). For instance, a high

C. Routing and Delay Constraints

Connected users inject trafﬁc (bps) into the network, which is transmitted through the transport network over path p ∈ P r,i between CU and RRH r. This is shown in Fig. 3. Each RRH has connections to CU via sliced paths. These paths are used based on different demands of users trafﬁc. Indeed, each RRH is responsible of transmitting ﬂows of connected users to CU based on their service types. Hence, for each RRH there are different paths from CU. We deﬁne the trafﬁc of service type s served by RRH r through path p as trp,s, which must hold p∈P r trp,s = T r,s, where T r,s is the total trafﬁc of service type s served by RRH r (in bps). Based on Table I and the results of [16]:

T r,s = f1r,sQ1 − f2r,sQ2 + (1 − f1r,s)Q3

(1)

where f1r,s and f2r,s are equal to 1 when function f1 and f2, respectively, are located at the RRH r for service s

and they are equal to 0 otherwise, and

 

Q1 =

u∈U 1.02λsu.xru,s + 1.5

Q2 = u∈U 0.2λsu.xru,s + 1.5

 Q3 = 2500

Equation (1) provides the bandwidth requirements for

a given functional split. Thus, when functional split φ1 is

used, f1r,s = f2r,s = for functional split

1, and so T r,s = Q1 φ3, f1r,s = f2r,s = 0

−Q2. Conversely, and consequently

T r,s = Q3. Therefore, the set of paths from CU to RRH

r must be able to forward a trafﬁc of type s of at least

T r,s.

Routing also takes into account the delay of each link. In particular, slices with a functional split φn, with n = {1, 2, 3}, can only forward trafﬁc over paths with an aggregate delay below the constraints shown in Table I.

D. Computational Cost Model

The deployment of network functions either at the RRH or at the CU incur a computational burden or cost. In the following the computational cost in the RRH and in the CU are stated. Thus, the computational cost required at the RRH r is given by:

Cr = βr

λsu.xru,s (f1r,s.cr1,s + f2r,s.cr2,s) (2)

u∈U s∈S

where cr1,s and cr2,s are the computational cost of each function located at the RRH in CPU operations per bit per second, and λsu is the user transmission rate. We also use (monetary units per cycle) which is the the average

cost for serving each request; hence, for RRHs we set

βr = 0.017 and for CU β0 = 1 as detailed in [16]. As for the CU,

C0 = β0

λsu.xru,s(cr1,s(1−f1r,s)+cr2,s(1−f2r,s))

r∈R s∈S u∈U

(3)

IV. PROBLEM FORMULATION
A. Optimization of Computational Cost
The main objective of this optimization model is to maximize the Centralization Degree (CD), which is deﬁned as the inverse of the computational cost, CD = ( r∈R Cr + C0)−1. As discussed in [16], the computational costs of RRHs and CU can not be directly compared. In general, deploying additional capacity in a RRH is more costly than doing it in the CU. This effect is considered in (2) and (3) by assuming βr > β0. Therefore, the minimization of the total cost is equivalent to the maximization of the CD. This is the objective function of the optimization problem, as shown in (4) as long as it holds the capacity constraints in the integrated fronthual/backhaul. With regard to constraints, constraint (5) ensures the computation capacity needed to process f1r,s and f2r,s is less than the available capacity in RRH r (κr ).
Equation (6) is used to bound the maximum computational capacity supported by the CU (κ0). Equation (7) is explained in Section III-C. Constraint (8) states that the ﬂow from each RRH r to CU is bounded by the capacity of the links of the paths, denoted as ωi,j (in bps). The binary variable yip,j is used to check if the path p includes link li,j or not. Equations (9), (10), (11) as described in Section III-C, are used for routing paths. Indeed each path is considered for the speciﬁc slices, and these paths have constraints in terms of delay requirements (ms). Note that M is a large positive number, to zeroize the paths with unacceptable delays for each conﬁguration. Constraint (12) is explained in Section III-B, and constraint (13) is ensuring that each user is allowed to be connected to only one RRH. As discussed, not all paths are feasible solutions

for a given functional split. In particular, only paths with an aggregate delay below the maximum delay supported by the functional split will be considered. Thus, based on Table I, we deﬁne for each RRH r the set of paths with a delay above 30 ms (the maximum delay allowed by split φ1) as Prφ1 . Analogously, Prφ2 as the set of paths with a delay larger than 2 ms and Prφ3 as the set of paths with a delay larger than 0.25 ms.

−1

max CD =

Cr + C0

(4)

r∈R

subject to:

xru,sλsu (f1r,scr1,s + f2r,scr2,s) ≤ κr, ∀r ∈ R (5)
s∈S u∈U

2

λsu.xru,scrn,s(1 − fnr,s) ≤ κ0

(6)

r∈R s∈S u∈U n=1

trp,s = T r,s, ∀r ∈ R, ∀s ∈ S

(7)

p∈P r

trp,s.yip,j ≤ ωi,j , ∀j = i ∈ Q

(8)

r∈R s∈S p∈P r

trp,s ≤ M (2 − f1r,s − f2r,s), ∀r ∈ R, ∀s ∈ S (9)
p∈Prφ1

trp,s ≤ M (1 − f1r,s + f2r,s), ∀r ∈ R, ∀s ∈ S (10)
p∈Prφ2

trp,s ≤ M (f1r,s + f2r,s), ∀r ∈ R, ∀s ∈ S

(11)

p∈Prφ3

xru,sρru,s ≤ ρr, ∀r ∈ R
s∈S u∈U

(12)

xru,s = 1, ∀u ∈ U , ∀s ∈ S

(13)

r∈R

f1r,s, f2r,s ∈ {0, 1}, ∀r ∈ R, ∀s ∈ S

(14)

B. Optimization of Throughput

As explained in Section III-C, the aggregation of the trafﬁc in each RRH deﬁnes the throughput of the whole network. The problem deﬁned in Section IV-A can be concerted from the maximization of the CD into the maximization of the throughput by changing the objective function (4) for constraint (7).

C. Linearization of the Problem
In general, the method to linearize non-linear problems, where constraints include multiplication of variables, depends on the kinds of variables involved in the constraints. For the case of binary variables, for instance, if we have multiplication of binary variables, say x, y, it can be solved by adding another binary variable, z, that holds: z ≥ 0, z ≥ x + y − 1 and z ≤ x, z ≤ y. Since our optimization problem is a Mixed integer Non Linear Programming (MINLP) problem, it can be concerted into a linear problem (i.e, MIP), by deﬁning new

binary variables z1u,r,s and z2u,r,s multiplication of binary variables

to of

model linearly the f1r,s.xru,s, f2r,s.xru,s

stated in (1), (5), and (6). This formulation extends

naturally to more indices and it must hold the following

constraints:

xru,s, f1r,s, f2r,s, z1u,r,s, z2u,r,s ∈ {0, 1}

 


z1u,r,s ≤ xru,s

zz11uu,,rr,,ss

≤ ≥

f1r,s xru,s

+

f1r,s

−

1

 

z2u,r,s ≤ xru,s z2u,r,s ≤ f2r,s

 z2u,r,s ≥ xru,s + f2r,s − 1

(15) (16) (17)

V. PERFORMANCE ANALYSIS

In this section, we explore joint optimization of functional split and slicing with maximization of centralization degree (i.e., minimization of computational cost). For the numerical analysis, Monte carlo simulations have been run for the averages of 100 times to get statistical signiﬁcance. In order to highlight the impact of the joint slicing and functional split optimization, users of three different services have been considered. The ﬁrst service has a data rate uniformly distributed in the range 10-1000 kbps. This service can only be supported with functional split φ1. The second service has a data rate in the range 10-50 Mbps and can be supported by any of the three functional splits. Finally, the last service has a data rate within the range 70200 Mbps and it can only be served with functional split φ3. The scenario is composed of a single CU connected to a set of 10 RRHs. As for the computational capacity, we utilized the values used in [16] , with κ0 = 100, κr = 1 CPU Reference Core per Gbps. Regarding the computational cost, cr1,s = 3.25 and cr2,s = 0.75 CPU reference core per Gbps. We obtain results after running 100 times for two metrics of minimizing the computation cost (i.e., maximizing the centralization degree) and maximizing the throughput. Results are compared with where no slicing is considered. Therefore, a single functional split is applied to each RRH. In the sequel, the optimization proposed in this paper is denoted by SlicedRAN and the average cost and the average throughput for the ﬁrst, second, and third splits, when no slicing is considered, are denoted by split1, split2, split3, respectively. It is worth mentioning that in each scenario we set all RRHs to a single functional split (i.e., split1, split2, split3) in order to compare them with SlicedRAN .
In Fig. 4, we ﬁrst present the computational cost. The proposed algorithm presents a higher computational cost than split1, split2, split3 (i.e., a lower centralization degree). This increase of the computational cost can be justiﬁed with the inherent ﬂexibility of SlicedRAN . In particular, SlicedRAN aims to centralize network functions as long as networks constraints (backhaul/fronthaul capacity and delay, and available computational capacity in RRHs and CU) permit it. This decision is made on a slice basis. On the contrary, each of split1, split2, split3,

Fig. 4. Computation Cost analysis as a function of the number of users
Fig. 5. Throughput analysis as a function of the number of users
is conﬁgured for RRHs. With this, users that can not be served with the functional split deployed in the RRH will have to be dropped. For split3, it is expected to have the computation cost lower than SlicedRAN as shown in Fig. 4. However, for split1 and split2, for all of the numerical evaluations, we found that both splits give close results and with big difference with SlicedRAN . The existing difference between the computation cost of these splits with SlicedRAN is due to dropping more users for split1 and split2.
The behavior explained above is translated into a decrease of the throughput in the split1, split2, split3, as it can be observed in Fig. 5. It shows that with SlicedRAN more throughput is achieved due to serving more users with different type of services. Finally, Fig. 6 shows the throughput/computation cost for 30, 60, 90,
Fig. 6. Throughput vs Computation Cost trade-off for 30, 60, 90, 120 and 150 users respectively

120 and 150 users. In particular, for a given algorithm (i.e., SlicedRAN , split1, split2, and split3), the number of users increases from left to right. This ﬁgure shows how the proposed algorithm can achieve different tradeoffs between the computation cost (i.e., the inverse of centralization degree) and the throughput when the range of services covers completely different Quality of Service requirements. The trade-off between these two metrics can be clearly seen: as expected, as the number of users increase, the computation cost also increases. Likewise, throughput can only be improved at the expense of additional computational cost (decentralization). This improvement is directly related with the type of services of users which means the trafﬁc type with higher amount, the more throughput can be achieved. As it is shown in this ﬁgure, the slope of SlicedRAN is much higher than the slope of the split1, split2, split3. This means that the computation cost increase required to increase the throughput is smaller for SlicedRAN . For example, for split2, the increase in throughput is about 400 (Mbps) (i.e., 0.4 Gbps) whereas this increase is about 12 (Gbps) for SlicedRAN . Hence, SlicedRAN outperforms the increase in throughput when compared with single functional split cases (i.e., split1, split2, split3).
VI. CONCLUSIONS
RAN slicing along with functional split are two major concepts of future 5G networks. In this paper, we proposed SlicedRAN , which is a joint slicing and functional split optimization framework for 5G not yet fully investigated. We formulated this problem as a Mixed Integer Programming (MIP) to jointly optimize the centralization degree and throughput. Our results show that there is a trade-off between the centralization degree and the throughput. According to our results, computational cost in SlicedRAN is higher than the one in split1, split2, split3, which means that the centralization degree is lower than in split1, split2, split3. However, this is compensated by the increase in the throughput. Furthermore, in SlicedRAN the throughput increase is much higher and needs less increase in the computation cost. In the future work, we aim at extending this work by assessment of the system performance through various experimental results, and considering the other metrics in combination of the explored ones in the proposed approach.
ACKNOWLEDGMENT
This work has received funding from the European Unions Horizon 2020 research and innovation programme under grant agreement No. 722788 (5G-Spotlight project) and SPOT5G (TEC2017-87456-P), and from AGAUR (2017 SGR 891), and is partially supported by the Spanish Ministry of Economy and the FEDER regional development fund under SINERGIA project (TEC2015-71303-R) and AGAUR (2017 SGR 60).

REFERENCES
[1] CISCO, “Cisco Visual Networking Index: Forecast and Methodology, 20162021,” Tech. Rep., 2017. [Online]. Available: https://www.cisco.com/c/en/us/solutions/collateral/serviceprovider/visual-networking-index-vni/complete-white-paperc11-481360.pdf
[2] NGMN Alliance, “NGMN 5G White Paper,” Tech. Rep., 2015. [3] J. G. Andrews, S. Buzzi, W. Choi, S. V. Hanly, A. Lozano, A. C. K.
Soong, and J. C. Zhang, “What will 5g be?” IEEE Journal on Selected Areas in Communications, vol. 32, no. 6, pp. 1065–1082, June 2014. [4] E. J. Kitindi, S. Fu, Y. Jia, A. Kabir, and Y. Wang, “Wireless network virtualization with sdn and c-ran for 5g networks: Requirements, opportunities, and challenges,” IEEE Access, vol. 5, pp. 19 099–19 115, 2017. [5] 3GPP, “TR 38.801. Technical Speciﬁcation Group Radio Access Network; Study on new radio access technology: Radio access architecture and interfaces (Release 14),” 2017. [6] A. Garcia-Saavedra, J. X. Salvat, X. Li, and X. Costa-Perez, “WizHaul: On the Centralization Degree of Cloud RAN Next Generation Fronthaul,” IEEE Transactions on Mobile Computing, p. 1, 2018. [7] D. Harutyunyan and R. Riggio, “Flexible functional split in 5G networks,” in 2017 13th International Conference on Network and Service Management (CNSM), nov 2017, pp. 1–9. [8] C. Y. Chang, R. Schiavi, N. Nikaein, T. Spyropoulos, and C. Bonnet, “Impact of packetization and functional split on C-RAN fronthaul performance,” in 2016 IEEE International Conference on Communications (ICC), 2016, pp. 1–7. [9] M. Jaber, M. A. Imran, R. Tafazolli, and A. Tukmanov, “5G Backhaul Challenges and Emerging Research Directions: A Survey,” IEEE Access, vol. 4, pp. 1743–1766, 2016. [10] Small Cell Forum, “Small cell virtualization functional splits and use cases,” 2016. [11] X. Wang, C. Cavdar, L. Wang, M. Tornatore, H. S. Chung, H. H. Lee, S. M. Park, and B. Mukherjee, “Virtualized Cloud Radio Access Network for 5G Transport,” IEEE Communications Magazine, vol. 55, no. 9, pp. 202–209, 2017. [12] R. Ferrus, O. Sallent, J. Perez-Romero, and R. Agusti, “On 5G Radio Access Network Slicing: Radio Interface Protocol Features and Conﬁguration,” IEEE Communications Magazine, vol. 56, no. 5, pp. 184–192, 2018. [13] X. Foukas, N. Nikaein, M. M. Kassem, M. K. Marina, and K. Kontovasilis, “FlexRAN: A Flexible and Programmable Platform for Software-Deﬁned Radio Access Networks,” in Proceedings of the 12th International on Conference on Emerging Networking EXperiments and Technologies, ser. CoNEXT ’16. New York, NY, USA: ACM, 2016, pp. 427–441. [Online]. Available: http://doi.acm.org/10.1145/2999572.2999599 [14] X. Foukas, M. K. Marina, and K. Kontovasilis, “Orion: RAN Slicing for a Flexible and Cost-Effective MultiService Mobile Network Architecture,” in Proceedings of the 23rd Annual International Conference on Mobile Computing and Networking, ser. MobiCom ’17. New York, NY, USA: ACM, 2017, pp. 127–140. [Online]. Available: http://doi.acm.org/10.1145/3117811.3117831 [15] A. Maeder, M. Lalam, A. D. Domenico, E. Pateromichelakis, D. Webben, J. Bartelt, R. Fritzsche, and P. Rost, “Towards a ﬂexible functional split for cloud-RAN networks,” in 2014 European Conference on Networks and Communications (EuCNC), 2014, pp. 1–5. [16] A. Garcia-Saavedra, X. Costa-Perez, D. Leith, and G. Iosiﬁdis, “FluidRAN: Optimized vRAN/MEC Orchestration,” in IEEE INFOCOM 2018 - IEEE Conference on Computer Communications, 2018, pp. 1–9. [17] A. de la Oliva, J. A. Hernandez, D. Larrabeiti, and A. Azcorra, “An overview of the CPRI speciﬁcation and its application to C-RANbased LTE scenarios,” IEEE Communications Magazine, vol. 54, no. 2, pp. 152–159, 2016.

