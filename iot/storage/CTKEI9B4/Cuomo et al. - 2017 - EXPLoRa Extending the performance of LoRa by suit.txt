2017 IEEE 13th International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob)

EXPLoRa: EXtending the Performance of LoRa by suitable spreading factor allocations

Francesca Cuomo∗, Manuel Campo∗, Alberto Caponi†, G, iuseppe Bianchi †, Giampaolo Rossini‡, Patrizio Pisani ‡ ∗CNIT/ University of Rome ”La Sapienza”, Italy †CNIT/ University of Rome ”Tor Vergata”, Italy ‡Unidata S.p.A, Italy

Abstract—LoRaWAN is emerging as an attractive network infrastructure for ultra low power Internet of Thing devices. Albeit the technology itself is quite mature and speciﬁed, how to effectively allocate wireless resources so as to support a large amount of devices in a same terrestrial area is an open challenge. This paper contributes by proposing two algorithms (of incremental complexity) which are shown to outperform the basic Adaptive Rate Strategy (ADR) so far considered. A ﬁrst approach, named EXPLoRa-SF, shows the beneﬁts of a simple strategy which does not limit to use (as per ADR) distance/RSSI measurements, but also selects Spreading Factors (SF) based on the total number of connected devices. The advantages attained with EXPLoRa-SF further lead us to propose a more sophisticated algorithm, named EXPLoRa-AT, which employs an innovative “ordered waterﬁlling” approach which attempts to allocate the spreading factors so as to equalize the Time on Air of the packets transmitted by the system’s end devices in each spreading factor’s group. Simulation results show that the proposed algorithms signiﬁcantly outperform the basic ADR strategy, and particularly the EXPLoRa-AT algorithm appears very robust to different operating conditions and consistently guarantees high bit rates in the case of high trafﬁc loads.
Keywords—Low power wide area networks; Internet of Things; LoRaWAN; Spreading Factors; Resource Allocation.
I. INTRODUCTION
The Internet of Things (IoT) community is currently focusing on the design of large-scale network infrastructures targeting the coverage of massive-scale city-wide scenarios via either proprietary technologies such as LoRaWAN [1] or 3GPP standards such as Narrow-Band-IoT (NB-IoT, [2]). In this paper we speciﬁcally focus on LoRaWAN, a promising solution for large-scale ultra low power IoT deployments [3][4], poised to revolutionize pervasive smart-city services in ﬁelds such as transportation, energy or health, just to mention a few. The LoRaWAN’s architecture is built on a star topology formed by multiple LoRa End-Devices (ED) interconnected to Gateways (GW) (see Figure 1). A message transmitted by an end node can be in principle received by multiple far-away gateways, which in turns forward the collected messages to a Network Server that interacts with the different Application Servers. Battery-powered LoRa nodes are meant to last several years (say 10-20 years, and in any case more than 10 times with respect to cellular M2M); as such they communicate using a very low power and low bit rate. Still, they are able to reach quite long distances (in the order of tens of kilometers) owing to very robust signal spreading techniques. Communication is bi-directional, although uplink communications from end devices to the network server are strongly favoured.

There are some key differences of a LoRaWAN system with respect to a cellular one. First the star topology makes the architecture simple, low cost and easy to be managed. Moreover, the coverage may be greater than the cellular one and the system also provides deep indoor coverage. Moreover, the infrastructure should allow scalable capacity and support for multiple independent tenants, so as to provide both private and public networks. In the close future, also true-location, seamless mobility and security are foreseen.
Recently, several studies have started to address the performance of the LoRaWAN system, focusing on issues such as scalability [5][6][7], tailored application scenarios [8], and performance limits [9], [10]. Obviously, performance of networked LoRa devices not only depends on the communication technology, but also on how wireless resources are managed by each gateway. In principle, each node can communicate by selecting the minimum Spreading Factor (SF) which permits correct reception by the intended Gateway; indeed, this is the design target of the so called basic Adaptive Rate Strategy (ADR) currently employed in LoRaWAN deployments. However, as duly discussed in this paper, more clever SF selection can be considered so as to reduce interference among groups of devices which are assigned different SFs, and therefore improve the total network capacity.
In greater details, this paper contributes by proposing two approaches of incremental complexity. A ﬁrst approach, named EXPLoRA-SF, is aimed to show that network performance can indeed increase by eventually allocating larger-than-needed Spreading Factors. Even under EXPLoRA-SF’s very straightforward heuristic of equally splitting stations in SF groups, in several conditions the increased signal spread and therefore the increased transmission time-on-air is more than compensated by the reduction of the interference caused by simultaneous transmissions from the remaining nodes. Leveraging the preliminary insights gathered with EXPLoRA-SF, we propose a more advanced heuristic, called EXPLoRA-AT (Air Time), which used an innovative “ordered waterﬁlling” strategy which assigns SFs to end devices so as to attempt to achieve a same time-on-air for each group of (potential) interferers. Results show that this latter strategy is very effective especially at high load regime when the system supports thousands of nodes or high message rates.
The rest of the paper is organized as follows. Section II presents the main works in the current literature. The LoRa modulations and MAC protocols are described in Section III. The Section IV presents the EXPLoRa heuristics while the relevant performance analysis is in Section V. Conclusions and future work are discussed in Section VI.

978-1-5386-3839-2/17/$31.00 ©2017 IEEE

2017 IEEE 13th International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob)

Fig. 2. LoRaWAN architectural stack

Fig. 1. LoRaWAN architecture and topology
II. RELATED WORK
The current literature on LoRaWAN systems can be divided in three ﬁelds: i) works dealing with an overview of the current technology and proposing new solutions to optimize its performance [3][11]; ii) papers aiming at analyzing the LoRa capabilities and studying their performance in speciﬁc scenarios [12][7][5][13]; iii) works deﬁning channel models (through simulations in different environments and scenarios) and emphasizing how these infrastructures are sensitive to the environment in which they operate [14].
In [3], the authors present a performance and capability analysis of a currently available LoRa transceiver. They describe the tranceiver’s features and demonstrate how it can be used efﬁciently in a wide-area application scenario. In particular, they demonstrate how unique features such as concurrent non-destructive transmissions and carrier detection can be employed. The experiments demonstrate that six LoRa nodes can form a network covering 1:5:ha in a built up environment, achieving a potential lifetime of 2 year on 2 AA batteries, delivering data within 5 s with reliability of 80%. Moreover, [3] describes LoRaBlink, an IoT protocol for LoRa transceivers designed to support reliable and energy efﬁcient low-latency bi-directional multi-hop communication. The work in [11] provides an overview of LoRa and an indepth analysis of its functional components. The physical and data link layer performance are evaluated by ﬁeld tests and simulations. Based on the analysis and evaluations, the authors show that LoRa physical layer, thanks to the chirp spread spectrum modulation and high receiver sensitivity, offers good resistance to interference. Field tests show that LoRa can offer satisfactory network coverage up to 3 km in a suburban area with dense residential dwellings. The SF has signiﬁcant impact on the network coverage, as does the data rate. However, the performance drastically decrease when the link load increases.
Limits and potentialities of LoRaWAN are studied by Voigt et al. in [12]. Through simulations based on real experimental data, the paper shows that interference can drastically reduce the performance of a LoRa network. They also demonstrate that directional antennas and using multiple base stations can improve performance under interference. Scalability issues in the LoRA system are analyzed in several papers [6][7][5]. Bor et al. in [6] provide a LoRa link behaviour by using practical experiments able to describe (i) communication range in dependence of communication settings of SF and Bandwidth (BW) and (ii) capture effect of LoRa transmissions depending

on transmission timings and power. They also provided a LoRa simulator (LoRaSim) and evaluated the LoRa scalability limits in static settings comprising a single sink, and assessed how such limits can be overcome with multiple sinks and dynamic communication parameter settings. A measurementbased assessment of LoRa was also carried out in [14], which captures the Received Signal Strength Indicator (RSSI) by different locations from the base station and derives an heat map able to characterize performance as a function of the distance and of the environmental conditions (on water and on the groud). The paper also derives a channel attenuation model based on the presented measurements results. Empirical evaluations have been also provided in [15].
In [7] the effects of interference in a single gateway LoRa network have been investigated. Unlike other wireless networks, LoRa employs an adaptive chirp spread spectrum modulation scheme, thus extending the communication range in absence of any interference. Interference is however present when signals simultaneously collide in time, frequency, and spreading factor. Leveraging tools from stochastic geometry, the authors of [7] have formulated and solved two link-outage conditions that can be used to evaluate the LoRA behavior.
The paper [5] analyses the performance of the LoRa LPWAN technology by showing that, in accordance to the speciﬁcations, a single end device located close to the base station can feature an uplink data transfer channel of only 2 kbit/s at best. In terms of scalability, they show that a single LoRaWAN cell can potentially serve several millions of devices sending few bytes of data per day. Nonetheless, they showed that only a small portion of these devices can be located sufﬁciently far away from the base station. Finally, [13] and [16] derive throughput behavior and capacity limits under some ideal conditions (perfect orthogonality of the SFs).
III. LORA SPECIFICATIONS
LoRa is usually referred to two distinct layers: (i) a physical layer using a Chirp Spread Spectrum (CSS) modulation; and (ii) a MAC layer protocol (LoRaWAN), on top of the LoRa physical layer, which implies a speciﬁc access network architecture. It is designed mainly for sensor networks, where sensors exchange packets with the server by using a low data rate and relatively long time intervals (e.g. transmit every hour or even days). While LoRa is a proprietary technology developed by Semtech [1], LoRaWAN speciﬁcation are publicly available and promoted by the open-source LoRa Alliance [4]. This section provides an overview of the LoRa physical layer and LoRaWAN speciﬁcation [17].

2017 IEEE 13th International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob)

TABLE I.

SENSITIVITY OF LORA (IN dBm) AS A FUNCTION OF BANDWIDTH AND SFS, [6]

PP SF

BW 125

P kHzPP

250 kHz

500 kHz

7
-126.50 -124.25 -120.75

8
-127.25 -126.75 -124.00

9
-131.25 -128.25 -127.50

10
-132.75 -130.25 -128.75

11
-134.50 -132.75 -128.75

12
-133.25 -132.25 -133.25

Fig. 4. LoRaWAN three-layered protocol

Fig. 3. RSSI vs distance at 125 KHz

A. LoRa Physical Layer

Communication between end-devices and gateways is

spread out on different frequency channels and data rates.

LoRa uses up to 6 different programmable Spreading Factor

(SF): 7, 8, 9, 10, 11, 12. Furthermore, also the adopted

bandwidth can be conﬁgured: 125kHz, 250kHz and 500kHz

(typically 125 kHz for the 868 ISM band.) For a given SF, the

narrower the bandwidth is the higher the receiver sensitivity.

The selection of the data rate is a trade-off between communi-

cation range and message duration, given that communications

with different SFs do not interfere with each other. LoRa data

rates range from 0.3kbps to 50kbps. To maximize both battery

life of the end-devices and overall network capacity, the LoRa

network infrastructure can manage the data rate and RF output

for each end-device individually by means of an Adaptive Data

Rate (ADR) scheme. The relation between the nominal bit rate

and

the

SF

is

given

as:

R

=

SF

∗

CR 2SF /BW

and returns, for a

Code Rate CR = 4/5, the values in Table I. Figure 3 shows,

for a bandwidth equal to 125 kHz, both the trend of the RSSI

with respect to the distance from the gateway and how the

threshold for a correct demodulation depends on the adopted

SF. The usage of higher SFs allows to cover higher distances.

B. LoRaWAN architecture
Three main components are deﬁned in the LoRaWAN speciﬁcations to form the LoRaWAN network architecture:
• End-device-ED: the low-power consumption sensors that communicate with gateways using LoRa;
• Gateway-GW: the intermediate devices that forward packets coming from EDs to a network server over an IP backhaul interface allowing a high throughput, such as Ethernet or 3G. There can be multiple gateways in a LoRa deployment, and the same data packet can be received (and forwarded) by more than one GW;
• Network Server-NS: responsible for de-duplicating and decoding the packets sent by the devices and generating packets that should be sent back to the EDs.
As shown in Figure 1, the LoRaWAN network is ”a starof-stars” topology and, unlike traditional cellular networks,

the end-devices are not associated with a speciﬁc gateway in order to have access to the network. Indeed, gateways serve simply as a link layer relay and forward the packet received from the end-devices to the NS, through an Ethernet or 3G connection, after adding information regarding the channel quality (i.e. RSSI and SNR). Thus, an end-device is associated with a network server, which is responsible for detecting duplicate packets (and thus discarding duplicates), choosing the appropriate gateway to send a reply (if any) and, ﬁnally, sending back packets to the end-devices. Note that, at least logically, gateways are transparent to the end-devices.
The LoRaWAN protocol stack is presented in Figure 2. LoRaWAN supports three different classes of EDs for the various needs of sensor’s applications:
• Class A EDs can schedule an up-link transmission based on their own needs, with a small jitter. This class of devices allows bi-directional communications, whereby each up-link transmission is followed by two short down-link receive windows. Down-link transmission from the server at any other time has to wait until the next up-link transmission occurs. Class A devices have the lowest power consumption.
• Class B end-devices open extra receive windows at scheduled times. A synchronized beacon from the gateway is thus required, so that the NS is able to know when the end-device is listening.
• Class C end-devices have almost continuous receive windows and the highest power consumption.
The LoRaWAN does not enable device-to-device communications: packets can only be transmitted from an end-device to the network server, or vice-versa. Device-to-device communication, if required, must thus be sling-shot through the network server (and consequently, by way of two gateway transmissions).
C. LoRaWAN protocol
LoRa messages used for the radio physical layer have the same format both for uplink and downlink. Such message format is shown in Figure 4 together with upper layers formats. The header is mandatory both for uplink and downlink messages while the CRC is mandatory only in the uplink.
The Physical Payload of the physical layer message carries the MAC packet. The Message Header (MHDR) ﬁeld contains information about the LoRaWAN version used (v1 or v2) and the Message Type (MType). The message type ﬁeld enable to distinguish registration packets (Join-Request/Accept) from unconﬁrmed data (Unconﬁrmed Data Up/Down) and

2017 IEEE 13th International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob)

TABLE II. LORAWAN SUPPORTED MAC COMMANDS

Command LinkCheck1
LinkADR
DutyCycle
RXParamSetup DevStatus NewChannel RXTiming TXParam DIChannel

Description
has the purpose of validating the connectivity of the device to the network used to request to the end-device to change data-rate, transmit power, repetition rate or channel allows to set the maximum duty-cycle of a device for transmission used to change the reception parameters of the device used by the network server to reset the status of the device allows to modify the deﬁnition of the radio channel parameters used to setup the time slots for reception by the device used to change the transmission parameters allows to create an asymmetric channel by shifting the downlink frequency band with respect to the uplink one (otherwise they have the same band)

conﬁrmed data (Conﬁrmed Data Up/Down) packets. MIC is a cryptographic message integrity code computed over the MHDR and the MAC payload data frame: Frame Header (FHDR), Port Field (FPort) and the Frame Payload (FRMPayload).
As for the MAC payload, the FHDR ﬁeld has information about the end-device short address (DevAddress) as well as other control information carried in the Frame Control ﬁeld (FCtrl) such as the status of the Adaptive Data Rate for the communication. The Frame Port (FPort) ﬁeld has a 0 value in case of FRMPayload containing only MAC commands while it is used by the application to discriminate the content of the payload, so the value of the packet is application-speciﬁc. FRMPayload is the payload containing MAC commands or application data, which is encrypted using AES with a key length of 128 bits.
Note that, together with the physical layer messages, the NS receives also additional information regarding the physical parameters of the communication, such as SNR and RSSI, from the Gateways.
D. MAC Commands
LoRaWAN enables to customize the parameters used for the communication between the ED and the GW by deﬁning several MAC commands1, listed in Table II.
Such commands allow for a wide range of conﬁguration options of the radio parameters of the ED. The wide coverage of functionality provided by such commands, enables the NS to have a full control of the state of network as well as to optimize the usage of the radio channel by changing communication parameters of the EDs.
IV. EXPLORA HEURISTICS
EXPLoRa algorithms aim at allocating in a suitable way the SFs to network devices in order to improve the DER (Data Extraction Rate) and the network throughput. We deﬁne the DER as in [6], i.e., the ratio of messages correctly received by the GWs to transmitted messages from all the network EDs, computed in a given time period. This metric does not capture individual node performance but it is an important measure of the overall network behavior and
1The only message sent by the ED to the NS is the LinkCheck command. All other MAC commands are sent by the NS to the ED.

Fig. 5. Data Extraction Rate as a function of the SF, 10-100-1000 EDs.

scalability. To give an example in Figure 5 we plot the DER as a function of the SF. We can notice that for high SFs and quite high number of EDs the DER may become very low. This means that the SF allocation affects the network scalability.

The selection of a speciﬁc SF value depends on the value of the average Received Signal Strength Indicator (RSSI) with which the messages arrive to the gateways. From Figure 3 we can notice that the RSSI value depends on the distance between the device and the gateway according to the Lpl(d) path loss model:

d

Lpl(d) = Lpl(d0) + 10γ log( d0 ) + χσ [dB]

(1)

where Lpl(d0) is the mean path loss at the reference distance d0, γ is the path loss exponent and χσ ∼ N (0, σ2) is the normal distribution with zero mean and σ2 variance to account for shadowing.

In the LoRaWAN, the allocation of the SF to an ED is important for different reasons: an high spreading factor value corresponds to a high coverage distance within which the device can be received correctly but, it implies a low bit rate and a consequent a high Time-on-Air (ToA). Therefore, in case of high SFs (10-12), the communication channel will be occupied for a long time, increasing the possibility of collisions between packets concurrently transmitterd. On the other side, the different SFs are mutually orthogonal (or pseudo-orthogonal), and this feature enables to have more communications in the same channel without collisions.

The idea of EXPLoRa is to play with this tradeoff, so we plan to use all available SF values (7, 8, ..., 12) for all EDs covered by a GW with the objectives of improving the DER (by reducing the collision rate) and the throughput. Given the above rationale, we propose in this work two different approaches to optimize the allocation of SFs to the ED:

• EXPLoRa-SF: it is the simplest approach in which, given a number of EDs in the GW radio range, the heuristic tries to equally distribute the SFs to these nodes, only constrained by their RSSI values and relevant thresholds. This allows to create coexisting orthogonal sub-channels in the same channel bandwidth where all nodes can communicate still keeping the GW visibility;
• EXPLoRa-AT: it has as objective a fair allocation of the Air Times among the nodes in the network. It guarantees (when possible) the equalization of the radio channel usage by the EDs by also leverages the

2017 IEEE 13th International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob)

use multiple SFs in order to have orthogonal subchannels.
In what follows, both approaches are discussed and the related pseudo-code to implement the algorithms are reported. Without loss of generality, we consider a single channel for each GW. However it is straightforward to extend the proposed approaches to GWs managing multiple channels (e.g.3).
A. EXPLoRa-SF
EXPLoRa-SF assigns the SFs at different subsets of end devices in accordance to a simple logic: the lowest available value of SF is assigned to nodes having the best RSSIs, till a number k of devices is served. When devices of ﬁrst subset have been processed and have assigned the SF = 7, EXPLoRa-SF assigns the next spreading factor value to the next k users, always ordered in accordance to the RSSI. This procedure is repeated till the last subset is processed ad all SF values have being assigned.
More into detail, as general scenario we consider N EndDevices in a system of G gateways. Given the communication conditions only D end devices are covered by network (i.e., in the radio range of a GW). Let us deﬁne a [1 × N ] vector SFvec that collects all SF values of all end devices, and an RSSI matrix matRSSI having size [G × N ] storing all RSSI values measured in the network: the generic element matRSSI [i, j] represents the RSSI value with which the i−th gateway receives the signal of j−th ED. Therefore, values read on i−th row correspond to the RSSI values of all devices communicating with the i−th gateway, while values read on j−th column are the RSSI values of j−th node as observed by the G different gateways.
First, we identify the D nodes that are covered by the GWs, i.e. the nodes having a RSSI above the minimum sensitivity threshold. Then, we compute the number of EDs k that should have the same value of SF. k is obtained by dividing the number of EDs covered by the network by the cardinality of the set of SFs, thus in our case k = D/6.
Once k is derived, EXPLoRa-SF assigns a SF = 7 to the ﬁrst k nodes. They have the best value of RSSI, so they are in optimal visibility conditions and will be able to transmit at the maximum data rate (and minimum ToA) leaving the channel free for other communications.
So, given the RSSI matrix, we search for the highest value that will be at a given row index i and at column index j: this means that the i−th GW receives the signal from the j−th device with a very good RSSI, so we proceed by assigning the SF value of 7 to the j−th device, and then we modify the SFvec(j). Finally we set last visited column to a low default value (−200 dBm) so that it can not affect the subsequent search for the maximum; we continue by searching for the second best value of RSSI, then the third and so on, and at each step we modify the j−th position of the SF vector, and we place the j−th column of the RSSI matrix to a value of −200 dBm. This continues until the previous subset of k nodes is processed, and then we visit the second subset of nodes which in turn will be composed of k elements, but this time we assign the value of SF = 8. The algorithm ends when the SFs are allocated to the last subset of k nodes, characterized

Algorithm 1 EXPLoRa-SF

1: function EXPLORA-SF(matRSSI , SFvec)

2: Let sensi ← sensitivities values

3: SFvec ← [12, 12, · · · , 12]

ED-dimensional Vector

4: D ← # of devices covered by GWs

5: l ← len(SFset)

6: SFset ← [7, 8, . . . , 12]

7: for t ← 1 to len(SFset) do

8:

cnt ← count(matRSSI > sensi[t])

9:

if cnt > D/l then z ← D/l else z ← cnt end if

10:

for p ← 0 to z do

11:

x, y ← max(matRSSI )

12:

SFvec[y] ← SFset[t]

13:

matRSSI [:, y] ← −200

14:

D ← D−1

15:

end for

16:

l ← l−1

17: end for

18: return SFvec

19: end function

TABLE III. TIME ON AIR (IN ms) AS A FUNCTION OF SFS

SF 7

8

9

10

11

12

AT 49.41 90.62 164.86 329.73 659.46 1187.84

by having worst RSSI, so far away from all the gateways of network for whom the assigned SF is 12.
B. EXPLoRa-AT

EXPLoRa-AT, is a more sophisticated heuristic that attempts to provide a balanced distribution of the channel load among the nodes by means of an “ordered waterﬁlling” that guarantees the Time-on-Air equalization and, consequently, fairness. This approach, and the related algorithm described below, are based on the consideration that the SFs are strictly related to the time-on-air, as reported in Table III.

As in the previous approach, we start by identifying the D users that are covered by network and we put the number of users k that should have the same value of SF in the vector nvec: the i − th element of the vector nvec represents the number of users ki that should be assigned a SF = SFset[i]. Indeed the values in nvec represents the number of nodes in a speciﬁc area around the GW that makes it eligible to be assigned for a speciﬁc SF value. As shown in Figure 3, the eligibility for a SF value is bounded by the distance of the node with respect to the GW: SF 7 for nodes in the area near to the GW till SF 12 for nodes that resides far from the GW. Of course, the algorithm takes into account the fact that we can assign higher SF values to nodes eligible for a lower SF (e.g, SF=8 for nodes at SF=7) while the opposite cannot happen.

We then identify the vector w of the time-on-air weights for each SF in accordance to Table III that are computed as:

1, w(i) =

if i = 1

AT (i + 1)/AT (1), ∀i ∈ 2 . . . 6

(2)

For sake of simplicity we deﬁne the inverse of the weights’ vector q = w−1 and the channel congestion index vector P = n · w. The objective of the algorithm is to balance the values of P by keeping nodes able to communicate with the GWs. This implies that if Algorithm 2 ﬁnds values in P following
a decreasing order, tries to allocate to nodes different SFs in

2017 IEEE 13th International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob)

Fig. 6. Example of channel congestion indexes in case of EXPLora-AT run for 5000 EDs; subsequent bars at the different SFs represent the initial setup of the P values (resulting from the initial allocation of EDs), the values after the ﬁrst and the second (and ﬁnal) iterations, respectively. Notice that at the ﬁrst iteration only the ﬁrst three values of P are equalized, while at the second iteration also the other 3 bars assume the same channel congestion value.

order to have in P a non-decreasing order, when possible. If for instance two neighbor values of P (let say at SF = 7 and SF = 8) are unbalanced (P at SF = 7 is higher than P at SF = 8) Algorithm 2 forces a weighted balancing of the two in order to let the two sets of nodes having similar Air Times. Indeed, at each iteration EXPLoRa-AT checks the P vector to ﬁnd the values representing the local peaks and ﬁlls the p vector with the indexes of maximums as well as the ﬁrst and last values of the vector P :
p(1) = 0  p = p(k) = {i − 1 : P (i) > P (i − 1), ∀i ∈ 2, . . . , 6}
p(end) = 6 (3)

At this point we can compute the following vector of the weighted averages:

p(i+1)

p(i+1)

pˆ(i) =

P (r) · q(r)/

q(r), ∀i ∈ [1, len(p) − 1]

r=p(i)+1

r=p(i)+1

(4)

Such vector of weighted averages is used to equalize the

channel congestion index values in P , as shown also in Figure

6 in the case of 5000 nodes. Indeed, given two adjacent values

of the vector pˆ (e.g. Z = p(i) and S = p(i + 1)), the elements

contained between them in the vector P should have the same

value so that P (Z + 1, . . . , S) = pˆ(i). At the end of the

iterations, we can compute the number of nodes kAT to be

assigned for each SF kAT = P · q.

Note that this results also is fairness in terms of time-onairs by assigning to nodes the SFs from the lowest to the highest. The inverse is not possible since nodes requiring a high SF cannot have assigned a lower SF due to the receiver sensitivity.

C. Comparing spreading factor’s allocation
An example of SF allocations in case of the Adaptive Data Rate (ADR), as identiﬁed by the standard [4], in case of EXPLoRa-SF and EXPLoRa-AT is shown in Figure 7 (1000 EDs distributed in a radio range of 100m around a single GW). In the ﬁrst case we have mostly all devices with the same SF (that will cause an increase of collision rate) while by

Algorithm 2 EXPLoRa-AT

1: function EXPLORA-AT(nvec)

2: Let SFset ← [6, 7, . . . , 12]

3: w ← [1, 1.83, 3.33, 6.67, 13.34, 24.04] 4: q ← w−1

Eq. 2

5: P ← nvec · w

6: old p = 0

7: p = 1

8: while old p = p do

9:

old p ← idx

10:

pidx ← local peaks indexes(P )

11:

start ← 0

12:

for i in [pidx, len(P )] do

13:

P [start : i] ← sum(P [start : i] ∗ q[start : i])

14:

P [start : i] ← P [start : i]/sum([start : i])

15:

start ← i

16:

end for

17: end while

18: return kAT ← P · q

19: end function

TABLE IV. SIMULATION PARAMETERS.

Parameter
Carrier Frequency (MHz) Bandwidth (kHz) Code Rate (CR) Duty cycle [%] Message size [bit] Message Period [sec] Number of gateways Number of nodes Path loss values

Value
860 125 4/5 [0.1-10] 160 [5-3600]
1 500-1000-2000 d0 = 40 m, γ = 2.08, σ2 = 0 Lpl(d0) = 127.41 dB

allocation of the SFs as EXPLoRa-SF and EXPLoRa-AT do the DER will have beneﬁts as will be shown in the next Section. Notice that, the allocations of EXPLoRa-SF and EXPLoRa-AT also graphically are different. EXPLoRa-SF equally divides the EDs in the GW radio range area by dividing them on the 6 different SFs while EXPLoRa-AT, being aware of the resulting overall ToA will have a different coloring that depends also on the expected load generated by the EDs.
D. Integrating EXPLoRa in LoRaWAN
The integration of EXPLoRa algorithms in a real LoRaWAN network is straightforward. Indeed, both EXPLoRaSF and EXPLoRa-AT exploit the RSSI data measured by LoRaWAN GW. This is the only information required by both algorithms, executed in the NS premises, to proceed with the optimization of the SF allocation among such nodes. Once the optimized allocation is computed, the LinkADR message is sent to each node to setup the optimized link parameters deﬁned by the algorithms (i.e. to change its SF value).
V. SIMULATION MODEL AND RESULTS
The performance evaluation of EXPLoRa has been carried out by extending the SimPy simulator of [6], the LoRaSim. We considered different scenarios where N End-Devices are randomly distributed in a bi-dimensional space around a single GW. All simulation results are represented with their 95% conﬁdence interval. The EDs use the communication transmission parameters reported in Tab. IV.

2017 IEEE 13th International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob)

(a) ADR

(b) EXPLoRa-SF

(c) EXPLoRa-AT

Fig. 7. Allocation of SF for 1000 EDs (800 EDs are visible to GW): (a) ADR, (b) EXPLoRa-SF and (c) EXPLoRa-AT

Fig. 8. DER ad a function of the message rate, case of 500 EDs.

Fig. 9. DER as a function of the range from the GW where EDs are located; case of 1000 EDs, MP=60 sec

A ﬁrst evaluation is for the DER measured when the Message Rate (msg/sec) is increased. 500 EDs are distributed in a circular range of 50 meters around the GW, so they are visible to the GW irrespective of the SF value assigned to them. The DER behavior is shown in Figure 8 for the three approaches: i) ADR allocation of spreading factor, ii) EXPLoRa-SF and iii) EXPLoRa-AT. To stress the performance of the approaches, the message rate is increased from 1 message every hour (i.e. 3600s) up to 1 message every 5 seconds. Figure 8 shows how the strategy for SF allocation has a strong impact on the performance. Indeed, ADR (blue curve) assigns a SF = 7 for all EDs making it to perform worse for high message rate especially when compared to EXPLoRa-SF (red curve) and EXPLoRa-AT (green curve), both of which allocate resources fairly, avoiding most of the collisions.
Figure 9 shows how the DER varies when the area where the EDs are located around the gateway varies too. The scenario is characterized by 1000 EDs that send a message every 60 sec. Note that, apart for the ADR, the ﬁrst part of the curves is constant; this can be explained by looking at Figure 3: until the radio range in the abscissa axis corresponds to the range in which a node with a certain SF can be received correctly, the DER does not change. When instead this range increases more and more nodes enter in the un-visibility region (i.e., their RSSI is below the receiver sensitivity) so the most of the packets they send is not received. More, when high SFs are used the DER becomes lower. The advantages of both EXPLoRa-SF and EXPLoRa-AT instead are quite evident: they assign all the values of SFs (so also to further nodes can have excellent performance up to a radius of about 110m), reduce the collisions thanks to the orthogonalization of the SFs and, in case of EXPLoRa-AT, balance the time-on-air in the different SF sets so as to keep, when possible, the DER very high. Notice instead that the ADR presents a DER very low in the short range. This is due to the fact that it assigns to all EDs the

Fig. 10. Throughput as a function of the message rate, case of 2000 EDs
SF=7 (indeed it overlaps the SF7 curve till a range of about 70m) and that 1000 EDs at SFs can have quite a number of collisions. When the EDs are then distributed in a larger area instead the DER is dominated by the receivers sensitivity than by the collisions.
Figure 10 shows the overall throughput as a function of the message rate by using different SF allocations. The scenario comprises 2000 EDs, positioned within a range of 200 m, that forward a message with an increasing rate. We note that the ADR attains the highest throughput only for low message rates (low loads) while the EXPLoRa strategies present improvements at high network loads (i.e. high message rates). Finally, Figures 11(a) and 11(b) plot DER and throughput, respectively, for the three different approaches. Both performance metrics are plotted as a function of the percentage of EDs that are concentrated around the GW. The scenario has 2000 EDs, each of them sends a message every 60 seconds (medium load in the previous Figure 10). A given percentage of such EDs is set in a 100 m radius around the GW. We can notice that when the percentage of EDs in the GW area is < 10% they experience almost free channel and have good DER and throughput. On the other hand, the remaining 90% have a great

2017 IEEE 13th International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob)

(a) DER

(b) Throughput

Fig. 11. DER and throughput as a function of the percentage of EDs in the GW radio range of 100 meters; case of 2000 EDs, MP=60 sec

number of lost packets, since they cannot reach the GW. For this reason, in such part of the Figures (0-10%), the three approaches are almost equal. By increasing the density of EDs in the GW area, the metrics increase till the system is overloaded and not able to support the trafﬁc. In this part, there is a clear separation of the three curves: the ADR (blue curve) reaches its maximum at about 30%, while the other two curves have a maximum at a higher percentage. This is due to the fact that ADR uses only few SF values, allocating a large percentage of the EDs at SF = 7, while EXPLoRa-SF and EXPLoRa-AT exploit the possibility to use more SFs thus alleviating the channel overload thanks to the SF orthogonality. This results in better DER and throughput performance. Furthermore, the EXPLoRa-SF throughput, once reached the peak (around 30%), remains almost stable, despite the DER decreases. This is due to the fact that in case of EXPLoRa-SF, by having for each SF the same number of EDs, also EDs at a low spreading factor ﬁnd a quite free subchannel and transmit at high throughput. As a consequence the average throughput attests to a value of 1 kbps. Finally, the curve of EXPLoRa-AT (green) reaches the maximum at a higher percentage of nodes (about 50%) and from there it becomes stable at a very high DER. Also the throughput is very high in case of EXPLoRa-AT due to the capability to equalize the ToA and assure low collisions.
VI. CONCLUSIONS
This paper has presented two novel strategies for allocating wireless resources, through SFs assignments, in LoRaWAN systems. The key idea is to combine the SF orthogonality and radio range visibility to improve the number of users simultaneously transmitting in the system, as well as to reduce the access collisions, improve the data extraction rate and ultimately increase the throughput. The simplest approach, EXPLoRa-SF, outperforms the basic strategy of allocating the SF only on the basis of the radio visibility (Adaptive Data Rate). Furthermore, when the system is highly loaded the SF allocation has to consider the collision occurrences. The EXPLoRa-AT heuristic has the goal of equalizing the time-onair of the EDs transmitting at the different SFs in order to not overload some and implicitly reduce the number of collisions. Future work will be dedicated to the analysis of multi-gateways scenarios.
ACKNOWLEDGEMENTS
This research was partially supported by Unidata SpA within the LogON project and by the EU Commission within the Horizon 2020 symbIoTe project (Grant no. 688156).

REFERENCES
[1] Semtech, “LoRa,” http://www.semtech.com/, 2015.
[2] J. Gozalvez, “New 3GPP Standard for IoT [Mobile Radio],” IEEE Vehicular Technology Magazine, vol. 11, no. 1, pp. 14–20, March 2016.
[3] M. Bor, J. Vidler, and U. Roedig, “Lora for the internet of things,” in Proceedings of the 2016 International Conference on Embedded Wireless Systems and Networks, ser. EWSN ’16, 2016, pp. 361–366.
[4] N. Sornin, M. Luis, T. Eirich, T. Kramp, and O. Hersent, “LoRaWAN Speciﬁcation,” https://www.lora-alliance.org/, 2015.
[5] K. Mikhaylov, J. Peta¨ja¨ja¨rvi, and T. Ha¨nninen, “Analysis of capacity and scalability of the lora low power wide area network technology,” in 22th European Wireless Conference, May 2016, pp. 1–6.
[6] M. C. Bor, U. Roedig, T. Voigt, and J. M. Alonso, “Do LoRa Low-Power Wide-Area Networks Scale?” in 19th ACM Int. Conf. on Modeling, Analysis and Simulation of Wireless and Mobile Systems, ser. MSWiM ’16, 2016, pp. 59–67.
[7] O. Georgiou and U. Raza, “Low power wide area network analysis: Can lora scale?” IEEE Wireless Communications Letters, 2017.
[8] J. Peta¨ja¨ja¨rvi, K. Mikhaylov, M. Ha¨ma¨la¨inen, and J. Iinatti, “Evaluation of lora lpwan technology for remote health and wellbeing monitoring,” in 10th Int. Symposium on Medical Information and Communication Technology (ISMICT), March 2016, pp. 1–5.
[9] F. Adelantado, X. Vilajosana, P. Tuset-Peiro, B. Martinez, and J. Melia, “Understanding the limits of LoRaWAN,” IEEE Communication Magazine, 2017, to appear, arXiv preprint arXiv:1607.08011.
[10] J. Peta¨ja¨ja¨rvi, K. Mikhaylov, M. Pettissalo, J. Janhunen, and J. Iinatti, “Performance of a low-power wide-area network based on lora technology: Doppler robustness, scalability, and coverage,” Int. Journal of Distributed Sensor Networks, vol. 13, no. 3, pp. 1–16, 2017.
[11] A. Augustin, J. Yi, T. Clausen, and W. M. Townsley, “A study of lora: Long range and low power networks for the internet of things,” Sensors, vol. 16, no. 9, 2016.
[12] T. Voigt, M. Bor, U. Roedig, and J. Alonso, “Mitigating inter-network interference in lora networks,” in Proceedings of the 2017 Int. Conf. on Embedded Wireless Systems and Networks, ser. EWSN &#8217;17, 2017, pp. 323–328.
[13] B. Reynders, W. Meert, and S. Pollin, “Power and spreading factor control in low power wide area networks,” in IEEE ICC 2017 SAC Symposium Internet of Things Track (ICC’17), 2017, pp. 1–5.
[14] J. Petajajarvi, K. Mikhaylov, A. Roivainen, T. Hanninen, and M. Pettissalo, “On the coverage of lpwans: range evaluation and channel attenuation model for lora technology,” in 2015 14th International Conference on ITS Telecommunications (ITST), Dec 2015, pp. 55–59.
[15] K. Mikhaylov, J. Petajajarvi, and J. Janhunen, “On LoRaWAN Scalability: Empirical Evaluation of Susceptibility to Inter-Network Interference,” arXiv preprint arXiv:1704.04257, 2017.
[16] D. Magrin, M. Centenaro, and L. Vangelista, “Performance Evaluation of LoRa Networks in a Smart City Scenario,” in IEEE ICC 2017 SAC Symposium Internet of Things Track (ICC’17), 2017, pp. 1–5.
[17] L. Alliance, “LorawanTM speciﬁcation,” LoRa Alliance, 2015.

