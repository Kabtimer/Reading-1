Multi-Armed Bandit Learning in IoT Networks: Learning helps even in non-stationary settings
Rémi Bonnefoi, Lilian Besson, Christophe Moy, Emilie Kaufmann, Jacques Palicot
To cite this version:
Rémi Bonnefoi, Lilian Besson, Christophe Moy, Emilie Kaufmann, Jacques Palicot. Multi-Armed Bandit Learning in IoT Networks: Learning helps even in non-stationary settings. CROWNCOM 2017 - 12th EAI International Conference on Cognitive Radio Oriented Wireless Networks, Sep 2017, Lisbon, Portugal. pp.173-185, ￿10.1007/978-3-319-76207-4_15￿. ￿hal-01575419v2￿

HAL Id: hal-01575419 https://hal.archives-ouvertes.fr/hal-01575419v2
Submitted on 2 Jul 2018

HAL is a multi-disciplinary open access archive for the deposit and dissemination of scientific research documents, whether they are published or not. The documents may come from teaching and research institutions in France or abroad, or from public or private research centers.

L’archive ouverte pluridisciplinaire HAL, est destinée au dépôt et à la diffusion de documents scientifiques de niveau recherche, publiés ou non, émanant des établissements d’enseignement et de recherche français ou étrangers, des laboratoires publics ou privés.

Distributed under a Creative Commons Attribution - NonCommercial - ShareAlike| 4.0 International License

Multi-Armed Bandit Learning in IoT Networks: Learning helps even in non-stationary settings
R´emi Bonnefoi1, Lilian Besson1,2, Christophe Moy1, Emilie Kaufmann2, and Jacques Palicot1
1CentraleSup´elec (campus of Rennes), IETR, SCEE Team, Avenue de la Boulaie - CS 47601, 35576 Cesson-S´evign´e, France
2Univ. Lille 1, CNRS, Inria, SequeL Team UMR 9189 - CRIStAL, F-59000 Lille, France First.Last@(CentraleSupelec,Univ-Lille1).fr
Abstract. Setting up the future Internet of Things (IoT) networks will require to support more and more communicating devices. We prove that intelligent devices in unlicensed bands can use Multi-Armed Bandit (MAB) learning algorithms to improve resource exploitation. We evaluate the performance of two classical MAB learning algorithms, UCB1 and Thomson Sampling, to handle the decentralized decision-making of Spectrum Access, applied to IoT networks; as well as learning performance with a growing number of intelligent end-devices. We show that using learning algorithms does help to ﬁt more devices in such networks, even when all end-devices are intelligent and are dynamically changing channel. In the studied scenario, stochastic MAB learning provides a up to 16% gain in term of successful transmission probabilities, and has near optimal performance even in non-stationary and non-i.i.d. settings with a majority of intelligent devices.
Key words: Internet of Things, Multi-Armed Bandits, Reinforcement Learning, Cognitive Radio, Non-Stationary Bandits.
1 Introduction
Unlicensed bands are more and more used and considered for mobile and LAN communication standards (WiFi, LTE-U), and for Internet of Things (IoT) standards for short-range (ZigBee, Z-Wave, Bluetooth) and long-range (LoRaWAN, SIGFOX, Ingenu, Weightless) communications [1]. This heavy use of unlicensed bands will cause performance drop, and could even compromise IoT promises.
Eﬃcient Medium Access (MAC) policies allow devices to avoid interfering traﬃc and can signiﬁcantly reduce the spectrum contention problem in unlicensed bands. As end-devices battery life is a key constraint of IoT networks, this leads to IoT protocols using as low signaling overhead as possible and simple ALOHA-based mechanisms. In this article, we analyze the performance of Multi-Armed Bandits (MAB) algorithms [2, 3], used in combination with a timefrequency slotted ALOHA-based protocol. We consider the Upper-Conﬁdence Bound (UCB1) [4], and the Thompson-Sampling (TS) algorithms [5, 6, 7].

2

R. Bonnefoi, L. Besson, C. Moy, E. Kaufmann, J. Palicot

MAB learning has already been proposed in Cognitive Radio (CR) [8], and in particular, for sensing-based Dynamic Spectrum Access (DSA) in licensed bands [9]. Recently, TS and UCB1 algorithms have been used for improving the spectrum access in (unlicensed) WiFi networks [10], and the UCB1 algorithm was used in a unlicensed and frequency- and time-slotted IoT network [11]. Many recent works show that MAB algorithms work well for real-world radio signal. However, even with only one dynamic user using the learning algorithm, the background traﬃc or the traﬃc of the other devices is never really stationary or i.i.d (independent and identically distributed). In recent works like [11], several devices are using bandit algorithms, and the assumptions made by the stochastic bandit algorithms are not satisﬁed: as several agents learn simultaneously, their behavior is neither stationary nor i.i.d. As far as we know, we provide the ﬁrst study to conﬁrm robustness of the use of stochastic bandit algorithms for decision making in IoT networks with a large number of intelligent devices in the network, which makes the environment not stationary at all, violating the hypothesis required for mathematical proofs of bandit algorithms convergence and eﬃciency.
The aim of this article is to assess the potential gain of learning algorithms in IoT scenarios, even when the number of intelligent devices in the network increases, and the stochastic hypothesis is more and more questionable. To do that, we suppose an IoT network made of two types of devices: static devices that use only one channel (ﬁxed in time), and dynamic devices that can choose the channel for each of their transmissions. Static devices form an interfering trafﬁc, which could have been generated by devices using other standards as well. We ﬁrst evaluate the probability of collision if dynamic devices randomly select channels (naive approach), and if a centralized controller optimally distribute them in channels (ideal approach). Then, these reference scenarios allow to evaluate the performance of UCB1 and TS algorithms in a decentralized network, in terms of successful communication rate, as it reﬂects the network eﬃciency.
The rest of this article is organized as follows. The system model is introduced in Section 2. Reference policies are described in Section 3, and MAB algorithms are introduced in Section 4. Numerical results are presented in Section 5.

2 System model and notations
As illustrated in Figure 1, we suppose a slotted protocol. All devices share a synchronized time, and know in advance the ﬁnite number of available RF channels. In each time slot, devices try to send packets to the unique Base Station, which listens continuously to all channels, following an ALOHA-based communication (no sensing). Each time slot is divided in two parts: ﬁrst for uplink communications in which data packets are sent by end-devices to the base station. If only one packet is sent in this part of the slot, the base station can decode it and sends an acknowledgement to the device in the second part. If two or more devices send an uplink packet in the same slot, the uplink packets collide (i.e., there is a collision), and the acknowledgement Ack is not transmitted. This way, no collision can occur on the downlink messages, easing the analysis of collisions.

Multi-Armed Bandit Learning in Non-Stationary IoT Networks

3

Fig. 1. The considered time-frequency slotted protocol. Each frame is composed by a ﬁx-duration uplink slot in which the end-devices transmit their packets. If a packet is well received, the base station replies by transmitting an Ack, after the ack delay.
There are two types of end-devices in the network:

– Static end-devices have poor RF abilities, and each of them uses only one channel to communicate with the base station. Their choice is assumed to be ﬁxed in time (stationary) and independent (i.i.d.). The traﬃc generated by these devices is considered as an interfering traﬃc for other devices.
– Dynamic (or smart ) end-devices have richer RF abilities, they can use all the available channels, by quickly reconﬁguring their RF transceiver on the ﬂy. They can also store communication successes or failures they experienced in each channel, in order to change channel, possibly at every time slot.

There are Nc ≥ 1 channels, D ≥ 0 dynamic end-devices, and S ≥ 0 static

devices. Furthermore, in channel i ∈ 1; Nc there are 0 ≤ Si ≤ S static devices

(so S =

Nc i=1

Si).

We

focus

on

dense

networks,

in

which

the

number

of

devices

S + D is very large compared to Nc (about 1000 to 10000, while Nc is about

10 to 50). As this problem is only interesting if devices are able to communicate

reasonably eﬃciently with the base station, we assume devices only communicate

occasionally, i.e., with a low duty cycle, as it is always considered for IoT.

We suppose that all devices follow the same emission pattern, being ﬁxed

in time, and we choose to model it as a simple Bernoulli process: all devices

have the same probability to send a packet in any (discrete) temporal slot, and

we denote p ∈ (0, 1) this probability1. The parameter p essentially controls the

frequency of communication for each device, once the time scale is ﬁxed (i.e.,

real time during two messages), and 1/p is proportional to the duty cycle.

The goal is to design a simple sequential algorithm, to be applied identically

by each dynamic device, in a fully distributed setting (each device runs its own

algorithm, from its observations), in order to minimize collisions and maximize

the fraction of successful transmissions of all the dynamic devices.

Before explaining how this goal presents similarity with a multi-armed bandit

problem, we present some natural baseline policies (i.e., algorithms).

1 In the experiments below, p is about 10−3, because in a crowded network p should be smaller than Nc/(S + D) for all devices to communicate successfully (in average).

4

R. Bonnefoi, L. Besson, C. Moy, E. Kaufmann, J. Palicot

3 Three reference policies

This section presents three diﬀerent policies that will be used to assess the efﬁciency of the learning algorithms presented in the next section. The ﬁrst one is naive but can be used in practice, while the two others are very eﬃcient but require full knowledge on the system (i.e., an oracle) and are thus unpractical.

3.1 Naive policy: Random Channel Selection

We derive here the probability of having a successful transmission, for a dynamic device, in the case where all the dynamic devices make a purely random channel selection (i.e., uniform on i ∈ 1; Nc = {1, . . . , Nc}).
In this case, for one dynamic device, a successful transmission happens if it is the only device to choose channel i, at that time slot. The probability of successful transmission is computed as follows, because the Si static devices in each channel i are assumed to be independent, and static and dynamic devices are assumed to not transmit at each time t with a ﬁxed probability 1 − p :
Nc
P(success|sent) = P(success|sent in channel i) P(sent in channel i) (1)
i=1 No one else sent in channel i =1/Nc,by uniform choice

All dynamic devices follow the same policy in this case, so the probability of

transmitting at that time in channel i for any dynamic device is p/Nc, and there

are D − 1 other dynamic devices. As they are independent, the probability that

no other dynamic device sent in i is q = P(

D−1 k=1

device

k

did

not

sent

in

i)

=

D−1 k=1

P(device

k

did not sent in

i).

And

P(device

k

sent in

i)

=

p × 1/Nc,

by uniform choice on channels and the Bernoulli emission hypothesis. So q =

D−1 k=1

(1

−

p/Nc)

=

(1

−

p/Nc)D−1.

Thus

we

can

conclude,

P(success|sent)

=

Nc
(1 − p/Nc)D−1 × (1 − p)Si ×
i=1 No other dynamic device No static device

1 Nc

=1

1− p

D−1 Nc
(1 − p)Si .

(2)

Nc

Nc

i=1

This expression (2) is constant (in time), and easy to compute numerically, but comparing the successful transmission rate of any policy against this naive policy is important, as any eﬃcient learning algorithm should outperform it.

3.2 (Unachievable) Optimal oracle policy
We investigate in this section the optimal policy that can be achieved if the dynamic devices have a perfect knowledge of everything, and a fully centralized

Multi-Armed Bandit Learning in Non-Stationary IoT Networks

5

decision making2 is possible. We want to ﬁnd the stationary repartition of devices into channels that maximizes the probability of having a successful transmission.
If the oracle draws once uniformly at random a conﬁguration of dynamic devices, with Di devices aﬀected to channel i is ﬁxed (in time, i.e., stationary), then this probability is computed as before:

Nc
P(success|sent) = P(success|sent in channel i) P(sent in channel i)

i=1

Nc
= (1 − p)Di−1 × (1 − p)Si ×

Di/D

. (3)

i=1 Di−1 others

No static device

Sent in channel i

Consequently, the optimal allocation vector (D1, . . . , DNc) is the solution of the following real-valued constraint optimization problem :

Nc

arg max

Di(1 − p)Si+Di−1,

D1,...,DNc i=1

Nc

such that Di = D,

i=1

Di ≥ 0 ∀i ∈ 1; Nc .

(4a) (4b) (4c)

Proposition 1. The Lagrange multipliers method [12] can be used to solve the
constraint real-valued maximization problem introduced in equation (4). It gives a closed form expression for the optimal solution Di∗(λ), depending
on the system parameters, and the unknown Lagrange multiplier λ ∈ R.

Di∗(λ) =

1 log(1 − p)

W

λe (1 − p)Si−1

−1

†
.

(5)

Proof.

–

In

a

realistic

scenario,

we

can

assume

that

Di

≤

−2 ln(1−p)

≈

2 p

,

∀i ∈

1; Nc . For such values for Di, the objective function f : (D1, . . . , DNc) →

Nc i=1

Di(1

−

p)Si +Di −1

is

concave

as

the

sum

of

concave

functions

3.

– The Lagrange multipliers method can be applied to the optimization problem

(4a), with a concave objective function f , linear equality constraints (4b) and

linear inequality constraints (4c). The strong duality condition is satisﬁed

in this case [12], so ﬁnding the saddle points will be enough to ﬁnd the

maximizers.

Where (a)† = max(a, 0), and W denotes the W-Lambert function which is the reciprocal bijection of x → xex on R+ = [0, +∞) [15]. Moreover, condition (4b) implies that the Lagrange multiplier λ is the solution of the constraint
2 This optimal policy needs an oracle seeing the entire system, and aﬀecting all the dynamic devices, once and for all, in order to avoid any signaling overhead.
3 It worth noting that f is neither concave nor quasi-concave on [0, ∞)Nc [13, 14].

6

R. Bonnefoi, L. Besson, C. Moy, E. Kaufmann, J. Palicot

Nc

Di∗(λ) = D.

(6)

i=1

Equation (6) can be solved numerically, with simple one-dimensional root

ﬁnding algorithms. Solving the optimization problem provides the optimal real

number value for Di∗, which has to be rounded to ﬁnd the optimal number of

devices for channel i : Di = ⌊Di∗⌋ for 1 ≤ i < Nc, and DNc = D −

Nc−1 i=1

Di.

3.3 A greedy approach of the oracle strategy
We propose a sequential approximation of the optimal policy: the third solution is a sub-optimal naive policy, simple to set up, but also unpractical as it also needs an oracle. End-devices are iteratively inserted in the channels with the lowest load (i.e., the index i minimizing Si + Di(τ ) at global time step τ ). Once the number of devices in each channel is computed, the probability of sending successfully a message is also given by equation (3). This is the policy that would be used by dynamic devices if they were inserted one after the other, and if they had a perfect knowledge of the channel loads.

4 Sequential policies based on bandit algorithms
We now present the stochastic Multi-Armed Bandit (MAB) model, and the two stochastic MAB algorithms used in our experiments [3]. While the stochastic MAB model has been used to describe some aspects of Cognitive Radio systems, it is in principle not suitable for our IoT model, due to the non-stationarity of the channels occupancy caused by the learning policy used by dynamic objects.

4.1 Stochastic Multi-Armed Bandits

A Multi-Armed Bandit problem is deﬁned as follows [5, 16, 2]. There is a ﬁxed

number Nc ≥ 1 of levers, or “arms”, and a player has to choose one lever at each

discrete time t ≥ 1, t ∈ N, denoted as A(t) = k ∈ {1, . . . , Nc}. Selecting arm k

at time t yields a (random) reward, rk(t) ∈ R, and the goal of the player is to

maximize the sum of his rewards, r1...T =

T t=1

rA(t)

(t).

A well-studied version of this problem is the so-called “stochastic” MAB,

where the sequence of rewards drawn from a given arm k is assumed to be

independent and identically distributed (i.i.d ) under some distribution νk, that

has a mean µk. Several types of reward distributions have been considered,

for example distributions that belong to a one-dimensional exponential family

(e.g., Gaussian, Exponential, Poisson or Bernoulli distributions). We consider

Bernoulli bandit models, in which rk(t) ∼ Bern(µk), that is, rk(t) ∈ {0, 1} and

P(rk(t) = 1) = µk.

The problem parameters µ1, . . . , µK are unknown to the player, so to maximize his cumulated rewards, he must learn the distributions of the channels, to

Multi-Armed Bandit Learning in Non-Stationary IoT Networks

7

be able to progressively focus on the best arm (i.e., the arm with largest mean). This requires to tackle the so-called exploration-exploitation dilemma: a player has to try all arms a suﬃcient number of times to get a robust estimate of their qualities, while not selecting the worst arms too many times.
In a Cognitive Radio application, arms model the channels, and players are the dynamic end-devices. For example in the classical OSA setting with sensing [9], a single dynamic device (a player) sequentially tries to access channels (the arms), and collects a reward of 1 if the channel is available and 0 otherwise. So rewards represent the availability of channels, and the parameter µk represents the mean availability of channel k.
Before discussing the relevance of a multi-armed bandit model for our IoT application, we present two bandit algorithms, UCB1 and Thompson Sampling, which both strongly rely on the assumption that rewards are i.i.d..

4.2 The UCB1 algorithm

A naive approach could be to use an empirical mean estimator of the rewards

for each channel, and select the channel with highest estimated mean at each

time. This greedy approach is known to fail dramatically [2]. Indeed, with this

policy, the selection of arms is highly dependent on the ﬁrst draws, if the ﬁrst

transmission in a channel fails, the device will never use it again. Rather than

relying on the empirical mean reward, Upper Conﬁdence Bounds algorithms

instead use a conﬁdence interval on the unknown mean µk of each arm, which can be viewed as adding a “bonus” exploration to the empirical mean. They

follow the “optimism-in-face-of-uncertainty” principle : at each step, they play

according to the best model, as the statistically best possible arm (i.e., the

highest upper conﬁdence bound) is selected.

More formally, for one device, let Nk(t) =

t τ =1

½(A(τ )

=

k)

be

the

number

of times channel k was selected up-to time t ≥ 1. The empirical mean estimator

of channel k is deﬁned as the mean reward obtained by selecting it up to time

t, µk(t) = 1/Nk(t)

t τ

=1

rk

(τ

)½(A(τ

)

=

k).

For

UCB1,

the

conﬁdence

term

is

Bk(t) = α log(t)/Nk(t), giving the upper conﬁdence bound Uk(t) = µk(t) +

Bk(t), which is used by the device to decide the channel for communicating at

time step t + 1: A(t + 1) = arg max1≤k≤Nc Uk(t). UCB1 is an index policy.

The UCB1 algorithm uses a parameter α > 0, originally, α set to 2 [4], but

empirically α = 1/2 is known to work better (uniformly across problems), and

α > 1/2 is advised by the theory [3]. In our model, every dynamic device im-

plements its own UCB1 algorithm, independently. For one device, the time t is the number of time it accessed the network (following its Bernoulli transmission

process,i.e., its duty cycle), not the total number of time slots from the begin-

ning, as rewards are only obtained after a transmission, and IoT objects only

transmit sporadicly, due to low transmission duty cycles.

8

R. Bonnefoi, L. Besson, C. Moy, E. Kaufmann, J. Palicot

4.3 Thompson Sampling

Thompson Sampling [5] was introduced in 1933 as the very ﬁrst bandit algorithm, in the context of clinical trials (in which each arm models the eﬃcacy of one treatment across patients). Given a prior distribution on the mean of each arm, the algorithm selects the next arm to draw based on samples from the conjugated posterior distribution, which for Bernoulli rewards is a Beta distribution.
A Beta prior Beta(ak(0) = 1, bk(0) = 1) (initially uniform) is assumed on µk ∈ [0, 1], and at time t the posterior is Beta(ak(t), bk(t)). After every channel selection, the posterior is updated to have ak(t) and bk(t) counting the number of successful and failed transmissions made on channel k. So if the Ack message is received, ak(t + 1) = ak(t) + 1, and bk(t + 1) = bk(t), otherwise ak(t + 1) = ak(t), and bk(t+1) = bk(t)+1. Then, the decision is done by sampling an index for each arm, at each time step t, from the arm posteriors: Xk(t) ∼ Beta(ak(t), bk(t)), and the chosen channel is simply the channel A(t + 1) with highest index Xk(t). For this reason, Thompson Sampling is a randomized index policy.
Thompson Sampling, although being very simple, is known to perform well for stochastic problems, for which it was proven to be asymptotically optimal [6, 7]. It is known to be empirically eﬃcient, and for these reasons it has been used successfully in various applications, including on problems from Cognitive Radio [10, 17], and also in previous work on decentralized IoT-like networks [18].

4.4 A bandit model for IoT
Our IoT application is challenging in that there are multiple players (the dynamic devices) interacting with the same arms (the channels), without any centralized communication (they do not even know the total number of dynamic devices).
Considered alone, each dynamic device implements a learning algorithm to play a bandit game, the device is consequently a smart device. In each time slot, if it has to communicate (which happens with probability p), then it chooses a channel and it receives a reward 1 if the transmission is successful, 0 otherwise. Each device aims at maximizing the sum of the rewards collected during its communication instants, which shall indeed maximize the fraction of successful transmissions. Besides the modiﬁed time scale (rewards are no longer collected at every time step), this looks like a bandit problem. However, it cannot be modeled as a stochastic MAB, as the rewards are clearly not i.i.d : they not only depend on the (stationary, i.i.d ) behavior of the static devices, but also on the behavior of other smart devices, that is not stationary (because of learning).
Despite this, we show in the next section that running a stochastic bandit algorithm for each device based on its own rewards is surprisingly successful.
Multi-Player MAB with collision avoidance? Another idea could be to try to use a multi-player MAB model, as proposed by [19], to describe our problem.
In that case, the static and dynamic devices eﬀect is decoupled, and arms only model the availability of the channels in the absence of dynamic devices : they are i.i.d. with mean µi = 1 − pSi. Moreover, dynamic devices are assumed

Multi-Armed Bandit Learning in Non-Stationary IoT Networks

9

to be able to sense a channel before sending [19], and so communicate only if no static device is detected on the channel. The smart devices try to learn the arms with highest means, while coordinating to choose diﬀerent arms, i.e., avoid collisions in their choice, in a decentralized manner. However, in this model it is assumed that the multiple agents can know that they experienced a collision with another agent, which is non-realistic for our problem at stake, as our model of smart device cannot do sensing nor diﬀerentiate collisions between smart and non-smart devices.

Adversarial bandit algorithms? Instead of using MAB algorithms assuming a stochastic hypothesis on the system, we could try to use MAB algorithms designed to tackle a more general problem, that makes no hypothesis on the interfering traﬃc. The adversarial MAB algorithms is a broader family, and a well-known and eﬃcient example is the Exp3 algorithm [3]. Empirically, the Exp3 algorithm turned out to perform worse than both UCB1 and TS in the same experiments. Contrarily to the two stochastic algorithms, the use of Exp3 is correctly justiﬁed, even in the non-stationary and non-i.i.d, as its performance guarantee are true in any setting. But it is not so surprising that it performs worse, as the theoretical performance guarantees of adversarial MAB algorithms are an order of magnitude worse than the one for stochastic ones. More is left on this aspect for our future work.

5 Experiments and numerical results
We suppose a network with S + D = 2000 end-devices, and one IoT base station. Each device sends packets following a Bernoulli process, of probability p = 10−3 (e.g., this is realistic: one packet sent about every 20 minutes, for time slots of 1s). The RF band is divided in Nc = 10 channels4. Each static device only uses one channel, and their uneven repartition4 in the 10 channels is: (S1, · · · , SNc) = S × (0.3, 0.2, 0.1, 0.1, 0.05, 0.05, 0.02, 0.08, 0.01, 0.09), to keep the same proportions when S decreases. The dynamic devices have access to all the channels, and use learning algorithms. We simulate the network during 106 discrete time slots, during which each device transmits on average 1000 packets (i.e., the learning time is about 1000 steps, for each algorithm).
Figure 2 presents the evolution of the successful transmission rate, as a function of time. The two MAB algorithms, UCB1 and Thompson Sampling (TS), are compared against the naive random policy from below, and the two oracle policies (optimal and greedy) from above. The results are displayed when 10, 30, 50 and 100% of the traﬃc is generated by dynamic devices.
4 We tried similar experiments with other values for Nc and this repartition vector, and results were similar for non-homogeneous repartitions. Clearly, the problem is less interesting for homogeneous repartition, as all channels appear the same for dynamic devices, and so even with D small in comparison to S, the system behaves like in Fig.2d, where the performance of the ﬁve approaches are very close.

10 R. Bonnefoi, L. Besson, C. Moy, E. Kaufmann, J. Palicot

Successful transmission rate

0.91

0.9

0.89

0.88

0.87

0.86 0.85 0.84 0.83

UCB Thompson-sampling Optimal Good sub-optimal Random

0.82

2

4

6

8

10

Number of slots

×105

(a) 10% of smart devices

Successful transmission rate

0.86 0.855
0.85 0.845
0.84 0.835
0.83 0.825
0.82 0.815
0.81

UCB Thompson-sampling Optimal Good sub-optimal Random

2

4

6

8

10

Number of slots

×105

(b) 30% of smart devices

Successful transmission rate

0.835 0.83
0.825 0.82
0.815 0.81
0.805 0.8
0.795

UCB Thompson-sampling Optimal Good sub-optimal Random

2

4

6

8

10

Number of slots

×105

(c) 50% of smart devices

Successful transmission rate

0.82

0.81

0.8

0.79

0.78 0.77

UCB Thompson-sampling Optimal Good sub-optimal Random

0.76

2

4

6

8

10

Number of slots

×105

(d) 100% of smart devices

Fig. 2. Performance of 2 MAB algorithms (UCB1 and Thompson Sampling), compared to extreme references without learning or oracle knowledge, when the proportion of smart end-devices in the network increases, from 10% to 100% (limit scenario).

We can see in Figure 2 that the TS algorithm (in red) outperforms the UCB1 algorithm (in blue), when the number of end-devices is below 50%. When the number of end-devices is higher, both algorithms have almost the same performance, and perform well after very few transmissions (quick convergence). Moreover, we can see in Figures 2a, 2b, and 2c that both have better success rate than the random policy and the probability of successful transmission is between the oracle optimal and oracle suboptimal policies. For instance, for 10% of dynamic devices, after about 1000 transmissions, using UCB1 over the naive uniform policy improved the successful transmission rate from 83% to 88%, and using Thompson Sampling improved it to 89%. Increasing the number of end-devices decreases the gap between the optimal and random policies: the more dynamic devices, the less useful are learning algorithms, and basically for networks with only dynamic devices, the random policy is as eﬃcient as the optimal one, as seen in Figures 2d and 3.
To better assess the evolution of the optimal policy compared to the random one, we have displayed on Figure 3 the evolution of the gain, in term of successful transmissions rate, provided by the optimal oracle and the two learning policies,

Multi-Armed Bandit Learning in Non-Stationary IoT Networks 11

Gain compared to random channel selection

0.16 0.14 0.12
0.1 0.08 0.06 0.04 0.02
0 -0.02

Optimal strategy UCB1, α=0.5 Thomson-sampling
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 Proportion of dynamic devices (%)

Fig. 3. Learning with UCB1 and Thomson Sampling, with many smart devices.

after 106 time slots, i.e., about 1000 transmissions for each object. We can see that when the proportion of end-devices is low (e.g., 1% of devices are dynamic), the optimal policy provides an improvement of 16% compared to random channel selection. The TS algorithm always provides near-optimal performance, but the UCB1 algorithm has a lowest rate of convergence and performs consequently worse after 1000 transmissions, for instance it only provides a gain of 12% for the same proportion of dynamic devices (1%).
Figure 3 also shows that learning keeps near-optimal performance even when the proportion of devices becomes large. Note that when this proportion increases, the assumptions of a stochastic MAB model are clearly violated, and there is no justiﬁcation for the eﬃciency of TS and UCB1 algorithms. Hence, it is surprising to have near optimal performance with stochastic MAB algorithms applied to partly dynamic and fully dynamic scenarios.

6 Conclusion
In this article, we proposed an evaluation of the performance of MAB learning algorithms in IoT networks, with a focus on the convergence of algorithms, in terms of successful transmission rates, when the proportion of intelligent dynamic devices changes. Concretely, increasing this probability allows to insert more objects in the same network, while maintaining a good Quality of Service. We show that UCB1 and TS have near-optimal performance, even when their underlying i.i.d. assumption is violated by the many “intelligent” end-devices.
This is both a surprising and a very encouraging result, showing that application of bandit algorithms tailored for a stochastic model is still useful in broader settings. The fully decentralized application of classic stochastic MAB algorithms are almost as eﬃcient as the best possible centralized policy in this setting, after a short learning period, even though the dynamic devices can not communicate with each others, and do not know the system parameters. We will

12 R. Bonnefoi, L. Besson, C. Moy, E. Kaufmann, J. Palicot
investigate this behavior in order to understand it better theoretically. We will also experiment more with adversarial algorithms, to conﬁrm that they work less eﬃciently than stochastic bandit algorithms in our non-stochastic setting.
Moreover, for sake of simplicity we supposed that all devices use the same standard. Our future work will consider more realistic interference scenarios and IoT networks, with, e.g., non-slotted time, more than one base station etc.
Acknowledgements This work is supported by the French National Research Agency (ANR), under the projects SOGREEN (grant coded: N ANR-14-CE28-0025-02) and BADASS (N ANR-16-CE40-0002), by R´egion Bretagne, France, by the French Ministry of Higher Education and Research (MENESR) and ENS Paris-Saclay.
Note: the simulation code used for the experiments in Section 5 is for MATLAB or GNU Octave, and is open-sourced under the MIT License, at: https://Bitbucket.org/scee_ietr/rl_slotted_iot_networks.
References
1. M. Centenaro, L. Vangelista, A. Zanella, and M. Zorzi, “Long-range communications in unlicensed bands: the rising stars in the IoT and smart city scenarios,” IEEE Wireless Communications, vol. 23, no. 5, pp. 60–67, 2016.
2. T. L. Lai and H. Robbins, “Asymptotically eﬃcient adaptive allocation rules,” Advances in Applied Mathematics, vol. 6, no. 1, pp. 4–22, 1985.
3. S. Bubeck, N. Cesa-Bianchi, et al., “Regret analysis of Stochastic and NonStochastic Multi-Armed Bandit Problems,” Foundations and Trends R in Machine Learning, vol. 5, no. 1, pp. 1–122, 2012.
4. P. Auer, N. Cesa-Bianchi, and P. Fischer, “Finite-time Analysis of the Multi-armed Bandit Problem,” Machine Learning, vol. 47, no. 2, pp. 235–256, 2002.
5. W. R. Thompson, “On the likelihood that one unknown probability exceeds another in view of the evidence of two samples,” Biometrika, vol. 25, 1933.
6. S. Agrawal and N. Goyal, “Analysis of Thompson sampling for the Multi-Armed Bandit problem,” in JMLR, Conference On Learning Theory, pp. 39–1, 2012.
7. E. Kaufmann, N. Korda, and R. Munos, Thompson Sampling: an Asymptotically Optimal Finite-Time Analysis, pp. 199–213. Springer, Berlin Heidelberg, 2012.
8. S. Haykin, “Cognitive Radio: Brain-Empowered Wireless Communications,” IEEE Journal on Selected Areas in Communications, vol. 23, no. 2, pp. 201–220, 2005.
9. W. Jouini, D. Ernst, C. Moy, and J. Palicot, “Upper Conﬁdence Bound Based Decision Making Strategies and Dynamic Spectrum Access,” in 2010 IEEE International Conference on Communications, pp. 1–5, 2010.
10. V. Toldov, L. Clavier, V. Loscr, and N. Mitton, “A Thompson Sampling approach to channel exploration-exploitation problem in multihop cognitive radio networks,” in PIMRC, pp. 1–6, 2016.
11. R. Bonnefoi, C. Moy, and J. Palicot, “Advanced metering infrastructure backhaul reliability improvement with Cogn.Radio,” in SmartGridComm, pp. 230–236, 2016.
12. S. Boyd and L. Vandenberghe, Convex Optimization. Cambridge Univ. Press, 2004. 13. D. G. Luenberger, “Quasi-convex programming,” SIAM Journal on Applied Math-
ematics, vol. 16, no. 5, pp. 1090–1095, 1968. 14. M. E. Yaari, “A note on separability and quasiconcavity,” Econometrica, vol. 45,
no. 5, pp. 1183–1186, 1977.

Multi-Armed Bandit Learning in Non-Stationary IoT Networks 13
15. R. Corless, G. Gonnet, D. Hare, D. Jeﬀrey, and D. Knuth, “On the Lambert W Function,” in Advances in Computational Mathematics, pp. 329–359, 1996.
16. H. Robbins, “Some aspects of the sequential design of experiments,” Bulletin of the American Mathematical Society, vol. 58, no. 5, pp. 527–535, 1952.
17. A. Maskooki, V. Toldov, L. Clavier, V. Loscr´ı, and N. Mitton, “Competition: Channel Exploration/Exploitation Based on a Thompson Sampling Approach in a Radio Cognitive Environment,” in EWSN, 2016.
18. C. Moy, J. Palicot, and S. J. Darak, “Proof-of-Concept System for Opportunistic Spectrum Access in Multi-user Decentralized Networks,” EAI Endorsed Transactions on Cognitive Communications, vol. 2, 2016.
19. K. Liu and Q. Zhao, “Distributed learning in Multi-Armed Bandit with multiple players,” IEEE Trans. on Signal Processing, vol. 58, no. 11, pp. 5667–5681, 2010.

