Game Theoretic and Auction-based Algorithms towards Opportunistic Communications in LPWA LoRa Networks

Mo Haghighi, Zhijin Qin, Davide Carboni, Usman Adeel, Fengrui Shi, Julie A. McCann ICRI - Intel Collaborative Research Institute mo.haghighi@intel.com

Abstract— Low Power Wide Area (LPWA) networks have been the enabling technology for large-scale sensor and actuator networks. Low cost, energy-efficiency and longevity of such networks make them perfect candidates for smart city applications. LoRa is a new LPWA standard based on spread spectrum technology, which is suitable for sensor nodes enabling long battery life and bi-directional communication but with low data rates. In this paper, we will demonstrate a use-case inspired model in which, end-nodes with multiple radio transceivers (LoRa/WiFi/BLE) have the option to interconnect via multiple networks to improve communications resilience under the diverse conditions of a smart city of a billion devices. To facilitate this, each node has the ability to switch radio communications opportunistically and adaptively, and this is based on the application requirements and dynamic radio parameters.
Keywords— Game theory; IoT; WSN; LPWA; LoRa; Edge; Smart City; Auction; Utility;
I. INTRODUCTION
Wireless sensor networks (WSNs) have become a major technology for a wide variety of applications ranging from medical, to military and environmental monitoring. There have been a number of initiatives investigating how such technologies can make Cities both more efficient and more comfortable for citizens [12]. Consequently, there are a number of predictions of how cities will become spaces of a billion devices [13]. Therefore, one can envision the operation of such devices in the city space. This would be a mix of traditional telemetry whereby sensors report data back to base stations, which route that data to servers for analytics. However, to reduce data complexity and in turn improve sensor node lifetimes there is a movement towards more innetwork processing whereby data is processed in the sensor network [14]. Here, the computational process involved in such applications includes sophisticated sets of logical and mathematical functionalities, often implemented in a collaborative fashion amongst a large number of sensors and may also include actuators. This means that the communications network between sensor nodes and base stations is augmented with direct communications between nodes to collaborate. Hence if we have a billion devices in a city, we have considerably much more communications between them and sharing the bandwidth begins to reach physical limits [15]. Further, typical low-end, low-cost sensor devices are retrofitted to cities for convenience and costeffectiveness. They are typically equipped with batteries to provide power to the processors and, in some cases, sensors. Beyond power hungry sensing devices, the transceiver electronics is typically the most power hungry component of the sensor node. Therefore, in-network processing reduces the use of the transceiver therefore maximising the battery lifetime and lowering citywide sensor system maintenance.
In parallel, newer technologies have come to the market to reduce battery usage costs. A particular emerging class of

radio implements a Low-power wide-area network (LPWAN), to enable the City of a Billion Devices. LPWANs’ long-range transmission with low energy consumption is critical to enable the promise of ten-year system lifetime providing minimum maintenance. Through their use of spread -spectrum technologies LPWA technologies reduce the problems that are predicted when many devices use the same shared medium concurrently, and interference ensues. However, even with this there will be occasions that mean such systems will not have clear access to the network. Therefore, for extra reliability it is prudent to build an element of redundancy into the system and allow it to have alternative options with which to choose when the networks are very busy. This is highly important where data contributes towards an understanding of city operation at the time of an event such as a festival or moreover disaster situation.
There are a number of options to back up the use of LPWA technologies, and these are more and more being shipped with sensor processor devices. These create a heterogeneous wireless network with nodes that have the capability of using multiple radio technologies (such as LoRa, BLE, 802.15.4 and WiFi etc). Therefore to implement the required resilience an important question that arises is how should a node select the best radio; and within a given radio range, what are the most suitable parameters to be used at any given time, given environmental conditions and most importantly the varying application demands? Radio selection has been extensively studied in heterogeneous networks [9-11], particularly in cases when there is assistance from the network, or when a central controller is able to distribute users across networks in order to optimize some notion of system performance. However, most of the existing work focuses on the radio selection among cellular network and some other network such as WiFi, which are supposed to be conducted at mobile phones. No particular efforts have been put on the LPWAN, which is believed to the solution to provide massive connections in IoT. Additionally, the data features for IoT scenarios are quite different from mobile phones. Sensors in LPWANs are more critical to energy consumption than mobile phones. For the LPWANs with multiple radio technologies, how a sensor node can choose the best radio becomes a challenge. In order to solve the above concerns, the adaptive radio selection algorithm is desired to enable the sensors switching their radio opportunistically to minimize the energy consumption at each node that guarantees qualities of service per node and over the entire network. For a LPWAN at cityscales, a distributed adaptive radio selection is required to make sure the algorithm is easily scalable. The sustainability of sensor nodes needs to be guaranteed for the considered network. In the distributed radio selection algorithm, we focus on an agent-centric approach, in which each agent will manage a

735

resource pool, in order to minimize energy consumption at sensor nodes. Based on the current network situation, the agent will make decisions to select the appropriate radio for the nodes covered by itself. No prior information about nodes managed by other agents need to be known. This can be achieved by using game theory, in which the agent will only strive to make the best strategy to minimize energy consumption at node level and maximize the throughput locally regardless of the nodes managed by other agents. Meanwhile, the agent also needs to determine the optimal parameters for the selected radio. Taking the LoRa radio as an example, parameters such as spreading factor, channel frequency, bandwidth, and transmission power need to be determined, in order to maximize the network throughput and minimize energy consumption at each sensor node and across the network citywide. By using such an approach, the energy consumption at sensor nodes can be minimized as the strategy process is moved from sensor nodes to its agent. At the same time, issues with regard to medium sharing begin to reduce.
II. TESTBED AND PROTOTYPE DEVICE
To better understand how we can build such decision-making schemes we have designed a LoRaBox instrument, which is introduced in the next section. This is part of a ‘living lab’ experiment whereby a section of London is instrumented with 100’s of sensing devices that are densely packed across the space.
Figure 1 shows the planned roadmap for multiple radio networks in Queen Elizabeth Olympic Park (QEOP) in London. The Intel Collaborative Research Institute (ICRI) has implemented this shared common research infrastructure to deliver various research agenda surrounding billion device challenge for future IoT networks, including adaptive opportunistic communication.

different environmental variables such as interference from other devices (e.g. cell phones and CCTVs) affect performance metrics, e.g. packet loss and signal strength.
Our second objective is to conduct longitudinal studies to understand performance under different loading conditions of the network. It is anticipated that volumes of people in the park (e.g. during events), weather, interference across networks, density of devices and the physical environment will all have an impact on the performance of the communications available for IoT. We want to understand the differences between the theoretical operation of these technologies compared to the reality of the installation within the park. LoRaBox instrument, which has been designed by the ICRI researchers at Imperial College London, will be used as the primary tool to demonstrate our research throughout this publication.
LoRaBox
LoRaBox is a multi-radio testing instrument designed for sending and receiving data packets via:
x LPWA LoRa x Bluetooth Low Energy (BLE) x Wi-Fi
LoRaBox is a portable embedded system based on Intel Edison compute module, running Yocto Linux and Java SE. LoRaBox integrates a LoRa transceiver (Microchip RN2483), 2x16 character LCD, rotary encoder switch, a solar panel and a 4000 mAh battery. LoRaBox runs an agent-based program developed in Java SE.
LoRaBox captures data via one radio transceiver, processes the data, and forwards it over the same radio or other transceiver(s). A simple interconnectivity functionality of the LoRaBox is capturing BLE beacons and transmitting the data over LoRa (ISM 868 MHz) and WiFi.

Figure 1: Interconnectivity of different networks in Queen Elizabeth Olympic Park in London

The ICRI has deployed a LoRa gateway in ArcelorMittal Orbit, which is the highest point in the park, to test and understand the performance and coverage of LoRa alongside the Public Wifi, 802.15.4 and BLE. Our initial goal is to understand how different types of data can be transported across the LoRa and Wi-Fi networks according to the application requirements of the data source (e.g. some sensor devices need higher throughput, thus utilising Wi-Fi for transmitting raw data, whereas LoRa is used for transmission of meta-data, due to its lower data rate). That will provide us with a good understanding of whether to process certain types of data in the field or offsite. Further, we investigate how

Figure 2: BLE sensor (left), LoRaBox (right)
Figure 2 shows a BLE microclimate sensor based on Intel Quark SoC (Curie) on the left and the LoRaBox on the right. For the purpose of this document, we will only focus on LoRa and WiFi. The algorithms integrated in the device allows the instrument:
1. to switch between different transmission powers opportunistically depending on the signal strength and energy requirement

736

2. dynamically switch the radio parameters (in particular the Spreading Factor) in order to optimise the connection quality and data rate.
Other LoRa parameters with major impact include the Coding Rate and Bandwidth. Selecting an appropriate Channel dynamically is also crucial when avoiding interference. However, for the sake of this document and our experimentation, we will only focus on spreading factor and transmission power.
III. NETWORK DATA RETRIEVAL
For the purpose of this experiment, our proposed algorithms aim to adjust dynamically the above-mentioned parameters in order to meet the latency, data rate and energy consumption requirements of the application. Our algorithms aim to tune the radio communication performance by taking into account near real-time measurements of parameters such as RSSI, SNR, Airtime and Packet Loss. In order to clarify the aforementioned process, Figure 3 illustrates the sequence in which LoRaBox and Gateway interact via EnableIoT cloud platform, including their data transmission.

Having analysed the RSSI and SNR of the received packets, it will apply the algorithms to adjust the transmission power, and spreading factor for the whole network accordingly. Since data is pushed to a cloud storage facility, packet properties can be viewed on a UI including the locations they are sent from. This is particularly useful for experimental purposes and initial testing of the device. As Figure 4 shows, as packets arrive, the web UI shows the RSSI, SNR and other properties of the packets including the data part of the packet in both encrypted and Hex forms. In this case we are sending temperature and humidity as shown in the top left hand corner. It is worth noting that all LoRa communications between the LoRaBox and LoRa Gateway are taking place using LoRa point-to-point mode without acknowledgement, and not LoRaWAN.

Figure 3: Sequences of applying algorithms on LPWA LoRa using LoRaBox and Intel EnableIoT cloud
As figure 3 shows, data packets are initially transmitted to the LoRa gateway. LoRa gateway extracts the packet’s properties including the RSSI, SNR, Channel number, Frequency and its spreading factor. Each packet is registered and stored in the Intel EnableIoT, which is an IoT analytic dashboard and cloud storage. This operation is mainly done in order for the LoRaBox to access each received packet using the packet‘s unique ID in the cloud, which acts as a database for all the received packets. It is worth noting that the process of using Wi-Fi for downloading the received packets from the cloud is costly in terms of energy consumption and latency. However, this process is mainly done for experimental purposes in order to create a model for opportunistic communication.
In the third phase, LoRaBox downloads each packet from the cloud registry via the park public Wi-Fi, which covers the majority of the locations in the park. LoRaBox identifies and analyses the received properties of the packets including the RSSI, SNR and the spreading factor. It is worth mentioning that the gateway may receive the packets using a different spreading factor according to the other packet being received simultaneously on a different channel. The gateway used in this case is a Kerlink gateway with 8 channels.

Figure 4: LoRaBox web UI
In order to simplify the opportunistic transmission power (Tx) and Spreading Factor (SF) selection, we have narrowed down the SF choices in the range of 7-12, and the Tx will be 0, 4, 7, 10, 14 dBm. That was mainly done to simplify the analysis for the algorithms. Our initial experimentation showed that packets sent with very close transmission power levels often received with the same RSSI or with negligible differences. Therefore, by creating a gap of ~4dBm, received packets are more diverse in terms of their signal strength. In the context of our game theoretic model this makes it easier to find a Nash equilibrium.
As we mentioned earlier Spreading Factor (SF), which is the modulation type for spread spectrum, has a major impact on time-on-air, RSSI and bandwidth. The higher the SF, the higher the receiver sensitivity and the time-on-air will also be longer. Therefore, SF is proportional to RSSI and inversely proportional to bandwidth and increasing the SF will increase the airtime.
Table 1 shows the relationship between SF, RSSI and timeon-air for a 100-byte packet sent on 866.40 MHz using coding rate 4/5 and 250 KHz bandwidth and 7 dbm transmission power using SEMTECH SX1276 LoRa transceiver.

737

Table 1: Impact of Spreading factor on Time-on-air and RSSI

SF

Time-on-air (ms)

RSSI

(dBm)

12

3370

-98

11

1920

-106

10

800

-111

9

441

-114

8

292

-119

7

109

-122

6

70

-124

IV. DECISION MAKING USING GAME THEORY
The proposed game theoretic method is based on our previous work [3],
The goal of the LoRaBox is to minimise the packet loss by increasing the transmission (Tx) and therefore RSSI levels until there is a maximal chance that all packets are received successfully We apply a game theoretic model to adjust the Tx levels without prior knowledge of the application’s power and airtime requirements.. In the second phase we use an auction that adjusts the node’s lifetime but with knowledge of the application’s power and airtime requirements, as well as the amount of battery available in the LoRaBox. It is worth noting that the LoRaBox’s lifetime is described in the number of milliseconds based on its 4000mAh battery, which is hardcoded into the application before applying the algorithms.

AP = Attacker’s Payoff, is = incorrect sum (i.e. the sum of significance coefficients of the actually failed packets), ts = total sum (i.e. the sum of significance coefficients of all packets), t = tolerance, rcn = reward for decreasing the Tx level, s = number of packets, cps = cost per packet, a = attacks, cpa = cost per attack, tc = tolerance cost [3-4]. SEMTECH SX1276 provides the channel RSSI before every transmission. We use that as optional factor for estimating the SNR level before every transmission.
Once the matrix is populated with the attacker’s payoff values, each node is faced with a challenging task of choosing the right action out of a set of predefined actions. Choosing the most beneficial action, which maximizes its utility regardless of the attacker’s next move, will be the Nash Equilibrium of this game. Nash Equilibrium is a set that consists of the strategies of all players, called optimal strategies, and that leads to a payoff for each player such that none of them can unilaterally change their strategy and gain higher reward than before [4].

Figure 6: schematic description of IPM

Figure 5: Schematic description of IDM
The first phase presents a game between a Defender agent who supervises a fixed set of packets that need to be delivered, and an attacker agent who attempts to reduce the Tx level. The first important factor is the number of packets being supervised by the defender with a specific Tx, which is a vital aspect of defender’s strategy. The second factor is every node’s coefficient of significance, which represents the SF and subsequently defines the airtime.
Figure 5 shows the schematic description of IDM between the attacker and defender, in which Tolerance represents the minimum packet loss, having known the portion of the packets that failed to be delivered.
The attacker’s Payoff Matrix in figure 5 is a matrix populated using Attacker’s Payoff function as below:
(1)

In the second phase the goal of the attacker is to increase the Tx and SF levels, whereas the defender is tasked to keep those and the packet loss to the minimum. This time however, the maximum packet airtime and LoRaBox’s reaming power are defined so that the defense strategy needs to be done with the least cost. Because the distribution of the attacks defines the attacker’s strategies according to the number of recoveries and the number of packets it sends in each round, therefore, the number of attacks and recoveries by both players are limited to the number of lost and received packets respectively.
(2)
Function 2 shows the attacker’s payoff where, ta = total attacks, rcs = reward for saving power, ac = attack cost, tr = total recoveries, rcps = recovery cost per packet, rcs = reward for compromised packet, sc = packet cost, cse = lost packet at the end and tns = total number of packets [3].
Phase 2 is applied when choosing SF based on their application power requirement at a fixed Tx. In this game LoRaBox attempts to minimize the cost (attacker’s payoff) imposed on itself by estimating the total cost of each recovery based on the airtime and power limitation set by the application. LoRaBox can ultimately choose the optimal set of Tx and SF for a given SNR, RSSI and Airtime, with the least overheads on its resources. For this purpose, the next phase uses auction-based techniques for competitive analysis of different strategies.

738

In this scenario, the LoRaBox firstly conducts multiple rounds of auction by advertising the mean value of the cost for each round based on the remaining lifetime and maximum airtime. It is important to notice that, unlike the IDM, in this scenario only maximizing LoRaBox’s utility according to the application requirements is of importance. Therefore, from the LoRaBox’s point of view, the reward of this auction is spending the least time participating in transmissions.
Figure 7: Auction for advertising a task to cluster-members
Figure 7 shows an exemplar auction in which the LoRaBox estimates the utilities (V,X,Y,Z) of 4 different rounds (A,B,C,D) of IPM auctions according to the mean values of each round against its remaining power and required airtime. LoRaBox will decide which strategy results in higher utility (goal of IPM), and in case strategy X will be chosen. Applying the auction-based pricing equations in [5-6] to the above-mentioned application, results in the following figures for the IDM and the IPM models in table 2. These figures are based on the number of LoRa transmissions for each round of recovery, and the total lifetime of the system with regards to the total number of packets. The processing times mentioned in this table are based on Java architecture of the middleware running on the LoRaBox. [5-6] thoroughly describe the processing time and how they are calculated.

‫ܧ‬௦௔௩௜௡௚

ൌ

ܲ௔

െ ቈቆσ೔೔సస೙బ ௉೏೔
௡

൅

σೕೕసస೘ బ ௠

௉೟ೕቇ

൅

σ௞௞ୀୀ௦଴

ܲ௤ೖ ቉

(3)

This function simply returns how much energy can be saved by taking into account the number of previous recoveries (n), new recoveries (m) and the total number of query/responses (k).

V. CASE STUDIES
We conducted a number of experiments in order to verify the effectiveness of the aforementioned approaches using the LoRaBox in the QEOP.
In our first experiment, we validate how effectively this approach contributes towards minimum airtime and packet loss with respect to application’s lifetime expectancy. We selected 30 points in the QEOP from which the LoRaBox transmits 20 packets in 4 different rounds:
1. Packets transmitted with no opportunistic algorithms using SF:7 and Tx: 7 dbm for minimum range (RSSI) and shorter airtime.
2. The same as Round 1 with opportunistic algorithms
3. Packets transmitted with no opportunistic algorithms SF:12 and Tx: 14 dbm for maximum range (RSSI) and longer airtime.
4. Same as Round 3 with opportunistic algorithms

Table 2: Processing times for each recovery

Available Recovery Time for each round (Pa) Required Recovery Time (Pd) New Recovery Time (Pt) Query/Response Processing Time (Pq) Total processing time in LoRaBox (Etotal)

IDM 10000
500
500 1000
100,000

IPM 2000
100
100 200
200,000

In the software architecture used in the LoRaBox, every task is associated with a number of milliseconds it will take to be processed. Therefore, each round of new recovery, and the number of recoveries done for each application incur specific costs. Query/Response times are extra processing it will take for the system to initiate each recovery. It is worth noting that the actual processing time has been defined in millisecond unit. However, for simplicity the above figures are normalised by a factor of 3000000. That is based on the LoRaBox’s 4000 mAh battery, which is equal to the total processing time. The rewards gained by the LoRaBox, based on the notations given in table 3, can be calculated using the following functions:

Figure 8: Packets transmitted on SF 7
In the first 2 rounds the application requirement does not allow the LoRaBox to exceed 7dbm for the transmission power as the lifetime of the system is set to 86,400,000 ms, whereas in round 3 and 4, there is no limit for both Tx and SF, as the system lifetime is not vital. In other words, rounds 1 and 2 are targeting minimum airtime, whereas round 3 and 4 aims for minimum packet loss. As figure 8 shows, data sent from almost half of the locations didn’t reach the gateway (indicated by NS). The RSSI of the received packets were also quite low. In the second phase of each round, we used IPM, IDM and auctions to investigate whether they make any improvement to the RSSI by adjusting the SF and Tx. In round 2, As table 3 shows, 7 more locations (4,12,16,2225) which had no signal in round 1, are now reporting good signals. LoRaBox automatically increased the Tx from 0 (in round 1) to 7 (in round 2). However, this increase of Tx was not only meant for the locations, which had no reception in the first round. In this round LoRaBox polled all SF values on blind spots sequentially in order to improve the signal.

739

Table 3: Packets transmitted on SF 7 with opportunistic algorithms
In round 4, data were transmitted at highest SF 12 and Tx 14 dBm.
Table 4: Packets transmitted on SF 12 without opportunistic algorithms
Table 5 shows RSSI values of all locations using maximum Tx level and highest spreading factor 12.
Table 5: Packets transmitted on SF12 with opportunistic algorithms
In the context of game theory, LoRaBox needs to weigh its strategies and choose the best option, which maximises or at the least maintains its profit (utility) whilst meeting old and new applications’ requirements. As Table 5 shows, there is a significant drop in RSSI level after applying the algorithms. In this stage LoRaBox selects SF 12 and Tx level 10.
Figure 9: Average improvement in RSSI using both opportunistic algorithms In this scenario the system settles for this value until a new recovery is needed or application’s airtime requirement is changed. It is worth mentioning that application cannot modify the power requirement at runtime. That is mainly due to the fact that previous recovery costs are calculated based on the current application requirement. In case of a change in power requirements all estimations need to be done again, which incur a huge overhead, and currently LoRaBox does not have a mechanism to calculate the cost associated with that overhead. Therefore, as Figure 9 shows, the game approach combined with the auction, contributed to an average of between 2-6.5 dBm improvement in packet RSSI, based on each SF value. This improvement is based on the data given in figure 8 and tables 3-5, comparing RSSI with and without opportunistic algorithms. As this figure shows, IDM offers a higher improvement, but that is mainly regardless of the application lifetime. IPM however seems to

be offering less improvement since the limit on its Tx prevents it from trying higher Tx levels and most of the improvement is the result of higher SF.
VI. CONCLUSION In this paper we have shown how combining game theory and auction-based algorithms can improve opportunistic radio communication of LPWA LoRa, which could be used for various edge-processing applications, in which time-on-air, receiver sensitivity, packet loss and energy consumption can be optimised with respect to the application requirements.
REFERENCES
[1] M. Haghighi, K. Maraslis, T. Tryfonas, G. Oikonomou, “Game Theoretic Approach Towards Energy-Efficient Task Distribution in Wireless Sensor Networks”, IEEE SENSORS 2015, Busan, South Korea, November 2015.
[2] Haghighi M., Maraslis K., Tryfonas T., Oikonomou G., Burrows A., Woznowski P. Game Theoretic Approach Towards Optimal Multitasking and Data-distribution in IoT. IEEE 2nd World Forum on Internet of Thing (WF-IoT), Milan, Italy, December, 2015.
[3] Maraslis, K., Spyridopoulos, T., Oikonomou, G., Tryfonas, T., & Haghighi, M. (2015). Application of a Game Theoretic Approach in Smart Sensor Data Trustworthiness Problems. In ICT Systems Security and Privacy Protection (pp. 601-615). Springer
[4] T. Spyridopoulos, G. Oikonomou, T. Tryfonas, and M. Ge, "Game Theoretic Approach for Cost-Benefit Analysis of Malware Proliferation Prevention," in Security and Privacy Protection in Information Processing Systems. vol. 405, L. Janczewski, H. Wolfe, and S. Shenoi, Eds., ed: Springer Berlin Heidelberg, 2013, pp. 28-41.
[5] Haghighi, Mo. "Market-based resource allocation for energy-efficient execution of multiple concurrent applications in wireless sensor networks." Mobile, ubiquitous, and intelligent computing. Springer Berlin Heidelberg, 2014. 173-178.
[6] M. Haghighi, “Cooperative Task Allocation in Utility-based Clustered Wireless Sensor Networks”, International Journal of Information and Electronics Engineering, (IJIEE), September 2013.
[7] Haghighi M., Woznowski P., Zhu Ni, Tsimbalo E., Hannuna S., Burrows A., Tan B., Tao L., Piechocki R. J. “Agent-based Decentralised Data-acquisition and Time-synchronisation in Critical Healthcare Applications.” IEEE 2nd World Forum on Internet of Thing (WF-IoT), Milan, Italy, December, 2015.
[8] M. Ghamari, B. M. Heravi, U. Roedig, B. Honary and C. A. Pickering, "Improving transmission reliability of low-power medium access control protocols using average diversity combining," in IET Wireless Sensor Systems, vol. 2, no. 4, pp. 377-384, December 2012.
[9] P. Coucheney, C. Touati and B. Gaujal, "Fair and Efficient UserNetwork Association Algorithm for Multi-Technology Wireless Networks," INFOCOM 2009, IEEE, Rio de Janeiro, 2009, pp. 28112815.
[10] Q. Ye, B. Rong, Y. Chen, M. Al-Shalash, C. Caramanis and J. G. Andrews, "User Association for Load Balancing in Heterogeneous Cellular Networks," in IEEE Transactions on Wireless Communications, vol. 12, no. 6, pp. 2706-2716, June 2013.
[11] E. Aryafar, A. Keshavarz-Haddad, M. Wang and M. Chiang, "RAT selection games in HetNets," 2013 Proceedings IEEE INFOCOM, Turin, 2013, pp. 998-1006.
[12] J. Chinrungrueng, U. Sunantachaikul and S. Triamlumlerd, "Smart Parking: An Application of Optical Wireless Sensor Network," Applications and the Internet Workshops, 2007. SAINT Workshops 2007. International Symposium on, Hiroshima, 2007, pp. 66-66.
[13] A. Domingo, B. Bellalta, M. Palacin, M. Oliver and E. Almirall, "Public Open Sensor Data: Revolutionizing Smart Cities," in IEEE Technology and Society Magazine, vol. 32, no. 4, pp. 50-56, winter 2013.
[14] D. Bruneo et al., "Stack4Things as a fog computing platform for Smart City applications," 2016 IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), San Francisco, CA, 2016, pp. 848-853.
[15] Piyush Gupta and Panganmala R Kumar. The capacity of wireless networks. Information Theory, IEEE Transactions on, 46(2):388–404, 2000

740

