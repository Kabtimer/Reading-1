Performance analysis of the on-the-air activation in LoRaWAN
Joe¨l Toussaint(1,2), Nancy El Rachkidy(3,2), Alexandre Guitton(3,2) (1) Clermont Universite´, Universite´ d’Auvergne, BP 10448, F-63000 Clermont-Ferrand, France
(2) CNRS, UMR 6158, LIMOS, F-63175 Aubie`re, France (3) Clermont Universite´, Universite´ Blaise Pascal, BP 10448, F-63000 Clermont-Ferrand, France
Emails: joel.toussaint@udamail.fr, {nancy.el rachkidy,alexandre.guitton}@univ-bpclermont.fr

Abstract—Long-range low-power communications are starting to replace short-range low-power communications in monitoring applications based on wireless sensor networks, both in rural and urban environments, due to the small deployment cost of long-range technologies. In this paper, we focus on the MAC layer of the recent LoRaWAN (long-range wide area network) standard, and speciﬁcally on the on-the-air activation procedure, which deﬁnes how nodes join an existing network. We propose a Markov chain model of the on-the-air activation, and we derive the expected delay and the expected energy required to join the network. We analyze the impact of several parameters on these metrics, including trafﬁc conditions, duty cycles, and channel availability. We also discuss the impact of the regional settings of the standard. To the best of our knowledge, this is the ﬁrst analysis of the MAC layer of LoRaWAN.
I. INTRODUCTION
Wireless sensor networks (WSNs) are largely used to monitor rural environments [1], [2] and urban environments [3]. Indeed, WSNs have a strong potential thanks to their low cost, their autonomy in energy, and the disposability of the individual sensors. Wireless sensor networks have also found many applications with the Internet of Things paradigm, where the Internet is coupled with the physical world through sensors and actuators. The IEEE 802.15.4 standard [4], initially designed in 2003 [5], is by far the main standard for wireless communications in WSNs [1], [6].
Several researchers have analyzed the performance of the MAC layer of IEEE 802.15.4, as it has a direct impact on the applications using this standard. Most of the analytical analyses propose a Markov chain model, adapted to different cases. For instance, the behavior of a node during the contention access period of the beacon-enabled mode is studied in [7] when the network is saturated, and in [8] when the network is not saturated. In [9], the authors study the trafﬁc differentiation during the contention access period. In [10], the authors model the impact of a lossy channel (due to interference and poor link quality) on the communication. In [11], the authors model the accumulation of the trafﬁc due to the long inactive periods of the beacon-enabled mode.
IEEE 802.15.4 has only short-range capabilities: the communication range traditionally varies between tens of meters (in indoor environment) to up to one hundred meters (in outdoor environment and favorable conditions, such as line of sight). To compensate for this limitation, it is possible to

deploy more nodes in order to achieve network connectivity. This comes at an extra cost, which might be prohibitive in large-scale applications such as volcano monitoring, forest monitoring, or large urban deployments.
Recently, long-range low-power wireless standards have emerged, such as Sigfox [12], Ingenu [13] and LoRaWAN [14]. These standards enable one-hop communications ranging from 2 km in dense urban environments to 30 km in rural environments. These standards bring high expectations, as they create new possibilities for low-power, largescale monitoring applications. Since most of these standards are proprietary, few research works have focused on them. One of these works is [15], in which the authors have studied the physical layer of LoRaWAN in a real deployment.
In this paper, we study the MAC layer of the LoRaWAN standard (which is open and freely available), and we focus on the on-the-air activation procedure, which allows nodes to join an existing network. To do this, we propose a Markov chain model of the activation procedure, and we derive two important performance metrics: the expected delay to complete the activation, and the required energy. The study is based on the EU863-870 MHz regional setting (also other regional settings are discussed in the paper) for a single gateway. To the best of our knowledge, this is the ﬁrst analytical study of the MAC layer of LoRaWAN.
The remainder of this paper is organized as follows. Section II describes the LoRaWAN standard and focuses on the activation procedure. Section III proposes our Markov chain model. Section IV presents our performance evaluation for different parameters. Section V initiates a discussion, which includes the impact of the other regional settings of LoRaWAN. Finally, Section VI concludes our work.
II. DESCRIPTION OF THE LORAWAN STANDARD
LoRaWAN [14] is a LPWAN (Low-Power Wide Area Network) communication standard. It aims to exchange data (such as alarms, meters, or monitoring devices) between low-power devices and a network server, through gateways over long distances. LoRaWAN achieves long-range radio communications at small bit rates (from 0.3 to 50 kbps) and is therefore well suited for many applications, including the Internet of Things. Experiments show transmission ranges of up to 1.3 km in an

978-1-5090-0996-1/16/$31.00 ©2016 IEEE

urban environment with a frame loss of 10% [16], [15], and of up to 21.6 km in line of sight conditions without loss [17].
LoRaWAN architecture is based on a star topology. Enddevices exchange frames with gateways. Gateways relay the frames to the network server thanks to a classical internet infrastructure. Long-range radio links are achieved with a proprietary modulation technique called LoraTM, developed by the Semtech company, and based on the Chirp Spread Spectrum (CSS) technology1. LoRa uses ISM bands, depending on regional settings: we focus mainly on the European 863870 MHz band. LoRaWAN also proposes an Adaptive Data Rate (ADR) mechanism in order to adapt the transmission characteristics (data rate, spreading factor, and bandwidth) to the propagation conditions. Data rates range from DR0 (the lowest data rate) to DR7 (the highest data rate).
LoRaWAN deﬁnes three classes of end-devices: class A, class B and class C. Class A is the default class, and is mandatory for all devices. Communication is initiated by end-devices: uplink communications (that is, to the gateway) occur when the end-device has data to transmit, and downlink communication (that is, from the gateway) are possible only after an uplink transmission. Uplink communications are performed on a random channel. A long preamble is sent before the payload. Downlink transmissions have to start at the beginning of two receive windows. Downlink communications during the ﬁrst receive window are performed on the same channel as the uplink transmission, with the same data rate (by default). Downlink communications during the second receive window are performed on a ﬁxed channel and with a ﬁxed data rate. After having sent a frame on a given channel, the node refrains from using any channel of the sub-band during toff = tair/δ −tair time units, where tair is the time on air of the frame sent, and δ is the duty-cycle for this sub-band (which is limited to 1%). Class B introduces beacons which allow enddevices to be synchronized and enable scheduled downlink communications. Class C removes the energy constraint by allowing nodes to continuously listen to the medium.
An activation procedure is required for end-devices to participate to network activities. LoRaWAN deﬁnes two activation procedures: the activation by personalization (ABP), and the on-the-air activation (OTAA). In the ABP, end-devices possess in their memory the required information: thus, no communication is required to join the network. In the OTAA, the enddevice sends a join request2 to the gateway, which forwards the frame to the network server. The network server responds with a join accept3, which is forwarded by the gateway. The gateway can transmit this join accept during either the ﬁrst receive window (which occur ﬁve seconds after the end of transmission of the join request) or during the second receive window (which occur six seconds after the end of transmission of the join request). In this paper, we focus on OTAA. Note that the activation procedure is the same for all three classes.
1Note that in Europe and China, the highest data rate available (50 kbps) is achieved using an FSK modulation.
2The size of the join request payload is 18 bytes, see 6.2.4 of [14]. 3The size of the join accept payload is 12 bytes, see 6.2.5 of [14].

Trans. 1

R1 R2

d1 d2 do

Trans. 2 time

Figure 1. Medium access in the class A of LoRaWAN.

Figure 1 depicts the medium access in the class A of LoRaWAN, which is used during the activation procedure, and during the data exchange (with different timers). After a transmission, a ﬁrst receive window is opened (d1 = 5 during the activation, and d1 = 1 once the node is activated). If there is no preamble detected during the ﬁrst receive window, or if a transmission for another node is detected, the second receive window is opened (d2 = 6 during the activation, and d2 = 2 once the node is activated). Independently of the fact that a preamble is received or not, the channel (as well as other channels of the same sub-band) cannot be used for a duration do, depending on the duty-cycle.
III. MARKOV CHAIN MODEL
In this section, we start by presenting our hypotheses. Then, we present our Markov chain model for the on-theair activation. Finally, we describe the computation of our two performance metrics: the expected delay to complete the activation procedure, and the expected energy required.
A. Hypotheses
We describe our simpliﬁcation hypotheses in the following. a) Hypotheses concerning the physical layer: We assume
that when a transmitter sends a preamble, the receiving node detects this preamble, thanks to the robust CSS modulation which is central in the physical layer design of LoRaWAN. We assume that when several transmitters send a preamble simultaneously, the receiving node detects that the preamble is incorrect. In other words, we ignore the capture effect. Moreover, we assume that collisions between uplink and downlink frames might happen.
b) Hypotheses concerning the gateway: We assume that there is a single gateway. We assume that the gateway is sending only join accept frames (that is, there is no conﬁrmed data requiring acknowledgments), and that the gateway is not sending a frame while a join request frame is sent.
c) Hypotheses concerning the nodes: We assume that nodes use the data rate DR0 for the activation procedure (which is the smallest data rate, ensuring the strongest link quality) and the data transmission (of activated nodes). We assume that the MAC payload of data frames is between 13 bytes and 18 bytes (this assumption has a small impact on the Markov chain, and is discussed in Section V). We also assume that the detection of the preamble lasts for the whole duration of the preamble.
B. Model
Figure 2 represents our Markov chain model for the activation procedure of LoRaWAN. In the send request state, the

node sends a join request and goes to the receive 1 state. In the receive 1 state, the node opens the ﬁrst receive window. If a preamble is detected, the node goes to the preamble 1 state, then to the check 1 state if the preamble is correct, and then to the activated state if the join accept is successfully received. Otherwise, the node goes either to the receive 2 state or to the wait state, depending on the duration of the potential preamble and frame received. In the receive 2 state, the node opens the second receive window, and follows a process similar to the receive 1 state. In the wait state, the node waits for a given amount of time until it can reuse a sub-band, and goes back to the send request state. Finally, in the activated state, the node has successfully joined the network and is ready to send data.

SendReq

ps,r1

Recv 1 pr1,p1

pw,s

pr1,r2 pp1,r2

Recv 2 pr2,p2 pr2,w pp2,w

Preamb 1 pp1,c1

pp1 ,w Check 1

pc1 ,r2 Preamb 2 pp2,c2

pc1,a Check 2

pc2,w

pc2,a

Wait

Activated pc1,w

Figure 2. Markov chain model for the on-the-air activation of LoRaWAN.

We use the following notations. nI denotes the number of

inactivated nodes (that is, nodes that are requesting to join the

network), and nA the number of activated nodes (that is, nodes that have already joined the network). nSB is the number of sub-bands, and nC is the number of channels per sub-band. α ∈ [0; 1] represents the link quality: when α = 1, the frame

error rate is 0. γ determines whether the gateway sends the join

accept during the ﬁrst receive window (γ = 1) or during the

second receive window (γ = 0). δ ∈ [0; 0.01] is the duty cycle

of activated nodes per sub-band (which is limited to 1% per

sub-band by the standard). Trafﬁc is generated by activated

nodes with probability τA · δ · nSB, with τA ∈ [0; 1]: when τA = 1, the network is saturated.

Several probabilities of Figure 2 depend on the availability

of a channel at a given time, which depends on the proba-

bility that no other node uses this channel. The probability

that an inactivated node does not use a given channel is

qI

=

1−

0.001 nC ·nSB

.

Indeed,

1 − qI

is

the

probability

that

the

node sends a join request on this channel (out of the nC · nSB

possible channels), given the fact that the duty-cycle during the

activation procedure is 0.1%4. The probability that an activated

node

does

not

use

a

given

channel

is

qA

=

1

−

δ·τA nC

.

Indeed,

4According to paragraph 7.1.2 of the standard, the duty-cycle limitation of join requests is 0.1%, independently of the number of sub-bands (unlike the data duty-cycle limitation).

1 − qA is the probability that the node sends a data frame on this channel (as it produces δ · τA · nSB data frames per time unit, distributed among nSB sub-bands and nC channels per
sub-band). Probability ps,r1 to open the ﬁrst receive window after
having sent a join request (see Equation 1) is equal to 1.

ps,r1 = 1

(1)

Probability pr1,r2 is the probability that the node does not detect any preamble during the ﬁrst receive window, and is
given in Equation 2. It is equal to the probability that there is
no transmission from the gateway, from any inactivated node,
nor from any activated node. The ﬁrst factor represents the
absence of transmission from the gateway, and is obtained
through the computation of the probability that the gateway
is sending a join accept, which depends on the fact: (i) that
there was no interference with the send request (modeled with qInI · qAnA ), (ii) that the send request was successfully decoded (modeled with α), and (iii) that the gateway replies during the ﬁrst receive window (modeled with γ). The second factor represents the absence of transmission from inactivated nodes.
The third factor represents the absence of transmission from activated nodes. Probability pr1,p1 is obtained by complementarity (see Equation 3).

pr1,r2 = (1 − α · γ · qInI · qAnA ) · qInI · qAnA

(2)

pr1,p1 = 1 − pr1,r2

(3)

Probability pp1,w is the probability that the preamble received during the ﬁrst receive window is incorrect and that
its duration exceeds the delay of 1 s between the two receive
windows. Since the longest preamble duration is 401.41 ms
(for DR0, which corresponds to a spreading factor of 12 and a bandwidth of 125 kHz), pp1,w = 0 (see Equation 4). Probability pp1,c1 is the probability that the preamble received is correct, and is given in Equation 5. It is equal to the
probability that one preamble exactly is received given the
fact that at least one preamble was sent. Let us denote by x the number of preambles sent. pp1,c1 = P(x = 1|x ≥ 1) = P(x = 1)/P(x ≥ 1) = P(x = 1)/pr1,p1. P(x = 1) is the sum of the following mutually exclusive probabilities:
the probability that only the gateway sends a preamble, the
probability that only one inactivated node sends a preamble,
and the probability that only one activated node sends a preamble. Probability pp1,r2 is obtained by complementarity (see Equation 6).

pp1,w = 0

(4)

P (x = 1) = α · γ · qInI · qAnA · qInI · qAnA +

(1 − α · γ · qInI · qAnA ) · qInI −1(1 − qI )nI · qAnA +

(1 − α · γ · qInI · qAnA ) · qInI · qAnA−1(1 − qA)nA

pp1,c1 = P (x = 1)/pr1,p1

(5)

pp1,r2 = 1 − pp1,w − pp1,c1

(6)

Probability pc1,a is the probability that the received frame is the expected join accept frame, and is given in Equation 7. It

is equal to the fact that the gateway received and decoded the join request, and that the join accept is successfully received and decoded. Probability pc1,r2 is the probability that the received frame is not the correct join accept frame (otherwise, the transition would be pc1,a), and that it is small enough so that the reception duration does not exceed the delay between the two receive windows (otherwise, the transition would be pc1,w). It is given in Equation 8. Note that out of the three types of frames which can be received (join accept, join request, and data), only the join accept frames cause the node to open the second receive window. Indeed, the time on air of join accept frames (including the preamble) is 991.23 ms for DR0 (since the MAC payload length is 12 bytes), which means that the node has time to open the second receive window only when an incorrect join accept frame is received. The time on air of join request frames (including the preamble) and data frames of 13 bytes or more (including the preamble) is larger than 1 s for DR0, which means that the node does not have time to open the second receive window when such a frame is received. In this case, the node goes back directly to the wait state, which is modeled in Equation 9.

pc1,a = α · γ · qInI · qAnA · qInI · qAnA · α

(7)

pc1,r2 = α · γ · qInI · qAnA · qInI · qAnA (1 − α)

(8)

pc1,w = 1 − pc1,r2 − pc1,a

(9)

Probability pr2,p2 is the probability that the node detects a preamble during the second receive window, and is given in
Equation 10. Since the second receive window is opened on
a channel that is exclusive to the gateway, it is not possible for other nodes to send on this channel5. Thus, pr2,p2 only depends on the fact that the gateway received the join request
correctly (modeled with α) and without interference (modeled with qInI · qAnA ), and that it replied on the second receive window (modeled with 1 − γ). Probability pr2,w is obtained by complementarity (see Equation 11).

pr2,p2 = α(1 − γ)qInI · qAnA pr2,w = 1 − pr2,p2

(10) (11)

Probability pp2,c2 is the probability that the node detects a preamble during the second receive window, and is given in
Equation 12. Since only the gateway is allowed to transmit
during the second receive window, it is not possible for the preamble to be received incorrectly. Probability pp2,w is obtained by complementarity (see Equation 13).

pp2,c2 = 1

(12)

pp2,w = 0

(13)

Probability pc2,a is the probability that the frame received during the second receive window is a join accept for the node,
and is given in Equation 14. Since the gateway is the only node

5According to the standard for the EU863-870 MHz ISM band, the RX2 receive window is by default on channel 869.525 MHz (see paragraph 7.1.7), and this channel is neither included in the default join request channel list (see Table 13 in paragraph 7.1.2) nor in the default data channel list (see Table 12 in paragraph 7.1.2).

allowed to send on the channel, and since we assumed that the
gateway is always able to send a join accept, pc2,a is equal to the probability that the join accept is successfully received by the node6. Probability pc2,w is obtained by complementarity (see Equation 15).

pc2,a = α

(14)

pc2,w = 1 − α

(15)

Probability pw,s to send a join request after the wait state (see Equation 16) is equal to one.

pw,s = 1

(16)

C. Computation of performance metrics
In the following, we use the Markov chain model to
compute the expected delay and energy consumption of the activation procedure of LoRaWAN.
Our Markov chain is an absorbing chain, because it is possible to reach the activated state (which is absorbing) from any state. Let us denote by N the fundamental matrix of our Markov chain: Ni,j represents the expected number of visits of state j when starting from state i. Since the initial state is the send request state, the expected number of visits V can be computed by V = 1s · N , where 1s is a row vector having the ﬁrst entry (representing the send request state) equal to 1, and
all other entries equal to 0. In the remainder of this part, we compute the expected delay of the activation based on V and on the delay of each state. We compute the expected energy of the activation procedure based on V , on the delay of each state, and on the energy of each state.
The expected delay of the activation procedure is equal to V · D, where D is a column vector having each entry representing the expected duration spent in the corresponding state. Ds is the duration of the send request state, and is equal to the time between the beginning of the transmission of the
send request and the start of the ﬁrst receive window. Thus, Ds is equal to the time on air of the join request plus ﬁve seconds. Dr1 is at least the time required to detect a preamble (according to paragraph 3.3.3 of the standard): we assumed that Dr1 is equal to the duration of a preamble. Dp1 is equal to 0, since the preamble 1 state is simply used to determine whether the received preamble was correct or not. Dc1 has two terms: the ﬁrst is the average time on air of received
frames minus the duration of the preamble (which was already accounted for in Dr1 ), and the second is the time before the second receive window. The ﬁrst term can be computed using a
weighted average, since the probability to receive a small join accept frame is pc1,a/α, and since other frames (join requests or data frames of 13 to 18 bytes) have the same time on air
duration. The second term is equal to the delay between the
two receive windows minus the average time on air of the received frame. Dr2 is equal to the duration of the preamble. Dp2 is equal to 0. Dc2 is the time on air of the join accept

6Note that it is not possible to receive a join accept intended to another inactivated node, as it would mean that the two join requests were sent simultaneously.

frame minus the duration of the preamble. Finally, Dw is the time during which the sub-band is unavailable after having sent a join request, divided by the number of available sub-bands.
The expected energy of the activation procedure is equal to V · E, where E is a column vector having each entry representing the expected energy consumption of the corresponding state. Es is the energy spent while transmitting the join request, plus the energy spent while waiting for the ﬁrst receive window to open. Er1 (respectively Er2 , and Ec2 ) is the energy spent while listening to the potential preamble of the ﬁrst receive window (respectively potential preamble of the second receive window, and frame of the second receive window). Ep1 and Ep2 are both equal to 0. Ec1 has two terms: the ﬁrst term is equal to the energy spent while receiving a frame (whose duration is given by the ﬁrst term of Dc1) and the second term is equal to the energy spent in idle mode before the second receive window opens (whose duration is the second term of Dc1). Finally, Ew is equal to the energy spent in idle mode while waiting for a channel to become available.
IV. PERFORMANCE EVALUATION
In this section, we evaluate the performance of the activation procedure, in terms of expected delay and expected energy consumption.
A. Parameter settings
We ran our simulations using Scilab, and we considered the following default parameters. The channel quality is high (α = 0.99) and the network is saturated (τA = 1). There are nC = 3 channels for each of the nSB = 2 sub-bands. There are nI = 10 inactivated nodes (in addition to the node being studied) and nA = 10 activated nodes. The ﬁrst receive window is used by default (γ = 1), and the duty cycle per sub-band of activated nodes is δ = 0.01.
We used the energy consumption settings of the Semtech SX1272 component, designed for LoRaWAN: the transmit power is 90 mA (at 17 dBm), the reception power is 10.8 mA, and the idle power is 0.1 mA. The voltage is 1.5 V.
From these settings, we obtained the following (rounded) values for vectors D and E (the order of states in the vectors being: send request, receive 1, preamble 1, check 1, receive 2, preamble 2, check 2, and wait):
D = 6.16 0.40 0 0.60 0.40 0 0.59 576.96 T ,
E = 0.08 0.007 0 0.01 0.007 0 0.01 9.10−5 T .
B. Results
Figure 3 presents the delay as a function of α and γ. The impact of the channel quality α on the expected delay is signiﬁcant. When the channel quality is low (α = 0.9), join requests or join accepts might be lost, which causes the node to go to the wait state often and induces a large delay. Indeed, the expected number of visits of the wait state is 0.32 when α = 0.9 and γ = 0, 0.07 when α = 1 and γ = 0. As a result, the reduction of delay between α = 0.9 and α = 1 for γ = 0

Delay (in seconds)

350

γ=1

300

γ=0

250

200

150

100

50

0

0.9

0.925 0.95 0.975

1

α

Figure 3. The expected duration of an activation is greatly impacted by the channel quality α and by γ.

is 146.9 s (as the wait state has a very large duration, which is 577 s in our setup)7. The impact of γ, which determines the choice of receive window, is also signiﬁcant for the delay. Indeed, when γ = 1, collisions with transmissions from other nodes are likely to occur during either the transmission of the join request, or the transmission of the join accept. These collisions cause the node to go back to the wait state. When γ = 0, collisions can occur during the transmission of the join request, but they cannot occur during the transmission of the join accept, as the gateway is the only node allowed to transmit on the channel dedicated to the second receive window. Thus, the number of expected visits to the wait state reduces, which in turn reduces the expected delay.

Energy (in J)

0.15 0.145 0.14

γ=1 γ=0

0.135

0.13

0.125

0.12

0.115

0.11

0.105

0.9 0.925 0.95 0.975

1

α

Figure 4. The expected energy consumption of an activation depends on the channel quality and γ as well.

Figure 4 presents the energy as a function of α and γ. The impact of the channel quality α on the expected energy consumption is important. Indeed, a bad channel quality yields to frame loss and thus forces a node to go back to the wait state often in order to reach the activated state. The larger energy consumption when γ = 1 is the energy cost of retransmitting join requests (and additional listening periods).
Figure 5 presents the delay as a function of the total number of channels and the number of available sub-bands nSB. The x-axis represents the total number of channels, which is the

7Note that the difference in the number of visits of the wait state accounts for about 145.1 s of these 146.9 s. The extra delay is due to changes in the number of visits of the other, shorter states.

Delay (in seconds) Delay (in seconds)

140 130 120 110 100 90 80 70 60 50 40
6

1 sub-band 2 sub-bands 3 sub-bands 8 10 12 14 16 18

Total number of channels

Figure 5. The expected duration of an activation depends on the total number of channels and the number of sub-bands.

350

300

0% of inactivated nodes 50% of inactivated nodes

250

100% of inactivated nodes

200

150

100

50

0 0 5 10 15 20 25 30

Number of nodes

Figure 7. The expected delay is mainly impacted by the number of activated nodes.

Energy (in J) Energy (in J)

product of nC and nSB. The expected delay decreases with the number of channels as collisions during the transmission of the send request are less likely when there is a large number of channels. The expected delay is impacted by the number of sub-bands in two ways: (i) when the number of sub-bands increases, the time duration of the wait state is reduced as it is directly impacted by the number of sub-bands, and (ii) when the number of sub-bands increases, the trafﬁc increases (as δ and τA are deﬁned per sub-band), which increases the delay. However, the reduction of the wait duration is more signiﬁcant than the increase in the number of collisions. Overall, the reduction in delay when nSB varies from one to three is between 19% (for a total number of channels of six) and 49% (for a total number of channels of eighteen).

0.118 0.116 0.114 0.112 0.11 0.108 0.106 0.104 0.102
0.1 0.098 0.096
6

1 sub-band 2 sub-bands 3 sub-bands 8 10 12 14 16 18

Total number of channels

Figure 6. The expected energy consumption depends on the total number of channels, and on the number of available sub-bands.

Figure 6 presents the energy consumption of an activation as a function of the total number of channels and on the number of available sub-bands nSB. The energy consumption decreases with the total number of channels as the probability of collisions decreases when the number of channels per subband is large. Moreover, when nSB is large, the node transmits join requests more frequently (as the duration of the wait state depends on the number of sub-bands). Overall, we notice an increase of 6% in energy consumption when two sub-bands are used and an increase of 13% when three sub-bands are used.
Figure 7 presents the delay as a function of the number of nodes and proportion of inactivated nodes, in three scenarios:

when no node is activated, when half of the nodes are activated, and when all nodes are activated. The delay increases with the number of nodes in the network for all the scenarios. In the ﬁrst scenario, the energy increases slightly as all nodes send their join requests with a small duty cycle of 0.1%. Thus, collisions do not happen frequently and the number of visits of the wait state remains small. In the second scenario, the delay increases consistently. Indeed, the activated nodes send data frames with a larger duty cycle δ of 1%. In this case, collisions and interferences appear more frequently and thus the number of visits of the wait state increases. The worst case scenario is the third scenario, in which all nodes are activated. All nodes send data frames with a large duty cycle δ of 1%, and thus, the delay increases drastically.

0.145 0.14 0.135 0.13

0% of inactivated nodes 50% of inactivated nodes 100% of inactivated nodes

0.125

0.12

0.115

0.11

0.105

0.1

0.095 0

5 10 15 20 25 30

Number of nodes

Figure 8. The expected energy consumption increases with the number of activated nodes.

Figure 8 presents the energy as a function of the number of nodes and proportion of inactivated nodes. The energy consumption follows the same behavior as the delay as it depends on the time spent (and the energy consumed) in each state. When the number of activated nodes increases in the network, the energy consumption of an activation increases as the number of visits to the send request state (which is the state consuming the most energy) increases. Moreover, the energy consumption increases with the number of nodes in the network as the number of collisions increases in this case.

V. DISCUSSION
In this section, we discuss the impact of the regional settings on the model, as well as the impact of different data rates.
A. Regional settings
The Markov model described in this paper is based on the EU 863-870MHz ISM band (Section 7.1 of [14]). The standard describes three other regional settings.
The US 902-928 MHz ISM band (Section 7.2 of [14]) presents signiﬁcant differences with the EU 863-870MHz ISM band. In the US band, there are 64+8=72 default uplink channels and 8 default downlink channels (instead of 6 default channels used for both uplink and downlink, and one speciﬁc downlink channel). Because of the dedicated downlink channels, there is no interference between frames from the gateway and frames from other nodes. The probability of interference from other nodes is very small due to the large number of uplink channels. The probability of overhearing a frame from the gateway to another node is small too, due to the relatively large number of downlink channels. Join requests are sent alternatively on one of the 64 uplink channels with DR0, and on one of the 8 channels with a faster data-rate (namely, DR4)8. Finally, the data rates are larger than with the EU 863-870MHz setting (since DR0 uses a spreading factor of 10 instead of 12, since DR4 is the minimum data rate for the 8 uplink channels, and since the data rate of downlink channels is much larger than DR0).
The China 779-787MHz ISM band (Section 7.3 of [14]) is similar to the EU 863-870MHz setting. The only difference is the maximum transmission power, which is smaller than with the EU 863-870MHz setting, and thus reduces the energy consumption (as well as the communication range).
The EU 432MHz ISM band (Section 7.4 of [14]) is similar to the EU 863-870MHz setting. The only difference is the number of default channels, which is only three (plus a dedicated channel for the second receive window).
B. Impact of data rates
The Markov model depends on the data rates used for join requests, join accepts and data frames. For instance, the probability pc1,r2 increases with the data rate, as with larger data rates, larger frames can be received and discarded in less than 1 s (which is the time between the two receive windows). The probability of collisions also decreases with the data rate, as frames spend less time on the air. Also, the reduction of the time on air yields a reduction of the wait state duration, which has a signiﬁcant impact on the overall delay.
VI. CONCLUSIONS
LoRaWAN is a recent, promising technology that is expected to be used in several large-scale monitoring applications in both rural and urban environments. In this paper, we proposed to study its MAC layer performance. To do this, we proposed a Markov chain model for the on-the-air activation

procedure of the MAC layer. In this model, we took in account
interferences with other nodes sending data frames or join
request frames. We showed that the expected delay and energy
consumption depend on network parameters such as number
of channels per sub-band, number of sub-bands, and gateway
conﬁguration. We believe that this ﬁrst study of the MAC layer
of LoRaWAN will improve the understanding of the behavior
and performance of this new standard.
Acknowledgment: This work has been partially funded by
the Clervolc laboratory of excellence.
REFERENCES
[1] L. M. L. Oliveira, “Wireless Sensor Networks: a Survey on Environmental Monitoring,” Journal of communications, vol. 6, no. 2, 2011.
[2] V. M. Rohokale, P. N. R., and R. Prasad, “A cooperative Internet of Things (IoT) for rural healthcare monitoring and control,” in Wireless Communication, Vehicular Technology, Information Theory and Aeroscpace Electronic Systems Technology (Wireless ViTAE), 2001, 2nd Internal Conference on, 2011, pp. 1–6.
[3] X. Fafoutis, T. Sorensen, and J. Madsen, “Energy Harvesting - Wireless Sensor Networks for Indoors Applications Using IEEE 802.11,” Procedia Computer Science, vol. 32, pp. 991–996, 2014.
[4] IEEE 802.15, “Part 15.4 : low-rate wireless personal area networks (LRWPANs),” IEEE, Standard for local and metropolitan area networks IEEE Std 802.15.4-2011, 2011.
[5] ——, “Part 15.4 : wireless medium access control (MAC) and physical layer (PHY) speciﬁcations for low-rate wireless personal area networks (LR-WPANs),” ANSI/IEEE, Standard 802.15.4 R2003, 2003.
[6] A. Zanella, , N. Bui, A. Castellani, L. Vangelista, and M. Zorzi, “Internet of Things for Smart Cities,” IEEE Internet of Things Journal, vol. 1, pp. 22–32, 2014.
[7] Z. Tao, S. Panwar, D. Gu, and J. Zhang, “Performance analysis and a proposed improvement for the IEEE 802.15.4 contention access period,” in IEEE Wireless Communications and Networking Conference (WCNC), 2006.
[8] P. Park, P. Di Marco, P. Soldati, C. Fischione, and K. H. Johansson, “A generalized Markov chain model for effective analysis of slotted IEEE 802.15.4,” in IEEE International Conference on Mobile Adhoc and Sensor Systems (MASS), 2009.
[9] E. D. Ngangue Ndih, N. Khaled, and G. De Micheli, “An analytical model for the contention access period of the slotted IEEE 802.15.4 with service differentiation,” in IEEE International Conference on Communications (ICC), 2009.
[10] D. Striccoli, G. Boggia, and L. A. Grieco, “A Markov model for characterizing IEEE 802.15.4 MAC layer in noisy environments,” IEEE Transactions on Industrial Electronics, 2014.
[11] Z. Xiao, C. He, and L. Jiang, “An analytical model for IEEE 802.15.4 with sleep mode based on time-varying queue,” in IEEE International Conference on Communications (ICC), 2011.
[12] Sigfox, http//www.sigfox.com. [13] Ingenu, http//www.ingenu.com. [14] N. Sornin, M. Luis, T. Eirich, T. Kramp, and O. Hersent, “LoRaWAN
Speciﬁcation,” LoRa Alliance, Standard V1.0, 2015. [15] M. Centenaro, L. Vangelista, A. Zanella, and M. Zorzi, “Long-range
communications in unlicensed bands: the rising stars in the IoT and smart city scenarios,” 2015, under submission. arXiv:1510.00620 [cs.NI]. [16] Semtech, “LoRaTM modulation basics,” Semtech Corporation, application note 1200.22, May 2015, revision 2. [17] Libelium, “Waspmote LoRa 868 MHz 915 MHz SX1272 networking guide,” Libelium Comunicaciones Distribuidas S. L., Tech. Rep., November 2015, version 4.2.

8Modeling this alternation would require to split several states (including the send request state) in two in the Markov chain model.

