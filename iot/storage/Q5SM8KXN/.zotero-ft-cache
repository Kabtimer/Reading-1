TP Applications SDR – TE4R12

Radio FM, ADS-B et IMSI-catcher
Objectifs : Comprendre et manipuler la radio logicielle.
Ce TP est à rendre avec les consignes de rendu suivantes : — Chaque TP fait l’objet d’un rendu par binôme ou monôme. — Le TP doit être rendus sous la forme d’un seul ﬁchier pdf, plus les GRCs. — L’archive est à rendre dans les 10 jours après le dernier TP.

x Exercice 1 : Récepteur FM 1. Brancher le SDR USRP et charger son ﬁrmware en utilisant la commande suivante : uhd_usrp_probe (a) Quel est le type de la carte (Detected Device) ? (b) Quelle est la bande de fréquence supportée par la carte ? 2. Placer une antenne sur la sortie TX/RX. 3. Lancer le ﬂow graph Récepteur-FM (inclus dans l’archive fournie avec le TP) en utilisant l’outil GNURadio Companion (GRC). 4. Exécuter le ﬂow graph, et trouver une chaîne radio FM de bonne qualité. (a) Quelle est la fréquence de cette chaîne ? (b) Quelle est la largeur d’un canal radio FM ? 5. Augmenter le gain rx_gain : (a) Commenter l’impact de ce paramètre sur la qualité du signal reçu test. Expliquer. 6. Examiner le ﬂow graph : (a) Expliquer brièvement le rôle de chaque bloc de ﬂow graph. (b) Quelle est la fréquence d’échantillonnage utilisée par le récepteur USRP ? (c) Expliquer la relation entre cette fréquence et la bande passante d’un canal radio FM. (d) Quelle est la la fréquence d’échantillonnage utilisée par la carte son ? (e) Expliquer comment l’interpolation et la décimation concilient les deux fréquences d’échantillonnage. (f) Donner la formule utilisée par le bloc Rational sampler.
x Exercice 2 : Émetteur radio FM 1. Lancer le ﬂow graph Émetteur-FM (inclus dans l’archive fournie avec le TP) en utilisant l’outil GNURadio Companion (GRC). 2. Télécharger un ﬁchier audio de format WAV. (a) Quelle est sa fréquence d’échantillonnage ? 3. Si sa fréquence d’échantillonnage est proche de 48KHz, importer le dans le ﬂow graph via bloc Wav File Source. 4. Exécuter le ﬂow graph : (a) Quelle est la fréquence porteuse utilisée par l’émetteur ? 5. Pour éviter les interférences, chaque groupe doit changer sa fréquence porteuse après concertation.

Applications SDR

Badis/Zitouni

1/2

TP Applications SDR – TE4R12
6. Utiliser l’application Radio FM d’un smartphone pour écouter la fréquence de l’émetteur. (a) Commenter le résultat. (b) Quelle est la portée radio de l’émetteur ?
7. Désactiver le bloc WAV File Source, et activer le bloc Wav File Source pour permettre l’utilisation d’un microphone.
8. Activer le micro sur votre machine en utilisant l’outil alsamixer, et vériﬁer l’enregistrement d’un ﬁchier son par les commandes arecord/aplay.
9. Examiner le fonctionnement via l’émetteur FM.
x Exercice 3 : Générateur de Bruit 1. Lancer via un terminal la commande uhd_signgen_gui avec comme option une fréquence d’une chaîne radio FM de bonne qualité. Cette commander initialise un générateur de signal développé par Ettus Research. 2. Sélectionner un bruit Gaussien comme signal et faire varier le paramètre TX Gain. (a) Qu’est-ce qu’un bruit Gaussien ? (b) Commenter l’impact sur la chaîne radio cible. 3. Visualiser les diﬀérents réseaux WiFi détectés par votre smartphones en utilisant l’application WiFi Analyzer. (a) Attaquer l’une des fréquences porteuses par bruit et commenter le résultat ? 4. Réaliser votre propre générateur de bruit en développant un ﬂow graph qui fait varier le gain d’une antenne et la fréquence échantillonnage. (a) Expliquer son fonctionnement et tester le résultat sur les fréquences radio FM et WiFi. PS : il faut joindre le ﬁchier dans le rapport.
x Exercice 4 : Projet 1 : Systeme ADS-B avions L’Automatic dependent surveillance-broadcast (ADS-B) est un nouveau système de surveillance coopéra-
tif pour le contrôle du traﬁc aérien et d’autres applications connexes. Un avion équipé de l’ADS-B détermine sa position par un système de positionnement par satellite (GNSS), et envoie périodiquement cette position et d’autres informations aux stations sols et aux autres appareils voisins équipés de l’ADS-B.
L’objectif de ce projet est d’intercepter les signaux (positions, vitesse, direction, ...) envoyés par les avions aux stations sol en temps réel et lire le résultat par Google Earth.
Avant de commencer le projet, installer les dépendances suivantes : — apt-get install sqlite3 libsqlite3-dev — apt-get install python-numpy python-scipy python-matplotlib ipython ipython-notebook python-
pandas python-sympy python-nose python-zmq — apt-get install libzmq-dev — apt-get install pyqt4-dev-tools — apt-get install gr-osmosdr
x Exercice 5 : Projet 2 : IMSI-catcher l’IMSI-catcher est un appareil qui permet de créer une fausse antenne-relais, en s’intercalant entre le
réseau de l’opérateur de téléphonie et l’appareil surveillé. Une fois déployé, il force les dispositifs situés à proximité à passer par lui plutôt que par la véritable antenne. Il reçoit alors les communications de ces téléphones, avant de les transmettre à l’antenne de l’opérateur, de manière invisible. C’est ce qu’on appelle la classique attaque de l’homme du milieu
— Monter et conﬁgurer un opérateur téléphonique en utilisant l’outil OpenBTS. — Récupérer l’IMSI des téléphones connectés.

Applications SDR

Badis/Zitouni

2/2

