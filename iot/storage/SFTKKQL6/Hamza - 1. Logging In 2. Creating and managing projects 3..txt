PURPLE IOT
PROJECT DEMONSTRATION

Jeljeli Hamza jeljelihamza@gmail.com

INDEX
1. Logging In 2. Creating and managing projects 3. Adding and managing new devices 4. Sending data from the device to the broker 5. Viewing Data 6. Purple IoT Mobile Companion 7. Using the « HTTP over MQTT » feature

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 2

LOGGING IN
SIGN IN
❖To sign in, you just need to type your username and password. ❖If you don’t have an account, just click on the Create link.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 3

LOGGING IN
SIGN UP
❖After filling the required fields, such as the username and email fields and clicking on the Sign up button. Your account’s password will be sent to your email address.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 4

CREATING AND MANAGING PROJECTS
PROJECTS VIEW

❖ After logging in and clicking on the Projects Menu. The list of your projects will appear.
❖ You can easily add new projects from the Add a project button.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 5

CREATING AND MANAGING PROJECTS
NEW PROJECT

❖To create a project, you just need to provide few details such as the Project name, Type, Begin and end dates.
❖Configuring the project’s gateway was made easy ! You just to specify the Gateway’s Tag (By default, it is generated for you but still can choose your own name) and of course specifiy a communication protocol.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 6

CREATING AND MANAGING PROJECTS
NEW PROJECT
❖If you want to use the MQTT over HTTP feature, you just need to switch the Protocol list box to HTTP and specifiy the topic. ❖ if you want that this gateway listens and retrieves data from another MQTT Broker, just tick the This gateway is a client to another Platform checkbox and fill the required parameters. Such as IP Address, Port, Topic, etc … ❖The MQTTS broker requires a certificate which can be downloaded from here.
JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 7

CREATING AND MANAGING PROJECTS
CHECKING A PROJECT’S DETAILS
JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 8

CREATING AND MANAGING PROJECTS
CHECKING A PROJECT’S DETAILS
❖After choosing a project a project from the Projects View , you can easily read the
details about the selected project. You can also edit the project’s parameters or delete it. ❖In the Devices listing part, in the button of the page. You will find a list of the devices associated to the gateway. To add a new device you just need to click on the (+) button ! ❖You can also View a device details or delete the device from the actions row in each device. ❖If the Gateway listens to another broker, You will find instead of the Devices listing, a chart containing the last 7 values received from the distant broker.
JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 9

ADDING AND MANAGING NEW DEVICES
ADDING A NEW DEVICE

❖To add a new device, you just need to associate to it a Device ID, set it’s type to a sensor or an actuator, set it’s maximum and minimum values and set the location properties.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 10

ADDING AND MANAGING NEW DEVICES
MANAGING A DEVICE
Data Acquisition visualisation
JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 11

ADDING AND MANAGING NEW DEVICES
MANAGING A DEVICE
❖From the device management view, you can check the devices informations, associate API keys to view received it’s transmitted values and also view a Chart containing the variation of the last 7 transmitted values or to delete the device.
JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 12

SENDING DATA FROM THE DEVICE TO THE BROKER
CONCEPTS

❖The device sends through the gateway it’s data to the MQTT Broker.
❖To send data to the broker, you must be authenticated to the broker using the administration dashboard credentials.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 13

SENDING DATA FROM THE DEVICE TO THE BROKER
CONCEPTS

❖The Data sent through the gateway must be in JSON format.
❖GID : GatewayID (the broker can add this field if it wasn’t found in the message).
❖SID : The Device ID (required) ❖TD: TimeDate (the broker can add this field if it
wasn’t found in the message). ❖VAL : The value sent by the Device (required)
Note : Keys must be written in UPPERCASE.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 14

SENDING DATA FROM THE DEVICE TO THE BROKER
EXAMPLE 1 : USING A PYTHON MQTT CLIENT
❖The purpose of this experiment was to send random values from the Python based MQTT Client to the MQTT Broker to check the compatibility with the existing MQTT Clients. ❖The source code of this experiment can be found here.
JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 15

SENDING DATA FROM THE DEVICE TO THE BROKER
EXAMPLE 2 : USING A NODEMCU ESP8266 V3 (ARDUINO BASED)

❖The purpose of this experiment was to send temperature and humidity values using a DHT11 sensor to the MQTT Broker.
❖The source code of this experiment can be found here.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 16

SENDING DATA FROM THE DEVICE TO THE BROKER
EXAMPLE 3 : SIMULATING AN MQTT CLIENT

❖For this experiment we used MQTT.FX, which is downloadable from here.
❖MQTT.fx is a MQTT Client written in Java based on Eclipse Paho.
❖MQTT.fx is published under Apache License, Version 2.0.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 17

SENDING DATA FROM THE DEVICE TO THE BROKER
EXAMPLE 3 : SIMULATING AN MQTT CLIENT

❖After installing MQTT.FX, we need to configure it by clicking on the blue gear near the connect button.
❖Connection properties are :
❖IP Address : 41.229.118.249 ❖Port : 33820 (for MQTT) or 33830 (for
MQTTS) ❖Client ID : Your project’s gateway tag

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 18

SENDING DATA FROM THE DEVICE TO THE BROKER
EXAMPLE 3 : SIMULATING AN MQTT CLIENT

❖You also need to type your credentials by selecting the User Credntials tab and writing your administration dashboard’s credentials.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 19

SENDING DATA FROM THE DEVICE TO THE BROKER
EXAMPLE 3 : SIMULATING AN MQTT CLIENT

❖If you are using MQTTS, you need to click on the SSL/TLS tab, check the Enable SSL/TLS checkbox and click on CA certificate file which is downloadable from here.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 20

SENDING DATA FROM THE DEVICE TO THE BROKER
EXAMPLE 3 : SIMULATING AN MQTT CLIENT
❖After publishing the values to the broker, you will notice that the chart will be updated immediately. The broker will return OK if publishing was succesfully done.
❖The broker will also return other messages, such as :
❖NOT_OK : if there was a problem during the publishing. ❖PROJ_EXPIRED: if the project associated with the gateway has expired. ❖MISSING_VALUES: if SID or VAL keys are not found in the JSON message. ❖VALUES_MISMATCH: if the provided informations in the JSON message are incoherent.
JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 21

SENDING DATA FROM THE DEVICE TO THE BROKER
EXAMPLE 3 : SIMULATING AN MQTT CLIENT
JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 22

SENDING DATA FROM THE DEVICE TO THE BROKER
EXAMPLE 4 : TRANSMITTING DATA FROM DEVICES BROKER THROUGH A RASPBERRY PI GATEWAY

❖In this experiment, We installed into a Raspberry PI an MQTT Broker which could accept and handle requests from devices connected to him. This MQTT broker will also publish received messages to the Purple IoT Broker to enable the user to monitor and use the transmitted data.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 23

VIEWING DATA
USING BASIC AUTHENTICATION

❖Viewing the Data* acquired from the devices or gateways is guaranteed using Webservices :

Link

Method Description

/WS/SensorsData/publish/

POST Publish message as MQTT from HTTP.

/WS/SensorsData/get/{device}/

GET

Get the last value received from a device.

/WS/SensorsData/get/ {device}/all/

GET

Dumps all the values received from a device.

/WS/SensorsData/get/ {device}/{count}/

GET

Get a certain number of values received from a device.

/WS/GatewayData/get/{gatewayTag}/

GET

Get the last value received from a gateway**.

/WS/GatewayData/get/ {gatewayTag}/all/

GET

Dumps all the values received from a gateway**.

/WS/GatewayData/get/ {gatewayTag}/{count} GET

Get a certain number of values received from a gateway**.

* : Requires authentication using the administration dashboard credentials. ** : Gateway that listen to an External Broker.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 24

VIEWING DATA
USING BASIC AUTHENTICATION
❖URL Examples :
❖http://41.229.118.249:33810/WS/SensorsData/get/SENSOR_LhDxlW248StPYdg/ ❖http://41.229.118.249:33810/WS/SensorsData/get/SENSOR_LhDxlW248StPYdg/7/ ❖http://41.229.118.249:33810/WS/SensorsData/get/SENSOR_LhDxlW248StPYdg/all/
JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 25

VIEWING DATA
USING API KEYS

❖Viewing the Data using generated API keys is also made possible through the Webservices :

Link
/WS/api/SensorsData/get/{device}/{apikey}/ /WS/api/SensorsData/get/{device}/all/{apikey}/ /WS/api/SensorsData/get/{device}/{count}/{apikey}/ /WS/api/GatewayData/get/{gatewayTag}/{apikey}/ /WS/api/GatewayData/get/{gatewayTag}/all/{apikey}/ /WS/api/GatewayData/get/{gatewayTag}/{count}/{apikey}/

Method GET GET GET GET GET GET

Description Get the last value received from a device. Dumps all the values received from a device. Get a certain number of values received from a device. Get the last value received from a gateway*. Dumps all the values received from a gateway*. Get a certain number of values received from a gateway*.

* : Gateway that listen to an External Broker.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 26

VIEWING DATA
USING API KEYS
❖URL Examples :
❖http://41.229.118.249:33810/WS/api/SensorsData/get/2D7x9oRzkAnBK6nQ63t4xHcdNfOToOQ uaTU9Od9Lq7LFUcq6ig4nmDXKUaEVOl0s/
JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 27

PURPLE IOT MOBILE COMPANION

❖All of the functionalities mentioned above may be also done through the Purple IoT Mobile Companion which is downloadable from here.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 28

USING THE « HTTP OVER MQTT » FEATURE
CONCEPTS
❖In some cases, a device is not able to publish data to the broker due the lack of MQTT support for example. The “HTTP over MQTT” feature will enable any device to publish it’s data to the Purple IoT broker using a “POST” HTTP request containing it’s Device ID and Value to be published in JSON format. ❖Depending on the response from the broker. An HTTP response will be sent back to the device.
JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 29

USING THE « HTTP OVER MQTT » FEATURE
EXAMPLE : PUBLISHING USING « HTTP OVER MQTT »

❖For this experiment we used Postman, which is downloadable from here.
❖Postman is a tool used to send requests and receive responses through our REST API.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 30

USING THE « HTTP OVER MQTT » FEATURE
EXAMPLE : PUBLISHING USING « HTTP OVER MQTT »
❖After launching Postman and writing your credentials in the Authorization Tab, you must use the following URI to publish data to the MQTT broker form HTTP in POST method : http://41.229.118.249:33810/WS/SensorsData/publish/
JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 31

USING THE « HTTP OVER MQTT » FEATURE
EXAMPLE : PUBLISHING USING « HTTP OVER MQTT »
❖In the Body tab, we must send a JSON message and specify the SID and VAL values. For example :
JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 32

USING THE « HTTP OVER MQTT » FEATURE
EXAMPLE : PUBLISHING USING « HTTP OVER MQTT »

❖After clicking on Send button, a response will be shown in the buttom. The response is an integer containing the publish response :
❖SUCCESS = 0 ❖USERNAME_PASSWORD_MISMATCH = 1 ❖MISSING_REQUIRED_KEYS = 2 ❖SID_NOT_BELONGS_TO_USER = 3 ❖ERROR_HANDLING_THE_MESSAGE = 4 ❖MQTT_CONNECTION_FAILED = 5 ❖MESSAGE_PERSIST_ERROR = 6 ❖UNKNOWN_ERROR = 19

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 33

THANK YOU FOR YOUR ATTENTION !

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM) 34

