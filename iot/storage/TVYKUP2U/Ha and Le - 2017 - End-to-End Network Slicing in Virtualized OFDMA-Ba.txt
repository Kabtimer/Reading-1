Received August 23, 2017, accepted September 13, 2017, date of publication September 19, 2017, date of current version October 12, 2017.
Digital Object Identifier 10.1109/ACCESS.2017.2754461

End-to-End Network Slicing in Virtualized OFDMA-Based Cloud Radio Access Networks
VU NGUYEN HA1,2, (Member, IEEE), AND LONG BAO LE2, (Senior Member, IEEE)
1École Polytechnique de Montréal, Montréal, QC H3T 1J4, Canada 2INRS, Université du Québec, Montréal, QC H5A 1K6, Canada
Corresponding author: Long Bao Le (long.le@emt.inrs.ca)

ABSTRACT We consider the resource allocation for the virtualized OFDMA uplink cloud radio access network (C-RAN), where multiple wireless operators (OPs) share the C-RAN infrastructure and resources owned by an infrastructure provider (InP). The resource allocation is designed through studying tightly coupled problems at two different levels. The upper-level problem aims at slicing the fronthaul capacity and cloud computing resources for all OPs to maximize the weighted proﬁts of OPs and InP considering practical constraints on the fronthaul capacity and cloud computation resources. Moreover, the lower-level problems maximize individual OPs’ sum rates by optimizing users’ transmission rates and quantization bit allocation for the compressed I/Q baseband signals. We develop a two-stage algorithmic framework to address this two-level resource allocation design. In the ﬁrst stage, we transform both upper-level and lowerlevel problems into corresponding problems by relaxing underlying discrete variables to the continuous ones. We show that these relaxed problems are convex and we develop fast algorithms to attain their optimal solutions. In the second stage, we propose two methods to round the optimal solution of the relaxed problems and achieve a ﬁnal feasible solution for the original problem. Numerical studies conﬁrm that the proposed algorithms outperform two greedy resource allocation algorithms and their achieved sum rates are very close to sum rate upper-bound obtained by solving relaxed problems. Moreover, we study the impacts of different parameters on the system sum rate, performance tradeoffs, and illustrate insights on a potential system operating point and resource provisioning issues.

INDEX TERMS Cloud radio access network, resource management, platform virtualization, computational efﬁciency.

I. INTRODUCTION Next-generation wireless cellular systems are expected to provide signiﬁcantly higher capacity in a cost-efﬁcient manner to support the tremendous growth of wireless trafﬁc and services [1], [2]. Some recent studies have indicated that the traditional model of single ownership of network architecture can be inefﬁcient because the average load demand is usually much lower than the designed peak demand [1]–[3], [7], [8]. Therefore, advanced access techniques for C-RAN and wireless virtualization to support multiple OPs (also called ‘‘wireless network virtualization (WNV)’’) have attracted a lot of attention from both industry and academia [1]–[8], [13].
By realizing various communications and processing functions in the cloud, C-RAN enables more efﬁcient utilization of network resources, which results in better network throughput and reduced network deployment and operation costs. With WNV, multiple OPs can efﬁciently share various network resources such as radio spectrum, computation resources, backhaul/fronthaul capacity;

hence, the capital expenditures (CAPEX) and operating expenses (OPEX) can be reduced signiﬁcantly [8], [7]. To attain the potential beneﬁts of the C-RAN and WNV technologies, one has to address many technical challenges [4], [8]. Resource allocation, which determines the allocation of centralized computation resource [5], [6], fronthaul capacity [9], radio spectrum and power allocation in C-RAN [4], and the slicing/allocation of infrastructure resources for different OPs to optimize desired design objectives in WNV are among the major research challenges [8].
A. RELATED WORKS Recent literature on C-RAN and WNV has tackled some of these technical problems which are described in the following. In particular, the authors in [10] consider the spectrum sharing problem in a heterogeneous wireless network where small-cell base stations are optimally matched with OPs. In [11], the virtual resource slicing problem, which aims at maximizing the system utility as a function of achieved

VOLUME 5, 2017

2169-3536 
 2017 IEEE. Translations and content mining are permitted for academic research only. Personal use is also permitted, but republication/redistribution requires IEEE permission.
See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

18675

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

cumulative rates and assigned resource slots while meeting the requirement of each slice is studied. The slicing problem for different OPs is also considered in [12] where a fairness-based dynamic resource allocation scheme is proposed. Recently, a novel energy-efﬁcient resource allocation strategy is proposed for C-RAN virtualization with optical fronthaul [13] where the matching problem between cells, users, baseband units (BBUs), and a number of wavelengths in optical links is investigated. Two heuristic methods, namely static and dynamic ones, are presented to solve this problem. However, these works do not study potential strategies to share computation resources among OPs and efﬁciently utilize the fronthaul transport network.
Resource allocation for efﬁcient utilization of the C-RAN fronthaul capacity has been studied in [14]–[19]. The works [14]–[16] address the precoding problem for remote radio heads (RRHs) to minimize the total power consumption where [15], [16] consider the downlink while [14] addresses both downlink and uplink communications. In [14] and [15], the authors optimize the utilization of fronthaul links accounting for the power consumption of fronthaul links while we consider the downlink joint transmission design for RRHs to minimize the total transmission power under the fronthaul capacity constraint in [16]. Moreover, the data compression issue for reduction of fronthaul capacity utilization has been addressed in [17] and [18] where [17] focuses on minimizing the amount of data transmitted over the fronthaul transport network while [18] jointly designs signal quantization and power control to maximize the system sum rate. The authors in [19] study the joint fronthaul signal compression and signal recovery in the uplink C-RAN; however, this work does not consider transmission design aspects.
A few existing works have considered the cloud computation complexity for processing users’ data, which is a major challenge in large-scale C-RAN deployment. The works [20]–[23] study the optimization of C-RAN computational resources. Speciﬁcally, [20] models the computation complexity in downlink communication considering computational requirement of electrical circuits for processing the base-band signals where the computation complexity is a non-linear function of different parameters including the number of antennas, modulation bits corresponding to FFT blocks, the coding rate, and the number of data streams. The work [21] then applies this model to quantify the C-RAN energy-efﬁciency beneﬁts. The authors in [22] propose a different computation complexity model for the uplink C-RAN system, which accounts mainly for the decoding process of turbo-encoded uplink data streams of all users. This work is motivated by the fact that the power utilized in the decoding process is much higher than that in the encoding process. Based on this model, the authors address the rate allocation for uplink transmissions to maximize the system sum rate considering the cloud computational capacity constraint [23]. This work, however, assumes unlimited fronthaul capacity and does not address the resource allocation. All these papers have not studied the problem of end-to-end network slicing
18676

of radio, fronthaul, and cloud computational resources for C-RAN, which is studied in our current paper.
B. RESEARCH CONTRIBUTIONS To the best of our knowledge, uplink C-RAN design considering constraints on limited fronthaul capacity and cloud computation resources has not been studied except our previous work [25], which, however, relies on an over-simpliﬁed computational complexity model and does not consider the C-RAN virtualization issue. This paper aims to ﬁll this gap in the existing C-RAN literature where the virtualized OFDMA-based uplink C-RAN design is addressed. In particular, we make the following contributions.
• We consider the virtualized resource allocation design for the uplink OFDMA-based C-RAN where an InP leases its resources to different OPs to support their mobile users. This design boils down to solving twolevel coupled problems where the upper-level problem aims to determine the resource slicing solution for the computation resource and fronthaul capacity to maximize the weighted proﬁts of the InP and OPs while the lower-level problems model the resource allocation of individual OPs for their users. Speciﬁcally, each lowerlevel problem must be solved by the corresponding OP to maximize the sum rate of its users by determining the optimal rate and quantization bit allocations for the resource slicing solution given by the upper-level problem.
• We develop a two-stage solution framework to solve the tightly coupled two-level problems. In stage one, we study the relaxed problems of the corresponding upper-level and lower-level problems to deal with the discrete rate and quantization bit allocation variables. We show that the relaxed problems in both levels are convex and we describe how to solve these problems optimally. Speciﬁcally, by employing the dual-based approach, we derive the optimal rate and quantization bit allocation solution for a given dual point, which enables us to develop a fast algorithm to solve the relaxed lowerlevel (RLL) problem optimally. Importantly, the optimal solution of the RLL problem is employed to tackle the relaxed upper-level (RUL) problem. In the second stage, we propose two rounding methods which are applied to the optimal solutions of the relaxed problems to attain a feasible solution for the original problem.
• For performance evaluation of the developed algorithms, we also describe two greedy resource allocation algorithms. Extensive numerical studies are conducted where we examine the convergence and efﬁciency of the proposed algorithms as well as the impacts of different system parameters on the system sum rate. In addition, we also study different tradeoffs, which characterize the relations of available resources, resource provisioning, and the corresponding beneﬁts achieved by the InP and OPs.
VOLUME 5, 2017

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

Some preliminary results of this work have been published in [24]. However, the work in [24] only studies the optimization of transmission rate and quantization bit allocation, which corresponds to the lower-level problem investigated in this journal paper. Speciﬁcally, the current journal paper studies the more complicated and coupled problems in two different levels which optimize the slicing of fronthaul and computation resources as well as transmission rate and quantization bit allocation. Therefore, the algorithm design and development in this journal version are more extensive compared to those in the conference work [24]. Moreover, numerical results in this journal version are different from those in the conference work [24] since the two-level endto-end network slicing design in the current paper is more general than the one-level resource allocation engineering in [24].
The remaining of this paper is organized as follows. We describe the system model and formulations of two-level problems in Section II. In Section III, we characterize the convexity of these relaxed problems. Then, we develop the optimal algorithms to solve these relaxed problems and present the proposed rounding methods in Section IV. The greedy resource allocation algorithm is presented in Section V. Numerical results are presented in Section VI followed by conclusion in Section VII. Key notations used in the paper are summarized in Table 2 given at the end of the paper.

II. SYSTEM MODEL

We consider the C-RAN which consists of BBUs in the cloud,

K RRHs, and the fronthaul transport network connecting

RRHs to the cloud. The C-RAN is owned by an InP which leases network resources to O OPs to serve their own users.1

The uplink OFDMA transmission based on the 3GPP LTE

standard with full frequency reuse (frequency reuse factor

of one) is assumed. Speciﬁcally, each cell utilizes the whole

spectrum comprising S physical resource blocks (PRBs)

where each PRB corresponds to 12 sub-carriers (180 kHz)

in the frequency domain and a slot duration of ts = 0.5 ms, which is equivalent to 7 OFDM symbols [6]. We denote the

set of all PRBs and OPs as S and , respectively.

We assume that the PRB allocations to individual OPs

in each cell have been predetermined by any existing

algorithm.2 Moreover, let Sko denote the set of PRBs assigned

to ∩

OP Skm

o =

in ∅

cell for

k. We assume that ∪o∈ any two different OPs o

Sko and

= m.

S and Sko Therefore,

there is only inter-cell interference on a speciﬁc PRB if

1For the more general setting with multiple InPs, one must consider how different InPs compete or cooperate in providing fronthaul and computing resources for different OPs. The joint problem of InPs’ competition/cooperation and OPs’ resource allocation is certainly interesting but challenging, which is reserved for study in our future work.
2The proposed design for optimized fronthaul capacity and computation resource allocation can be realized for a given PRB solution, which can be obtained by any existing PRB allocation algorithm such as that in [12]. In general, the fronthaul capacity and cloud computing resource allocation can be optimized jointly with the PRB allocation; however, this joint allocation problem is more complex, which will be studied in our future work.
VOLUME 5, 2017

concurrent transmissions from different cells occur on the
underlying PRB. We assume that each RRH upon receiv-
ing users’ baseband signals of different OPs quantizes these
signals and forwards them to the cloud for decoding. In the
following, we refer to RRH k and its corresponding coverage
area as cell k. We further assume that both RRHs and users
are equipped with single antenna. Let xk(s) ∈ C represent the baseband signal transmitted on
PRB s in cell k and we assume that the signal xk(s) has unit power. Then, the signal received at RRH k on PRB s can be
written as

y(ks) =

h(ks,)j p(js)xj(s) + ηk(s),

(1)

j∈K

where K denotes the set of cells, p(js) represents the transmission power corresponding to xj(s), h(ks,)j is the channel gain from the user assigned PRB s in cell j to RRH k, and ηk(s) ∼ CN 0, σk(s)2 denotes the complex Gaussian thermal noise.

A. SIGNAL QUANTIZATION AND PROCESSING We assume that all baseband signals y(ks) must be quantized and then forwarded to the cloud for further processing and

decoding, which are performed by the BBUs. Moreover, RRH k uses b(ks) bits to quantize the real and imaginary parts of the received symbol y(ks). Then, according to the results
in [26], the quantization noise power can be approximated

as

q(ks)(b(ks)) 2Q(y(ks))/2b(ks) ,

(2)

where Q(y) =

∞ −∞

f

(y)1/3dy

3/12,

and

f

(y(ks))

is

the

prob-

ability density function of both the real and imaginary

parts of y(ks,)u. Assuming a Gaussian distribution of the signal

to be quantized, we have [27]

√

q(ks)(b(ks))

3π 22b(ks)+1

Yk(s)

,

(3)

where Yk(s) is the power of received signal y(ks), which is equal to

Yk(s) =

|h(ks,)j

2
|

p(js)

+

σk(s)2

=

D(ks)

+

Ik(s),

(4)

j∈K

where D(ks)

=

|h(ks,)k

2
|

p(ks)

and Ik(s)

=

j∈K/k |h(ks,)j|2 p(js) +

σk(s)2. Then, the total number of quantization bits required by

all users of OP o which are forwarded from RRH k to the

cloud in one second (measured in bit-per-second (bps)) can be expressed as3

Bok = 2NRE

b(ks),

(5)

s∈Sko

3The total number of quantization bits Bok for each OP o is normalized to one second; therefore, the number of resource elements NRE is deﬁned for each second. Note that the normalization of these quantities to one second
is performed just for calculation while the number of quantization bits for individual users and subcarriers bk(s) must be re-optimized once the wireless channel gains vary.

18677

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

where NRE is the number of resource elements (REs) in one second and one subchannel of a PRB (corresponding to
12 subcarriers). Then, NRE can be calculated as NRE = 12 × 7/ts [6] since each LTE slot spans an interval ts = 0.5 ms with 7 symbols. Let b denote the vector whose elements represent
the numbers of quantization bits allocated to all users in the network. For a given b, the quantized version of yk(s) can be written as

y˜(ks) = yk(s) + ek(s),

(6)

where e(ks) represents the quantization error for yk(s), which has zero mean and variance qk(s)(bk(s)). The SINR of the signal corresponding to PRB s in cell k can be expressed as

γk(s)(b(ks))

=

Ik(s)

Dk(s) + qk(s)(bk(s))

Ik(s)

Dk(s)

+√
3π

Yk(s)

22b(ks) +1

.

(7)

B. DECODING COMPUTATIONAL COMPLEXITY We assume that a data rate rk(s) (in ‘‘bits per channel use (bits pcu)’’) on PRB s is chosen from a given discrete
set with MR different rates (i.e., different predetermined modulation and coding schemes) R = {R1, R2, . . . , RMR }. Moreover, the chosen rate is set smaller than the link
capacity to ensure satisfactory communication reliability and manageable decoding complexity, i.e., rk(s) ≤ log2(1 + γk(s)(b(ks))). We assume that the capacity-achieving turbo code is employed, then the computation effort required to suc-
cessfully decode information bits depends on the number of
turbo-iterations. According to the results [22], the required
computation effort expressed in ‘‘bit-iterations (bi)’’ for
decoding the transmitted signal on PRB s in cell k is a function of γk(s)(b(ks)) and rk(s) which can be expressed as4
Ck(s) = χk(s)(rk(s), b(ks)) = Ark(s) B − 2 log2 log2 1 + γk(s)(bk(s)) − rk(s) ,
(8)

where A = 1/ log2(ζ − 1), B = log2 ((ζ − 2)/(ζ T ( ch))), ζ is a parameter related to the connectivity of the decoder, T ( ch) = −T /log10( ch), T is another model parameter, and ch is the target computational outage probability. Note that the computational outage probability occurs when
there is not sufﬁcient computational resources to correctly decode the received signal. The set T , ζ can be selected by calibrating (8) with an actual turbo-decoder implementation or a message-passing decoder. Let ro and bo denote
the vectors whose elements represent the data rates and num-
bers of quantization bits selected for all users from OP o,
respectively. Then, the total computation effort required by
the cloud to successfully decode the signals for all users from
OP o (calculated in ‘‘bi per second (bips)’’) can be expressed

4This required fronthaul capacity for each OP depends on all wireless channel gains.

18678

as [6]

Co(ro, bo) = NRE

Ck(s).

(9)

k∈K s∈Sko

C. BI-LEVEL RESOURCE ALLOCATION FORMULATION
We now present the bi-level problem formulation that models the interactions among the C-RAN InP, the OPs, and mobile users. Speciﬁcally, the OPs must pay the InP to rent network resources, which are then utilized to provide services to the mobile users. Moreover, such problem formulation must account for limited cloud computational effort and fronthaul capacity. The upper-level problem aims to maximize the weighted sum proﬁt of the InP and OPs through slicing the fronthaul and computational resources for different OPs while the lower-level problems for individual OPs optimize the rate and quantization bit allocation to achieve their maximum sum rates. By solving these two-level problems, we can obtain an equilibrium, which would be desirable for the InP and all OPs.
In the considered bi-level problem formulation, the performance measure of interest is the proﬁts achieved by the InP and OPs which are modeled as follows. Let Co and Bok denote the computational effort and the total quantization bits per second corresponding to RRH k that OP o requires from the C-RAN InP (i.e., the required amount of fronthaul capacity). Moreover, the prices corresponding to one unit of computational effort and fronthaul capacity are denoted as ψo (¢/bips) and βko (¢/bps), respectively. We assume that the proﬁt obtained by the InP is equal to the total payment from all OPs (i.e., we omit the operation cost since it simply adds a constant term to underlying optimization objective), which can be calculated as

GInP =

GIonP =

o∈

o∈

ψoCo + βkoBok , (10)
k ∈K

where GIonP is the payment from OP o to the InP for using the amount of cloud computational resource Co and the amount of fronthaul capacity Bok for RRH k, i.e., GIonP = ψoCo +
βkoBok . For convenience, let us deﬁne Bo = [Bo1, . . . , BoK ].
k ∈K
Let us deﬁne Ro(Co, Bo) = k∈K s∈Sko rk(s) as the total rate of all users from OP o, which is achieved by using the amount of computational resource Co and the amount of fronthaul capacity Bo. Then, the proﬁt achieved by OP o,
which is equal to revenue minus cost, can be expressed
as

GOo P = ρoNRERo(Co, Bo) − GIonP,

(11)

where ρo (¢/bps) is the price per rate unit that OP o obtains by providing services to its users. The upper-level problem aims to maximize the weighted sum proﬁt of the InP and OPs,

VOLUME 5, 2017

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

which can be mathematically stated as5

max υInPGInP +
{C o ,Bo }

υoGOo P

o∈

(12a)

s. t. Co ≤ C¯ cloud,
o∈

(12b)

Bok ≤ B¯ k , ∀k ∈ K,
o∈

(12c)

where υInP and υo represent the weights corresponding to the
InP and OP o, respectively, which can be used to control the
desirable proﬁt sharing between the InP and OPs. In fact, only
relative values of these weights are important in determining
the slicing solution for the cloud computing and fronthaul capacity resources (i.e., Co, Bo). In some implementation,
we can normalize these weights so that their sum is equal to 1, i.e., υ¯ InP + υ¯ o = 1. Moreover, C¯ cloud describes the
o∈
available computational resource in the cloud and B¯ k denotes the capacity of the fronthaul link connecting RRH k with the
cloud.
In the lower level, each OP is interested in maximizing
the sum rate through optimizing transmission rates and the
numbers of quantization bits allocated to individual users. Because the SINR γk(s)(bk(s)) is a complicated function of quantization bits b(ks), we present a tight lower bound of the SINR in the following proposition. This SINR lower
bound enables us to focus on a good signal quantization
regime, which will be incorporated in the lower-level problems to have tractable design. Moreover, the SINR γk(s)(b(ks)) can be upper-bounded by γ¯k(s) = Dk(s)/Ik(s), which can be obtained by setting the quantization noise qk(s)(bk(s)) = 0 in the SINR expression.
Proposition 1: If the number of quantization bits b(ks) satisﬁes qk(s)(b(ks)) ≤ Yk(s)Ik(s), then we have the following lower bound for the SINR γk(s)(bk(s))

γk(s)(b(ks))

≥

γ

(s) k

=

γ¯k(s) + 1 − 1.

(13)

In addition, we have the following relations between the SINR upper and lower bounds

γ (s)
k

γ¯k(s) when γ¯k(s) 1,

(14)

γ (s)
k

γ¯k(s)/2 when γ¯k(s)

1.

(15)

Proof: The proof is given in Appendix A.

5In general, both InP and OPs would like to maximize to their proﬁts. By maximizing the weighted sum proﬁt of InP and OPs, we aim to reach a Pareto-optimal solution, which can be desirable for both the InP and all OPs. Here, the weights in the objective function can be pre-determined by all stakeholders to reﬂect their priorities and/or contract agreements.
VOLUME 5, 2017

The requirement q(ks)(b(ks)) ≤ Yk(s)Ik(s) in Proposition 1 is indeed equivalent to b(ks) ≥ b(ks) where





b(ks)

=

1 2

log2

√  3π

Yk(s) Ik(s)



−

1,

(16)

and ∗ stands for the ceiling operation. The lower-level problem for OP o (Po) can be formally
stated as

max
ro ,bo

rk(s)
k∈K s∈Sko

s. t.

Ck(s) ≤ Co/NRE,

k∈K s∈Sko

(17a) (17b)

rk(s) ≤ log2 1 + γk(s)(b(ks)) , ∀k ∈ K, ∀s ∈ Sko,

(17c)

b(ks) ≤ Bok /(2NRE), ∀k ∈ K,
s∈Sko
b(ks) ≥ b(ks) , ∀k ∈ K, ∀s ∈ Sko, b(ks) is integer, ∀k ∈ K, ∀s ∈ Sko, rk(s) ∈ R, ∀k ∈ K, ∀s ∈ Sko.

(17d)
(17e) (17f) (17g)

Constraint (17b) requires that the total computation effort
required by all users of OP o should not exceed the sliced computational resource for this OP, Co, which is determined
from the upper-level problem. The second constraint (17c)
is the standard capacity constraint for PRB s while con-
straint (17d) ensures that the amount of fronthaul capacity allocated for RRH k of OP o is upper bounded by Bok , which is also determined from the upper-level problem.
Constraints (17e) capture the good quantization regime with the lower bound of quantization bits b(ks) given in (16).
This two-level resource allocation design is difﬁcult to
tackle because we have to optimize the discrete variables related to the rate and quantization bit allocation ro, bo
in the lower-level problem as well as the continuous variables Co, Bo in the upper-level problem. Moreover, computational complexity Ck(s) = {χk(s)(rk(s), b(ks))} in the lower-level problems is a complex function of the optimization variables rk(s), b(ks). Finally, the lower-level and upper-level problems are tightly coupled since the variables Co, Bo in the later are the
parameters in the former.
Remark 1: The objective function of the upper-level prob-
lem represents the weighted proﬁts of the InP and all OPs. If the weights of InP and OPs are the same (i.e., υInP = υo, ∀o), then the upper-level problem will optimize

max
{C o ,Bo }

ρoNRERo(Co, Bo),

(18)

o∈

where recall that ρo (¢/bps) is the price per rate unit that

OP o obtains by providing services to its users. The objective

function in this case is the weighted sum of the total rates of

individual OPs. On the other hand, the lower-level problems

18679

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

aim to maximize the sum rates of OPs individually. Speciﬁcally, the OP o optimizes the sum rate of its users as

max
ro ,bo

Ro (C o ,

Bo)

=

k ∈K

s∈Sko

rk(s).

(19)

Therefore, the upper-level problem and lower-level problems even in this special case still optimize different objectives; therefore, we have to solve all these problems to obtain the ﬁnal network slicing solution.

III. PROBLEM TRANSFORMATION AND CONVEXITY CHARACTERIZATION We propose a two-stage solution framework to solve the bi-level resource allocation formulation where we solve the relaxed problems in the ﬁrst stage and develop rounding methods to ﬁnd an efﬁcient and feasible solution for the original design problems in the second stage.

A. PROBLEM RELAXATION
The lower-level problem with discrete optimization variables bo and ro plays an important role in our design. Since optimization discrete variables are highly complex, we adopt the natural relaxation approach to tackle the lower-level problems where the discrete variables are relaxed into the continuous ones. Speciﬁcally, the constraint (17g) is relaxed to

Rmin ≤ rk(s) ≤ Rmax, ∀k ∈ K, ∀s ∈ S,

(20)

where Rmin = R1 and Rmax = RMR represent the lowest and highest rates in the rate set R, respectively. With this
relaxation, we study the following relaxed lower-level (RLL) problem6

max
ro ,bo

rk(s) s. t. (17b)-(17e) and (20). (21)

k∈K s∈S

Let R¯ o(Co, Bo) denote the optimal total rate of all users from
OP o obtained by solving this RLL problem. It is clear that R¯ o(Co, Bo) is the upper bound of Ro(Co, Bo). Based on the obtained rates R¯ o(Co, Bo), we consider the following relaxed
upper-level (RUL) problem

max
{C o ,Bo } o∈

o(Co, Bo)

= υInPGInP + υo ρoNRER¯ o(Co, Bo) − GIonP

o∈

s. t. (12b), (12c),

(22)

where o(Co, Bo) = (υInP−υo)GIonP+υoρoNRER¯ o(Co, Bo). Remark 2: Note that the feasible regions of the relaxed
problems are larger than those of the corresponding original problems. Hence, the upper-level and lower-level problems are infeasible if the RUL and RLL problems are infeasible, respectively.

6Constraints (17f) are not needed after relaxation. 18680

B. CONVEXITY CHARACTERIZATION

1) CONVEXITY OF RLL PROBLEM

To solve the RLL problem, we ﬁrst characterize the convexity of the computational complexity function Ck(s) = {χk(s)(rk(s), b(ks))} in the following theorem.
Theorem 1: χk(s,)u(rk(s), b(ks)) is a jointly convex function with respect to variables (rk(s), b(ks)) if

q(ks)(b(ks)) ≤ Yk(s)Ik(s).

(23)

Proof: The proof is given in Appendix B.
Based on the result in this theorem, we state the convexity
of the RLL problem in the following proposition.
Proposition 2: The RLL problem (21) is convex.
Proof: Note that the condition required to have the
SINR lower bound (13) in Proposition 1, which is cap-
tured in constraint (17e), is exactly the requirement in (23). Hence, the constraint (17b) is convex if b(ks) satisﬁes the constraint (17e). In addition, the constraint function in (17c) is convex due to the fact that log2 1 + γk(s)(b(ks)) is a concave function with respect to b(ks). Moreover, the objective function and other constraints of the RLL problem (21) are in linear
form. Therefore, the RLL problem (21) is convex.

2) CONVEXITY OF RUL PROBLEM We characterize the convexity of the RUL problem in the following theorem and proposition.
Theorem 2: R¯ o(Co, Bo) is a concave function with respect to Co and Bo.
Proof: The proof is given in Appendix C. Based on the result in this theorem, we have the following proposition.
Proposition 3: The RUL problem (22) is convex.
Proof: Due to the result in Theorem 2, the objective function of the RUL problem is concave with respect to variables Co and Bo. In addition, all the constraint functions are in linear form. Therefore, the RUL problem (22) is convex.

IV. RESOURCE ALLOCATION ALGORITHMS A. PROPOSED ALGORITHM TO SOLVE RLL PROBLEMS According to the result in Proposition 2, the RLL problem
is convex and it can be veriﬁed that Slater’s conditions hold;
hence, it can be solved optimally by tackling the corresponding dual problem. Speciﬁcally, the dual function g(λ) of the RLL problem can be deﬁned as

go(λo) = max o(λo, ro, bo) s. t. (17c)-(17e) and (20),
ro ,bo
(24)

where o(λo, ro, bo) is the Lagrangian obtained by relaxing the constraint (17b), which can be expressed as

o(λo, ro, bo) =

rk(s)

k∈K s∈Sko





−λo


k ∈K

s∈Sko

Ck(s)

−

Co
 NRE

,

(25)

VOLUME 5, 2017

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

ok (λo, rok , bok ) =

rk(s) − λo

Ck(s) =

(1 − λoAB)rk(s) + 2λoArk(s) log2 log2 1 + γk(s)(b(ks)) − rk(s)

(29)

s∈Sko

s∈Sko

s∈Sko

where λo denotes the Lagrange multiplier. Then, the dual problem can be written as

min go(λo) s. t. λo ≥ 0.

(26)

λo

Since the dual problem is always convex, go(λo) can be
minimized by using the standard sub-gradient method where the dual variable λo can be iteratively updated as follows:





+

λo(l+1)

=

λo(l)

+

δ(ol)


k ∈K

s∈Sko

Ck(s)

−

Co
 NRE

,

(27)

where l denotes the iteration index, δ(ol) represents the step

size, and [x]+ is deﬁned as max(0, x). This sub-gradient

update guarantees to converge to the optimal value of λo

for given primal point (ro, bo) if the step-size δ(ol) is chosen

appropriately √

so

that

δ(ol)

→

0

when

l

→

∞

such

as

δ(ol)

=

1/ l [28].

To solve the RLL problem optimally, one can iteratively

solve problem (24) for a given dual point λo and employ the sub-gradient method to update λo as in (27). There-

fore, the remaining step is to solve the optimization problem

in the right-hand-side of (24). We will show that this can

be accomplished by decoupling this problem into K sub-

problems corresponding to K cells and iteratively solving

these sub-problems optimally. It can be veriﬁed that the

Lagrangian function (25) can be rewritten as

o(λo, ro, bo) =
k ∈K

o k

(λo,

rok

,

bok

)

+

λo

Co NRE

,

(28)

where

o k

(λo

,

rok ,

bok )

is

expressed

in

(29)

at

the

top

of

this

page and rok , bok represent the vectors of all rates and numbers

of quantization bits corresponding to cell k and OP o. There-

fore, we can decouple the RLL problem into K independent

sub-problems, (Pko)’s, which are given as

(Pko)

max
rok ,bok

o k

(λo,

rok

,

bok

)

s. t. rk(s) ≤ log2 1 + γk(s)(bk(s)) ,

(30a) ∀s ∈ Sko,

b(ks) ≤ Bok /(2NRE),
s∈Sko
b(ks) ≥ bk(s) , ∀s ∈ Sko, Rmin ≤ rk(s) ≤ Rmax, ∀s ∈ Sko.

(30b) (30c)
(30d) (30e)

This problem is still convex due to the result in
Pmraolplyosbiytioalnte2r.nIantetlhyeofpotlilmowiziinngg,owveersoonlveevparrioabblleemin(rPokkoa)nodpbtiokwhile keeping the other ﬁxed.

VOLUME 5, 2017

1) SOLVING (Pko) FOR GIVEN bok For a given bok , problem (Pko) becomes

max
rok s∈Sko

Ek(s)rk(s) + 2λoArk(s) log2

1

−

rk(s) t (b(ks) )

(31a)

s. t. Rmin ≤ rk(s) ≤ min t(b(ks)), Rmax , ∀s ∈ Sko, (31b)

where Ek(s) = 1 − λoAB + 2λoA log2 t(b(ks)) and t(b(ks)) = log2 1 + γk(s)(b(ks)) .
The optimal solution of this problem is described in the following proposition.
Proposition 4: The optimal solution to problem (31) can be expressed as

rk(s)

= max

Rmin, min

t

(b(ks)

),

Rmax,

r

|

∂ w(r ∂r

)

=−Ek(s)

, (32)

where w(r) = 2λoAr log2 1 − r/t(b(ks)) . Proof: The proof is given in Appendix D.

2) SOLVING (Pko) FOR GIVEN rok For given rok , problem (Pko) becomes equivalent to

max
bok

z
s∈Sko

b(ks)

s. t. b(ks) ≥ max b(ks) , t−1 rk(s) , ∀s ∈ Sko,

b(ks) ≤ Bok /(2NRE),
s∈Sko

(33a)
(33b) (33c)

where z(b(ks)) = G(ks) log2 log2 1 + γk(s)(b(ks)) − rk(s) , G(ks) = 2λArk(s), and t−1(r) is the inverse function of t(b). The objective function of this problem is concave with respect to bok . Hence, this problem is a convex one whose optimal solution can be obtained by studying the Karush-Kuhn-
Tucker optimality conditions. The optimal solution of this
problem is summarized in the following proposition.
Proposition 5: The optimal solution of problem (33) can
be expressed as

b(ks) = max

b(ks) , t−1

rk(s)

,

b|

∂

z(b) ∂b

=µ

,

(34)

where µ is a constant so that s∈Sko b(ks) = Bok /(2NRE). Proof: The proof is given in Appendix E.

Remark 3: It can be veriﬁed that if (rok , bok ) is the optimal

solution solution

of the where

RLL romin

problem, then has the same

s(irzome ina,sbrokok

) is a feasible and all of its

elements are equal Rmin. Therefore, the feasibility of the

18681

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

RLL problem can be veriﬁed by solving problem (33) with
rok = romin, which is indeed employed in the initialization step of Algorithm 1 presented in the following.

3) PROPOSED ALGORITHM
We summarize how to solve the RLL problem in Algorithm 1.
In this iterative algorithm, we alternatively update one of the two variables bok and rok while keeping the other ﬁxed until convergence. Because the optimal solution for each variable
can be obtained, the objective value increases over iterations
which ensures fast convergence for this algorithm. We then update the dual variable λo as in (27) in the outer loop.

Algorithm 1 Algorithm to Solve RLL Problem

1: Initialization: Set rk(s) = Rmin ∀(k, s), λo(0) = 0 and l = 0. Choose a tolerance parameter ε for convergence.

2: repeat

3: for k ∈ K do

4:

repeat

5:

Fix rok and update bok as in (34) with λo(l).

6:

Fix bok and update rok as in (32) with λo(l).

7: until Convergence.

8: end for 9: Calculate all Ck(s) with new rok and bok . 10: Update λo(l+1) as in (27). 11: Set l = l + 1.
12: until |λo(l) − λo(l−1)| < ε.

B. PROPOSED ALGORITHM TO SOLVE RUL PROBLEM
Since the RUL problem is convex according to Proposition 3,
its optimal solution can be found efﬁciently by standard
convex optimization techniques. It appears non-tractable to
derive the closed-form optimal solution of the RUL prob-
lem. Therefore, we employ the sub-gradient method to solve this problem based on the sub-gradient ∇R¯ o(Co, Bo) of R¯ o(Co, Bo). Speciﬁcally, the sub-gradient method to iteratively update Co, Bo can be performed as follows:

[Co, Bo](l+1) = P [Co, Bo](l) + τ(ol)∇ o(Co, Bo) , (35)

where [Co, Bo](l) denotes the vector formed from the opti-

mization variables Co and Bo, τ(ol) represents step size in

the iteration l, ∇ o(Co, Bo) =

∂

o(Co,Bo) ∂ ∂Co

o (C o ,Bo ) ∂ Bo1

.

.

.

∂
of

o (C o ,Bo
C∂oB,oKBo

) T . Moreover, P [Co, Bo] represents the projection to the feasible region, which is achieved by solving

the following quadratic problem

min [Co, Bo] − [Cˆ o, Bˆ o] 2 s. t. (12b), (12c), (36)
[C o ,Bo ]

where δ(ol)∂

Cˆ o o(C

= o,

BCo(o)l)/∂+Bδok(o,l

)∂ ∀k

o(Co, Bo)/∂Co and Bˆ ok = Bok,(l) + ∈ K are updated [Co, Bo] given

by (35). The sub-gradient based updates guarantee to con-

verge to the optimal values of Co, Bo if the step-size τ(ol) is

18682

chosen appropriately

as

τ(ol)

=

√ 1/ l

[28].

to

satisfy

τ(ol)

→

0

when

l

→

∞

such

The remaining issue is to determine the value of

∇ o(Co, Bo), which can be expressed as

∇ o(Co, Bo)

∂R¯ o(Co, Bo)/∂Co

ψ o 

=

νoρoNRE

  

∂R¯ o(C

o, Bo)/∂Bo1 ...

  

+

(υ InP

−

υo)

.β.1o.,

∂R¯ o(Co, Bo)/∂BoK

βKo

(37)

where ∂R¯ o(Co, Bo)/∂Co and ∂R¯ o(Co, Bo)/∂Bok , ∀k ∈ K, can be approximated as

∂R¯ o(Co, Bo) ∂Co

R¯ o(Co +

C

o,

Bo) Co

−

R¯ o(C

o,

Bo)

,

(38a)

∂R¯ o(Co, Bo) ∂ Bok

R¯ o(Co, Bo +

Bok ) Bok

−

R¯ o(C

o,

Bo)

,

(38b)

where are zero

Bok is except

the that

vector of size K × 1 the kth element equals

whose elements to Bok . In (38),

the values of Co and Bok , ∀k ∈ K are chosen sufﬁciently

small. We summarize the procedure to update [Co, Bo]’s in

Algorithm 2 which is employed to solve the RUL problem.

Algorithm 2 Algorithm to Solve RUL Problem
1: Initialization: Set C(o0) = C¯ cloud/O, and Bok,(0) = B¯ k /O for all (o, k) ∈ × K, ν(o0) = 0 for all o ∈ , and l = 0.
2: repeat 3: Run Algorithm 1 to obtain {R¯ o(Co, Bo)} with
{[Co, Bo](l)} for all o ∈ . 4: Run Algorithm 1 to obtain R¯ o(Co + Co, Bo) and
R¯ o(Co, Bo + Bok ). 5: Calculate ∇ o(Co, Bo) as in (37) by using
R¯ o(Co + Co, Bo) and R¯ o(Co, Bo + Bok ) to determine ∂R¯ o(Co, Bo)/∂Co, and ∂R¯ o(Co, Bo)/∂Bok for all (k, o) ∈ K × as in (38). 6: Update [Co, Bo](l+1) for all o ∈ as in (35).
7: Set l = l + 1.
8: until Convergence.

C. ROUNDING DESIGN After running Algorithm 2, we obtain a feasible solution {Co, Bo} and their corresponding rk(s) and b(ks) of the relaxed problems, which take real values. To obtain a feasible and discrete solution that satisﬁes the constraints (17e), (17f), (17g), the continuous variables must be appropriately rounded to the corresponding discrete values.7 This rounding design must be conducted carefully because the resulting discrete results may not satisfy the original cloud computation and fronthaul constraints. Toward this end, we propose two rounding methods which are described in the following.
7It is possible that no feasible discrete variables can be found from the relaxed solutions rk(s) and bk(s) if the constraints of the original problems are very tight.
VOLUME 5, 2017

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

1) ROUNDING (IR) METHOD
For each OP, we iteratively run Algorithm 2 and perform the following task in each iteration. We choose one value of rk(s) (or b(ks) ), which is closest to one rate value in R (or an integer) and ﬁx it to that value in following iterations. This
one-by-one rounding process is repeated until convergence.

2) ONE-TIME ROUNDING AND ADJUSTING (RA) METHOD
This method has two phases for each OP. First, we round all rk(s) and b(ks) to their closest values in R and the set of integers, respectively in the ﬁrst phase. Then, if any constraints are violated, we round down the corresponding variables one-by-one where the variable that affects the violated constraints the most is chosen in each rounding-down step in the second phase.

V. GREEDY ALGORITHMS AND COMPLEXITY ANALYSIS A. GREEDY ALGORITHMS
To the best of our knowledge, there is no existing resource allocation algorithm for the end-to-end network slicing design studied in this paper. For performance evaluation of the developed algorithm, we present two greedy one-level resource allocation algorithms as referencing benchmarks in this section. Hence, the one-level benchmark approaches will be considered by easing one of two challenges of bilevel problem, i.e., network resource slicing among OPs and resource allocation optimization for users of each OP. Speciﬁcally, the C-RAN network resources InP are shared directly to all OPs in the ﬁrst approach, named ‘‘SlicingRelaxed Greedy Algorithm’’ (Algorithm 3) while resources are allocated directly with respect to each user in the second one, named ‘‘Resource-Allocation-Relaxed Greedy Algorithm’’ (Algorithm 4).

1) SLICING-RELAXED GREEDY ALGORITHM
This algorithm includes two stages. In stage one, the network resources of InP are fully sliced to OPs based on their upper bound values of achievable rates. Then, each OP will allocate the rate and quantization bits to its users. In particular, we ﬁrst estimate the upper bound of the rate rk(s) on every PRB s and cell k as log2 1 + γ¯k(s) where γ¯k(s) = Dk(s)/Ik(s). We then allocate the computational and fronthaul capacity resources for different OPs based on the upper bound of the sum rate of each OP o as follows:

Cgoa = Rˆ oC¯ cloud/ Rˆ o,

(39)

o∈

Bok,ga = Rˆ ok B¯ k / Rˆ ok , ∀k ∈ K,

(40)

o∈

where Rˆ ok = s∈Sko log2 1 + γ¯k(s) and Rˆ o = k∈K Rˆ ok . In stage two, we propose a simple method to solve the
RLL problem for OP o with Cgoa and Bok,ga. Speciﬁcally, we optimize the quantization bit allocation to maximize the

VOLUME 5, 2017

Algorithm 3 Slicing-Relaxed Greedy Algorithm

1: Deﬁne the network resource for each OP as in (39)–(40).

2: for OP o do

3: Calculate {b(ks) }k∈K,s∈Sko as in (42).

4: Set b(ks) = b(ks) , for all (k, s) ∈ K × Sko.

5: Set rk(s) = maxr∈R r s. t. r ≤ t(b(ks)), for all (k, s). 6: while Ctot (ro, bo) > Cgoa do

7:

Find (k∗, s∗) = arg max Ck(s).

8:

Reduce rk(s∗∗) to the nearest value in R.

9: end while

10: end for

sum rate of all users by relaxing the underlying variables to continuous ones and solving the following problem

max
b

log2 1 + γk(s)(b(ks))

k∈K s∈S

s. t.

b(ks) ≤ Bok,ga/(2NRE), ∀k ∈ K. (41)

s∈Sko

Similar to problem (31), it can be shown that this problem is convex because its objective function is concave. By studying the KKT optimality conditions, we can obtain the optimal solution as follows:

b(ks) = max

0,

b|

∂ t (b) ∂b

=ν

,

(42)

where ν is a constant which must be set to satisfy s∈S b(ks) = Bok,ga/(2NRE). Then, we can obtain the feasible
vector b by applying the ﬂooring operation to b .
The remaining task is to determine the users’ rates that
satisfy constraints (17b) and (17c) which can be accom-
plished by applying the ‘‘Complexity Cut-Off’’ method [23]. Speciﬁcally, we start by setting each rk(s) to the highest value in the rate set R which is smaller than log2 1 + γk(s)(b(ks)) . Then, we iteratively reduce the rate variable that requires
the highest computation effort if the cloud computation con-
straint is violated (i.e., the required computation effort of OP o, Ctot(ro, bo), is greater than the assigned value Cgoa). This iterative process is performed until all cloud computation
constraints are satisﬁed.

2) RESOURCE-ALLOCATION-RELAXED GREEDY ALGORITHM
In this approach, we ease the difﬁculty of resource allocation for each operator by setting the equal rate and quantization bits for all users of each operator in each cell, i.e., rk(s) = rko and b(ks) = bok = Bok /2NRE|Sko| if s ∈ Sko. Then, the total CE required by the cloud to successfully decode the signals for all users from OP o in cell k can be given as Cko(rko, bok ) = NRE s∈Sko χk(s) rko, bok . Considering the constraints (17c) and (17e) of the lower level problem, we can rewrite the bi-level problem for given values of rko’s into a
18683

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

Algorithm 4 Resource-Allocation-Relaxed Greedy

Algorithm

1: Choose rko as the largest value in R so that r ≤ mins∈Sko log2 1 + γ¯k(s) , ∀ (o, k).
2: repeat

3: Solve problem (43).

4: if Solution of (43) is infeasible then

5:

Choose rko (rko > Rmin) corresponding to the highest

value of s∈Sko χ (rko, bk(s)) and reduce its value to

the lower one in R.

6: end if

7: until Solution of (43) is feasible.

one-level problem as follows.

max
{bok }

NRE
o∈

υoρo |Sko|rko + υInP − υo
k ∈K





×

2βko|Sko|bok +

ψ oχk(s) rko, bok 

k ∈K

s∈Sko

s. t. NRE

χk(s) rko, bok ≤ C¯ cloud,

(o,k) s∈Sko

(43a) (43b)

2NRE|Sko|bok ≤ B¯ k , ∀k ∈ K,

(43c)

o∈

rko ≤ log2 1 + γk(s)(bok ) , ∀ (o, k, s) ∈ × K × Sko,

bok ≥ b(ks) , ∀ (o, k, s) ∈ × K × Sko.

(43d) (43e)

Thanks to Theorem 1, one can see that the problem (43) is convex if υInP ≤ υo. Hence, this relaxed one-level problem
can be solved easily to obtain the network slices for all OPs when rko’s are given. When υInP > υo, the problem (43) aims to maximizing a convex function which can be solved
by linearising the objective function as shown in Frank-Wolfe
Algorithm [29]. Based on these interesting results, we devise
a heuristic approach to solve (12) which is summarized in Algorithm 4. Speciﬁcally, we will search the values of rko’s from high to low to indicate the good ones for which the
problem (43) is feasible.

B. COMPLEXITY ANALYSIS In this section, we investigate the complexities of our proposed solution approach, e.g., Algorithms 2 integrating with Algorithms 1 and two rounding methods, and two greedy algorithms.
1) COMPLEXITY OF OUR PROPOSED ALGORITHMS a: COMPLEXITY OF ALGORITHM 1 As can be observed, Algorithms 1 applies the ‘‘alternative direction method’’ whose convergence rate is 1/m where m is the number of iterations [30]. Additionally, based on the Propositions 4 and 5, the complexity of each iteration of Algorithms 1 mainly depends on that due to ‘‘water ﬁlling’’
18684

process to calculate b(ks), i.e., O(|Sko| log(|Sko|)) [31] where |A| stands for the cardinal number of set A. Hence, the complex-
ity of Algorithms 1 can be estimated as

XRLL = O(S log(S)F−fa1(ζR−L1L)),

(44)

where F−fa1(.) is the inverse function of factorial function and ζRLL is the solution accuracy of Algorithm 1.

b: COMPLEXITY OF ALGORITHM 2 It is observed that Algorithms 2 includes employing Algorithms 1 several time to determine the the sub-gradient values. In addition, Algorithm 2 employs the Sub-Gradient Descent method [32]. Hence, the complexity of Algorithm 2 can thus be expressed as

XRUL = 2 O(K + 1)XRLL × O(ζR−U2L),

(45)

where ζRUL is the solution accuracy of Algorithm 2.

c: COMPLEXITY OF IR METHOD For IR method, each OP performs the one-by-one rounding process and iteratively runs Algorithm 2 until convergence. Therefore, the complexity of IR method can be estimated as following.

XIR =

(2So + XRLL) ,

(46)

o∈ s∈Sko k∈K

where So = k∈K |Sko|.

d: COMPLEXITY OF RA METHOD For RA process, each OP rounds all its corresponding rk(s)’s and b(ks)’s in the ﬁrst phase and then one-by-one rounds down the variable affecting the violated constraint the most. Thus,
the complexity of RA method can be calculated as

XRA

=

2KS

+

2R

B 2NRE

K

2S

2XC,

(47)

where XC is the complexity of calculating Ck(s) for speciﬁc values of rk(s) and b(ks).

2) COMPLEXITY OF GREEDY ALGORITHMS
a: COMPLEXITY OF ALGORITHM 3
As can be observed, Algorithms 3 employs the‘‘water ﬁlling’’ process to solve the problem (41) and to calculate b(ks)’s after fully slicing the network resource of InP to all OPs. Then, it step-by-step reduces the value of rk(s) to the next smaller one set R until the computation constraint is satisﬁed. Therefore,
the complexity of this algorithm can be determined as follows

XSl−Rlxed = O(KS log(KS)) + RK 2S2XC.

(48)

b: COMPLEXITY OF ALGORITHM 4 In order to analyse the complexity of this algorithm, we ﬁrst consider how to duel with the problem (43). According to [33], this problem can be solved by employing the duality method. Speciﬁcally, the problem is solved by iteratively

VOLUME 5, 2017

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN TABLE 1. Simulation Parameters.
FIGURE 1. Simulation model.

FIGURE 2. Variations of sum rates over iterations.

solving the dual problem and updating Lagrange multiplier.
Obtained by moving the constraint (43a) into the objective
function, the dual problem is then similar to the problem (33).
Hence, the complexity of solving the dual problem in each
iteration is O(KS log(KS)) [31]. Based on the result in [33] the number of iterations is O(ζ4−2) where ζ4 is the solution accuracy of Algorithm 4.
In addition, Algorithm 4 is proposed in the way that the (43) is solved again whenever the value of rko’s adjusted as in Step 4-6. Therefore, the complexity of this algorithm can be
estimated as follows

XRa−Rlxed = ROK O(KS log(KS)ζ4−2).

(49)

VI. NUMERICAL RESULTS

We consider the 7-cell network for performance evaluation

where the distance between the centers of any two nearest

RRHs is 400 m as shown in Fig. 1. In each cell, we ran-

domly place users so that the distance from the cell center

to every user is d (m) (i.e., all users have the same distance

to their corresponding RRHs in this simulation setting). The

channel gains are generated by considering both Rayleigh

fading and path-loss. The path-loss is modeled as Ljk,u =

36.8log10(djk,u)

+

43.8

+

20log10(

fc 5

)

where

djk,u

denotes

the

distance from user u in cell j to RRH k and fc = 2.5GHz. This

path-loss model is chosen according to the general form of

the path-loss formula (4.23) in [34], which is recommended

by the WINNER II channel modeling project. We set the noise power σ 2 = 10−13 W and the power pk(s) = 0.1 W .

VOLUME 5, 2017

FIGURE 3. Sum rate vs number of PRBs (S).
Moreover, we set T = 0.2, ζ = 6 and ch = 10% for the computation complexity model. The rate set R is chosen corresponding to 27 distinct MCSs with turbo coding as in the LTE standard [35]. In fact, the data rate corresponding to each MCS can be calculated as TBS × 103/NRE where the transport block size (TBS) for each MCS can be determined as in [35, Table 7.1.7.2.1] with NPRB = 1. Key simulation parameters are summarized in Table 1.
We assume that there are three OPs (O = 3) to obtain results in all simulations. Except for the results in Fig. 3 and 9, the numbers of PRBs assigned for these three OPs are set equal to 5, 10, 15 in each cell, which means S = 30. In each simulation, we allocate the PRBs to the users in each cell randomly so that the assigned number of PRBs for each OP is satisﬁed. In all simulations, we set the same fronthaul capacity limit for different cells. To obtain the results in Figs. 2-4, we set υInP = υo for all o ∈ .
We illustrate the convergence of our proposed algorithms in Fig. 2 where the variations of system sum rate and the rates of individual OPs over iterations by using Algorithm 1 and Algorithm 2 to solve the relaxed problem are shown. Note that the iterations in this ﬁgure correspond to the outer loop of these algorithms. To obtain results in this ﬁgure, B¯ k is set equal to 120 Mbps for each cell k ∈ K and C¯ cloud = 90 Mbips. As can be seen, the system sum rate increases over the ﬁrst 25 iterations before settling down at the maximum value. The third OP, who is assigned the largest number of PRBs, achieves low sum rate at the beginning then reaches the higher rate at convergence compared to the rates
18685

TABLE 2. Summary of Key Notations.

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

of other OPs. This is because OP 3 is assigned more network resources than those for OPs 1 and 2.
In Fig. 3, we show the system sum rate obtained by different schemes, namely our proposed algorithms without rounding (Relaxed Prop. Alg.), with IR-rounding and RA-rounding methods (Prop. Alg. with IR and Prop. Alg. with RA), and two greedy algorithms, i.e., Slicing-Relaxed Algorithm (Sl-Rlxed Greedy Alg.) and Resource-Allocation-Relaxed Algorithm (Ra-Rlxed Greedy Alg.), versus the number of

PRBs in each cell. To obtain these results, we sequentially add one more PRB to each OP in each cell to obtain different points on each curve. The Relaxed Prop. Alg. gives the upper-bound of the system sum rate of any resource allocation algorithm. The fact that the sum rates achieved by the Prop. Alg. with IR and Prop. Alg. with RA are very close to that achieved by the Relaxed Prop. Alg. conﬁrms the efﬁciency of our proposed two-stage algorithms. Moreover, our proposed algorithms outperform the greedy algorithms in

18686

VOLUME 5, 2017

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

FIGURE 4. Sum rate vs distance from RRHs to their users.

FIGURE 5. Sum rate vs C¯cloud and B¯ k .

all studied scenarios and the Sl-Rlxed Greedy Alg. achieves higher total sum rate than the Ra-Rlxed Greedy Alg. does. In addition, the proposed algorithm with IR rounding results in slightly better sum rate than the RA rounding based counterpart. Interestingly, the system sum rate increases and then decreases as number of PRBs in each cell increases. This is because we focus on keeping the quality of the quantized signal so that every user can achieve at least Rmin rate on its assigned PRB. This also means that limited computation and fronthaul capacity resources can indeed hurt the system performance if the bandwidth provisioning is not properly provisioned.
Fig. 4 shows the variations of the system sum rate due to the Prop. Alg. with IR and Greedy Alg. versus the user-RRH distance d under two different parameter settings, namely C¯ cloud = 150 Mbips and B¯ k = 200 Mbps and C¯ cloud = 90 Mbips and B¯ k = 120 Mbps. We also present the upper bound of the system sum rate, which is obtained by using the SINR upper bound γ¯k(s) by setting the quantization noise on all PRB s and cell k to zero. This rate upper bound is equal to
∀ (k,s) log2(1 + γ¯k(s)) and it is denoted as ‘‘Shannon Limit’’ in this ﬁgure. For smaller d, the received signal becomes stronger in combating the multi-cell interference leading to higher link SINR γ¯k(s), which explains the higher sum rate for smaller d. It can also be observed that the achieved system sum rate tends to the rate upper bound (i.e., the ‘‘Shannon Limit’’) as the cloud computation and fronthaul capacity limits increase. Moreover, the Prop. Alg. with IR outperforms the greedy algorithms in all studied scenarios, which conﬁrms the excellent performance of our proposed design.
To illustrate the impacts of limited network resources, we show the system sum rate upper-bound, which is the outcome of Algorithm 2, versus the computation limit (C¯ cloud) and fronthaul capacity from the cloud to each cell B¯ k in Fig. 5. We can see that the higher cloud computation limit and larger fronthaul capacity result in the greater sum rate as expected. In addition, the sum rate becomes saturated as the cloud computation limit or fronthaul capacity become sufﬁciently large. These results imply that the proposed design framework can be employed for provisioning the cloud computation limit or fronthaul capacity and for analyzing the
VOLUME 5, 2017

FIGURE 6. OPs’ revenue/cost/profit vs service price ρo for users where υ1 = υ2 = υ3 = 1.
FIGURE 7. OPs’ profits vs weighting parameter υ2 for υ1 = υ3 = 1.
provisioned network resources and performance tradeoffs. This ﬁgure also illustrates the infeasible region of the bi-level problem where this infeasible region can be deﬁned by the boundaries with C¯ cloud less than around 30 Mbips and B¯ k less than around 50 Mbps.
In Fig. 6 and 7, we study the proﬁts achieved by the OPs by setting υInP = 0. By setting υo = 1 for all o ∈ , the upperlevel problem becomes the proﬁt maximization problem for all OPs whose results are illustrated in Fig. 6. In this ﬁgure, the OPs’ cost (payment from all OPs to the InP), the OPs’ revenue (payment of all users to the OPs), and OPs’ proﬁt (revenue minus cost) obtained by different schemes, Prop. Alg. with IR, Sl-Rlxed Greedy Alg. and Ra-Rlxed Greedy
18687

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

FIGURE 8. Satisfaction indexes of InP and OPs. (a) Tradeoff between satisfaction indexes of InP and OPs. (b) Satisfaction indexes of InP and OPs versus υop.
Alg., are shown versus ρo while ψo and βko = βo, ∀k are set equal to one for all o ∈ . As can be seen, the OPs can attain higher proﬁt as the price per data rate unit ρo increases. This is because the OPs’ cost tends to saturate at sufﬁciently high ρo while the revenue scales linearly with the service price. Once again, the performance of our proposed design is demonstrated when the Prop. Alg. with IR gains higher profits in comparison to the greedy algorithms at all values of ρo. Interestingly, the Slicing-Relaxed Algorithm always utilize the total fronthaul capacity and computation resource fully where the corresponding total cost of all OPs are unchanged. Hence, we can see in this simulation, our proposed algorithm and Ra-Rlxed Greedy Alg. require more network resource when ρo increase, but they do not utilize the total network resource fully.
In Fig. 7, we study the impact of the weighting parameters on the OPs’ proﬁts. Speciﬁcally, we ﬁx two weighting parameters as υ1 = υ3 = 1 while varying the value of υ2 to obtain the curves in this ﬁgure. As expected, the proﬁt of OP 2 increases while those of remaining OPs decrease with increasing υ2. In addition, the total proﬁt of all OPs is also presented and this ﬁgure indicates that the maximum proﬁt can be achieved when υ1 = υ2 = υ3 = 1.
We now study a satisfaction index for InP and OPs which is deﬁned as the ratio between the achieved proﬁt and the maximum potential proﬁt in Fig. 8 where ρo is set equal to 5 (¢/Mbps) and ψo and βo are set equal to 1 (¢/Mbips and ¢/Mbps) for all OPs. Note that the maximum InP’s proﬁt can be calculated as ψoC¯ cloud + βo k∈K B¯ k (¢) while the maximum proﬁt of all OPs can be obtained by the same method employed to obtain results in Fig. 6. Fig. 8a illustrates the trade-off between the satisfaction indices of the InP and all OPs for υInP = 1 and υ1 = υ2 = υ3 = υop as we vary the
18688

FIGURE 9. Running time vs number of PRBs (S).
value of υop while Fig. 8b shows these satisfaction indexes versus υop. As can be observed, when the satisfactory index of InP equals to one, the OPs utilize all network resources. It happens when υop ≤ 1 which leads to the minimum OPs’ satisfaction. Inversely, when the index corresponding to InP is less than one, i.e. υop > 1, the total fronthaul capacity and computational resources are not fully used and OPs’ satisfaction index increases. The presented tradeoff results indicate that one can determine an operating point of the twolevel design framework where both the InP and OPs ﬁnd it satisfactory.
We study the complexities of the proposed algorithms where we show their average running times versus the number of PRBs in Fig. 9. These running time values are obtained by averaging over 1000 runs. It can be seen that the proposed algorithms, Prop. Alg. with IR and Prop. Alg. with RA, require much longer running time in comparison with the two greedy algorithms, Sl-Rlxed Greedy Alg. and Ra-Rlxed Greedy Alg.. Moreover, the Prop. Alg. with IR has the longest running time while the Ra-Rlxed Greedy Alg. has the shortest one. In addition, the required running time increases as the number of PRBs in each cell increases as expected.

VII. CONCLUSION We have proposed a novel algorithmic framework for uplink wireless virtualization of the C-RAN supporting multiple OPs via joint rate and quantization bit allocation for users served by each OP. This design aims to maximize the weighted sum proﬁts of the InP and OPs considering practical constraints on the fronthaul capacity and cloud computation limits. Numerical results have illustrated that our proposed algorithms outperform the greedy resource allocation algorithms and achieve the sum rate very close to the sum rate upper-bound obtained by solving relaxed problems. We have also studied the impacts of various parameters on the system sum-rate and relevant performance tradeoffs.

APPENDIX A PROOF OF PROPOSITION 1 If b(ks) is selected so that q(ks)(b(ks)) ≤

Yk(s)Ik(s), we have

γk(s)(b(ks))

=

Ik(s)

D(ks) + q(ks)(b(ks))

≥

Ik(s)

D(ks)

.

+ Yk(s)Ik(s)

(50)

VOLUME 5, 2017

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

Substituting Yk(s) = D(ks) + Ik(s) into this equality, we attain

γk(s)(b(ks)) ≥

1+

D(ks)/Ik(s) D(ks)/Ik(s) + 1

=

γ¯k(s) =
γ¯k(s) + 1 + 1

γ¯k(s)

+

1

−

1

=

γ

(s).
k

(51)

In addition, it can be veriﬁed that

• When γ¯k(s)

1, we have γ¯k(s) + 1

γ¯k(s)

1.

Thus, we have γ (s)
k

γ¯k(s).

• When γ¯k(s)

1, we have γ¯k(s) + 1 1 + γ¯k(s)/2.

Hence, it can be implied that γ (s)
k

γ¯k(s)/2.

This concludes the proof for Proposition 1.

APPENDIX B

PROOF OF THEOREM 1 To prove that χk(s)(r, b) is a convex function with respect to variables (r, b), we will show that the Hessian matrix of χk(s)(r, b) is positive deﬁnite. For simplicity, we omit the superscripts and subscripts in all notations, i.e., χ(r, b), D, I and Y stand for χk(s)(r, b), Dk(s), Ik(s) and Yk(s), respectively. First, we derive the Hessian matrix of χ(r, b). Let H = [H11H12, H21H22] be the Hessian matrix of χ (r, b), its elements can be written as

H11

=

∂2χ (r, b) ∂r2

=

(ln

2Ar 2) (Z −

r

)2

,

(52)

H12

=

∂2χ (r, b) ∂r∂b

=

√ 2 3π ADYr − (ln 2)22bX (X + D)(Z

− r)2 ,

(53)

H21

=

∂2χ (r, b) ∂ b∂ r

=

√ 2 3π ADYr − (ln 2)22bX (X + D)(Z

− r)2 ,

(54)

∂2χ (r, b)

6π 2AD2Y 2r

H22 = ∂b2 = (ln 2)24bX 2(X + D)2(Z − r)2

√ 2 3π ADYr

22b+1X (X

√ +D)− 3π Y

(2X

+

D)

+

24bX 2(X + D)2(Z − r)

,

(55)

√

where X

=

I+

3π Y 22 b+1

and Z

=

log2

√

1+

D

√

I

+

22

3π Y b+1

. Let

q= √
3π

3π Y 22 b+1

,

then

we have X

=

Y = 22 b+1q. Substituting

I + q, X + D = these results into

Y+ (55)

q, and yields

6π 2AD2Y 2r

H22 = (ln 2)24bX 2(X + D)2(Z − r)2

√ 4 3π ADYr

IY − q2

+ 22bX 2(X

+

D)2(Z

−

. r)

(56)

Then, if IY ≥ q2, we will have H11, H22 > 0, and

det |H| = H11H22 − H12H21

√ 8 3π

A2

DYr

2

IY − q2

= ln(2)22bX 2(X + D)2(Z − r)3 ≥ 0. (57)

VOLUME 5, 2017

Hence, the Hessian matrix of χ (r, b) is positive deﬁnite.
Thus, we can conclude that χ(r, b) is jointly convex with respect to (r, b) if IY ≥ q2.

APPENDIX C
PROOF OF THEOREM 2
We will prove this theorem by using the deﬁnition of a
concave function, i.e., f (φx1 + (1 − φ)x2) ≥ φf (x1) + (1 − φ)f (x2) for all 0 ≤ φ ≤ 1. Let us consider two possible values of the involved variables, (C1o, Bo1) and (C2o, Bo2). We assume that there exists the optimum solutions for the lower-level
problems (17) corresponding to these two values of variables.
Moreover, the optimal sum rates for these cases are denoted as R¯ (C1o, Bo1) and R¯ (C2o, Bo2), respectively with {rk(s,)1, b(ks,)1} and {rk(s,)2, b(ks,)2} being the optimal rates and number of quantization bits, respectively. Then, {rk(s,)i, b(ks,)i} must satisfy all the constraints of (17) corresponding to (Cio, Boi ) for i = 1 or 2. For any value of φ such that 0 ≤ φ ≤ 1, we deﬁne {rk(s,)3, b(ks,)3} as

rk(s,)3 = φrk(s,)1 + (1 − φ)rk(s,)2, ∀ (k, s) ∈ K × Sko, (58) b(ks,)3 = φb(ks,)1 + (1 − φ)b(ks,)2, ∀ (k, s) ∈ K × Sko. (59)

Since all constraint functions of problem (17) are convex, it is

easy to see that {rk(s,)3, b(ks,)3} satisfy all the constraints of (17)

corresponding to C3o, Bo3 , where C3o = φC1o + (1 − φ)C2o

and Bo3 feasible

= φBo1 solution

+ (1 − φ)Bo2. of problem (17)

Therefore, {rk(s,)3, corresponding to

b((kCs,)33o},

is a Bo3).

Consequently, we have

R¯ (C3o, Bo3) ≥

rk(s,)3

k∈K s∈Sko

=

φrk(s,)1 + (1 − φ)rk(s,)2

k∈K s∈Sko

= φR¯ (C1o, Bo1) + (1 − φ)R¯ (C2o, Bo2), (60)

for any value of φ such that 0 ≤ φ ≤ 1. Hence, R¯ (Co, Bo) must be a concave function with respect to (Co, Bo) and we

have completed the proof for Theorem 2.

APPENDIX D
PROOF OF PROPOSITION 4
It can be veriﬁed that the second derivative of the objective function of (31) is the same as that of w(rk(s)) which can be expressed as

∂ 2 w(rk(s) )

2λArk(s) + 4λA t(b(ks)) − rk(s)

∂rk(s)2 = −

(ln 2) t(b(ks)) − rk(s) 2

,

(61)

which is less than zero if t(b(ks)) ≥ rk(s). Hence, this function is concave. Therefore, the optimum rate rk(s) can be obtained by studying the KKT conditions. Taking the ﬁrst derivative
of the objective function and setting it to zero results in

∂ w(r ) ∂r

=

−Ek(s).

(62)

18689

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

Using the constraint (31b), the optimal solution to problem (31) can be written as

rk(s)

= max

Rmin, min

t

(bk(s)

),

Rmax

,

r

|

∂

w(r ) ∂r

=−Ek(s)

. (63)

Therefore, we have completed the proof of Proposition 4.

APPENDIX E PROOF OF PROPOSITION 5 The Lagrangian of problem (33) can be expressed as





L bok , µ =

z b(ks) − µ  bk(s) − Bok /(2NRE) ,

s∈Sko

s∈Sko

(64)

where µ is the Lagrangian multiplier associated with the fronthaul capacity constraint of problem (33). In addition, the dual function of problem (33) can be written as

g(µ) = max L
bok

bok , µ

s. t. bk(s) ≥ Jk(s), ∀s ∈ Sko, (65)

where Jk(s) = max b(ks) , t−1 rk(s) . This problem can be decoupled into S parallel sub-problems each of which corre-

sponds to one PRB. In addition, all these sub-problems have

the same structure. Since its objective function is concave,

each sub-problem can be solved by using the KKT condition ∂L bok , µ /∂b(ks) = 0, which is equivalent to

∂z(bk(s))/∂bk(s) = µ.

(66)

Using the constraint (33b), the optimal solution of bk(s) must satisfy (34). In addition, the objective function is an increas-
ing function with respect to bok ; hence, the fronthaul capacity constraint (33c) must be met with equality. Therefore, µ can be determined to satisfy s∈Sko bk(s) = Bk /(2NRE). Therefore, we have completed the proof of Proposition 5.

REFERENCES
[1] ‘‘Cisco visual networking index: Global mobile data trafﬁc forecast update, 2016–2021,’’ Cisco, White Paper, Feb. 2017.
[2] P. Cerwall et al. ‘‘Ericsson mobility report,’’ Ericsson, Stockholm, Sweden, Tech. Rep., Jun. 2017.
[3] China Mobile Research Institute, ‘‘C-RAN: The road towards green ran,’’ China Mobile, White Paper, 2011.
[4] A. Checko et al., ‘‘Cloud RAN for mobile networks—A technology overview,’’ IEEE Commun. Surveys Tuts., vol. 17, no. 1, pp. 405–426, 1st Quart., 2015.
[5] D. Wubben et al., ‘‘Beneﬁts and impact of cloud computing on 5G signal processing: Flexible centralization through cloud-RAN,’’ IEEE Signal Process. Mag., vol. 31, no. 6, pp. 35–44, Nov. 2014.
[6] V. Suryaprakash, P. Rost, and G. Fettweis, ‘‘Are heterogeneous cloudbased radio access networks cost effective?’’ IEEE J. Sel. Areas Commun., vol. 33, no. 10, pp. 2239–2251, Oct. 2015.
[7] X. Costa-Perez, J. Swetina, T. Guo, R. Mahindra, and S. Rangarajan, ‘‘Radio access network virtualization for future mobile carrier networks,’’ IEEE Commun. Mag., vol. 51, no. 7, pp. 27–35, Jul. 2013.
[8] C. Liang and F. R. Yu, ‘‘Wireless network virtualization: A survey, some research issues and challenges,’’ IEEE Commun. Surveys Tuts., vol. 17, no. 1, pp. 358–380, 1st Quart., 2015.
[9] M. Peng, C. Wang, V. Lau, and H. V. Poor, ‘‘Fronthaul-constrained cloud radio access networks: Insights and challenges,’’ IEEE Wireless Commun., vol. 22, no. 2, pp. 152–160, Apr. 2015.

18690

[10] P. Luoto, P. Pirinen, M. Bennis, S. Samarakoon, S. Scott, and M. Latva-Aho, ‘‘Co-primary multi-operator resource sharing for small cell networks,’’ IEEE Trans. Wireless Commun., vol. 14, no. 6, pp. 3120–3130, Jun. 2015.
[11] R. Kokku, R. Mahindra, H. Zhang, and S. Rangarajan, ‘‘NVS: A substrate for virtualizing wireless resources in cellular networks,’’ IEEE/ACM Trans. Netw., vol. 20, no. 5, pp. 1333–1346, Oct. 2012.
[12] M. I. Kamel, L. B. Le, and A. Girard, ‘‘LTE wireless network virtualization: Dynamic slicing via ﬂexible scheduling,’’ in Proc. IEEE VTC Fall, Sep. 2014, pp. 1–5.
[13] X. Wang et al., ‘‘Energy-efﬁcient virtual base station formation in opticalaccess-enabled cloud-RAN,’’ IEEE J. Sel. Areas Commun., vol. 34, no. 5, pp. 1130–1139, May 2016.
[14] S. Luo, R. Zhang, and T. J. Lim, ‘‘Downlink and uplink energy minimization through user association and beamforming in C-RAN,’’ IEEE Trans. Wireless Commun., vol. 14, no. 1, pp. 494–508, Jan. 2015.
[15] Y. Shi, J. Zhang, and K. B. Letaief, ‘‘Group sparse beamforming for green cloud-RAN,’’ IEEE Trans. Wireless Commun., vol. 13, no. 5, pp. 2809–2823, May 2014.
[16] V. N. Ha, L. B. Le, and N.-D. Ðào, ‘‘Coordinated multipoint transmission design for cloud-RANs with limited fronthaul capacity constraints,’’ IEEE Trans. Veh. Technol., vol. 65, no. 9, pp. 7432–7447, Sep. 2015.
[17] S.-H. Park, O. Simeone, O. Sahin, and S. Shamai (Shitz), ‘‘Robust layered transmission and compression for distributed uplink reception in cloud radio access networks,’’ IEEE Trans. Veh. Technol., vol. 63, no. 1, pp. 204–216, Jan. 2014.
[18] L. Liu, S. Bi, and R. Zhang, ‘‘Joint power control and fronthaul rate allocation for throughput maximization in OFDMA-based cloud radio access network,’’ IEEE Trans. Commun., vol. 63, no. 11, pp. 4097–4110, Nov. 2015.
[19] X. Rao and V. K. N. Lau, ‘‘Distributed fronthaul compression and joint signal recovery in cloud-RAN,’’ IEEE Trans. Signal Process., vol. 63, no. 4, pp. 1056–1065, Feb. 2015.
[20] T. Werthmann, H. Grob-Lipski, and M. Proebster, ‘‘Multiplexing gains achieved in pools of baseband computation units in 4G cellular networks,’’ in Proc. IEEE 24th Int. Symp. Pers. Indoor Mobile Radio Commun. (PIMRC), Sep. 2013, pp. 3328–3333.
[21] D. Sabella et al., ‘‘Energy efﬁciency beneﬁts of RAN-as-a-service concept for a cloud-based 5G mobile network infrastructure,’’ IEEE Access, vol. 2, pp. 1586–1597, 2014.
[22] P. Rost, S. Talarico, and M. C. Valenti, ‘‘The complexity–rate tradeoff of centralized radio access networks,’’ IEEE Trans. Wireless Commun., vol. 14, no. 11, pp. 6164–6176, Nov. 2015.
[23] P. Rost, A. Maeder, M. C. Valenti, and S. Talarico, ‘‘Computationally aware sum-rate optimal scheduling for centralized radio access networks,’’ in Proc. IEEE GLOBECOM Dec. 2015, pp. 1–6.
[24] V. N. Ha and L. B. Le, ‘‘Resource allocation for uplink OFDMA C-RANs with limited computation and fronthaul capacity,’’ in Proc. IEEE ICC, May 2016, pp. 1–6.
[25] V. N. Ha, L. B. Le, and N.-D. Ðào, ‘‘Cooperative transmission in cloud RAN considering fronthaul capacity and cloud processing constraints,’’ in Proc. IEEE WCNC, Apr. 2014, pp. 1862–1867.
[26] J. Bucklew and N. Gallagher, ‘‘Two-dimensional quantization of bivariate circularly symmetric densities,’’ IEEE Trans. Inf. Theory, vol. IT-25, no. 6, pp. 667–671, Nov. 1979.
[27] P. Baracca, S. Tomasin, and N. Benvenuto, ‘‘Backhaul rate allocation in uplink SC-FDMA systems with multicell processing,’’ IEEE Trans. Wireless Commun., vol. 13, no. 3, pp. 1264–1273, Mar. 2014.
[28] D. Bertsekas, Nonlinear Programming. Belmont, MA, USA: Athena Scientiﬁc, 1999.
[29] M. Frank and P. Wolfe, ‘‘An algorithm for quadratic programming,’’ Naval Res. Logist. Quar., vol. 3, nos. 1–2, pp. 95–110, 1956.
[30] S. Boyd, N. Parikh, E. Chu, B. Peleato, and J. Eckstein, ‘‘Distributed optimization and statistical learning via the alternating direction method of multipliers,’’ Found. Trends Mach. Learn., vol. 3, no. 1, pp. 1–122, Jan. 2011.
[31] W. Yu and J. M. Ciofﬁ, ‘‘Constant-power waterﬁlling: Performance bound and low-complexity implementation,’’ IEEE Trans. Commun., vol. 54, no. 1, pp. 23–28, Jan. 2006.
[32] S. Boyd and L. Vandenberghe, Convex Optimization. Cambridge, U.K.: Cambridge Univ. Press, 2004.
[33] I. Necoara and A. Patrascu, ‘‘Iteration complexity analysis of dual ﬁrstorder methods for conic convex programming,’’ Optim. Methods Softw., vol. 31, no. 3, pp. 645–678, Mar. 2016.
VOLUME 5, 2017

V. N. Ha, L. B. Le: End-to-End Network Slicing in Virtualized OFDMA-Based C-RAN

[34] P. Kyosti et al. (Sep. 2007). WINNER II Channel Models: European Commission, Deliverable IST-WINNER D1.1.2 Ver 1.2. [Online]. Available: http://projects.celticinitiative.org/winner+/WINNER2-Deliverables/
[35] LTE; Evolved Universal Terrestrial Radio Access (E-UTRA); Physical Channels and Modulation document (3GPP TS 36.211 version 12.7.0 release 12), 3GPP Oct. 2015.
VU NGUYEN HA (S’11–M’17) received the B.Eng. degree from the French training program for excellent engineers in Vietnam, Ho Chi Minh City University of Technology, Vietnam, and an addendum degree from de École Nationale Supérieure des Télécommunications de Bretagne-Groupe des École des Télécommunications, Bretagne, France, in 2007, and the Ph.D. degree from the Institut National de la Recherche Scientiﬁque-Énergie, Matériaux et Télécommunications, Université du Québec, Montréal, QC, Canada, in 2017. From 2008 to 2011, he was a Research Assistant with the School of Electrical Engineering, University of Ulsan, Ulsan, South Korea. He is currently a Post-Doctoral Fellow with École Polytechnique de Montréal, Montréal. His research interests include radio resource management and emerging enabling technologies for 5G wireless systems with special emphasis on heterogeneous small-cell networks, cloud RAN, and MIMO communications.

LONG BAO LE (S’04–M’07–SM’12) received the B.Eng. degree in electrical engineering from the Ho Chi Minh City University of Technology, Vietnam, in 1999, the M.Eng. degree in telecommunications from the Asian Institute of Technology, Thailand, in 2002, and the Ph.D. degree in electrical engineering from the University of Manitoba, Canada, in 2007. He was a Post-Doctoral Researcher with the Massachusetts Institute of Technology from 2008 to 2010 and the University of Waterloo from 2007 to 2008. Since 2010, he has been with the Institut National de la Recherche Scientiﬁque, Université du Québec, Montréal, QC, Canada, where he is currently an Associate Professor. He is a coauthor of the books Radio Resource Management in Multi-Tier Cellular Wireless Networks (Wiley, 2013) and Radio Resource Management in Wireless Networks: An Engineering Approach (Cambridge University Press, 2017). His current research interests include 5G wireless technologies, radio resource management, cognitive radio, and smartgrids. He currently serves on the editorial boards of the IEEE TRANSACTIONS ON WIRELESS COMMUNICATIONS and the IEEE COMMUNICATIONS SURVEYS AND TUTORIALS. He was on the Editorial Board for the IEEE WIRELESS COMMUNICATIONS LETTERS from 2011 to 2016. He has served as technical program committee co-chair of the Medium Access Control track at the IEEE WCNC 2016, the Wireless Access track at the IEEE VTC 2014-Fall, the Wireless Networks track at the IEEE VTC 2011-Fall, and the Cognitive Radio and Spectrum Management track at the IEEE PIMRC 2011.

VOLUME 5, 2017

18691

