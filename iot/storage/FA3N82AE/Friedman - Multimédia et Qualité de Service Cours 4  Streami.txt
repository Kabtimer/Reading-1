à l’Université Pierre et Marie Curie, le 19 octobre 2004
M2 Informatique Réseaux
Multimédia et Qualité de Service
Cours 4 : Streaming et Signalisation
Timur FRIEDMAN
transparents adaptés de &RPSXWHU 1HWZRUNLQJ copyright 1996-2002 J.F. Kurose et K.W. Ross une partie des traductions grâce à Kavé SALAMATIAN
1

Plan
I Applications multimédia I Streaming d’audio et
vidéo stockés
I RTSP
I Exemple de l’interactive: téléphonie sur IP
I Applications en tempsréel
I SIP
2

Applications multimédia
I Les classes d’applications
I VWUHDPLQJ d’audio et vidéo stockés I VWUHDPLQJ d’audio et vidéo en direct I audio et vidéo interactives en temps réel
I VWUHDPLQJ = la lecture en transit
I Les caractéristiques
I sensible aux délais
I de bout en bout I la gigue
I résistant aux pertes
3

Streaming d’audio et vidéo stockés
I media est stocké à la source I transmis au client I streaming : le client commence la
lecture DYDQW la fin de la réception
I contrainte temporelle pour les données qui restent à transmettre :
I qu’elles arrivent à temps pour la lecture
4

Le streaming

Quantité de données

1. vidéo enregistrée

2. vidéo envoyée

GpODL UpVHDX

3. vidéo reçue, lecture par le client
temps

VWUHDPLQJ A cet instant, le client commence à afficher la vidéo alors
que le serveur continue de transmettre
le reste de la vidéo

5

L’intéractivité et les données stockées
I )RQFWLRQQDOLWp PDJQpWRVFRSH  le client peut arrêter, rembobiner, avancer I délai initial de 10 sec OK I 1-2 sec avant l’éxecution de la commande OK
6

Streaming d’audio et vidéo en direct
Exemples I radio par Internet I transmission des matches sportives Streaming I mémoire tampon pour la lecture I la lecture peut s’effectuer plusieurs dizaines de
secondes après la transmission I il y a toujours des contraintes temporelles Interactivité I avancer impossible I rembobiner, pause possible
7

Audio et vidéo interactives en temps réel
I applications : téléphonie sur IP, visioconférence, jeux interactifs, mondes virtuels
I délai de bout en bout requis :
I audio : < 150 ms bon, < 400 ms OK I vidéo : < 150 ms
I Le délai inclue le traitement par l’application :
I mise en paquets I compression
8

Plan
I Applications multimédia I Streaming d’audio et
vidéo stockés
I RTSP
I Exemple de l’interactive: téléphonie sur IP
I Applications en tempsréel
I SIP
9

Streaming d’audio et vidéo stockés

Techniques de streaming au niveau applicatif pour faire face à un Internet moindre effort :
I mise en mémoire tampon du côté client
I UDP et TCP mixtes
I plusieurs encodages possible pour le multimédia

Lect eur Média
I suppression de la gigue I décompression I dissimulation d’erreurs I interface graphique
avec contrôles pour l’interactivité

10

L’approche la plus simple
I audio et vidéo enregistré dans des fichiers I les fichiers sont transmis en tant qu’objets
HTTP I d’abord reçus complètement chez le client I transfert au lecteur après
audio et vidéo ne sont pas lise en transit : I pas de pipeline, délai de réception important
avant l’affichage
11

Une approche streaming
I le navigateur reçoit un PHWDILFKLHU par GET I le navigateur exécute le lecteur « plug-in » et lui passe le
metafichier I le lecteur contacte le serveur I le serveur envois le flot audio/vidéo au lecteur en streaming
12

Une approche avec un serveur streaming
I Cet architecture permet l’utilisation d’un protocole non-HTTP entre le serveur le lecteur multimédia.
I Permet l’utilisation de UDP au lieu de TCP.
13

Mise en mémoire tampon du client

Quantité de données
vidéo en mémoire

vidéo CBR
GpODL YDULDEOH GX UpVHDX

réception au client

lecture CBR du vidéo au client

délai au client avant lecture

temps

I Compensation pour le délai du réseau, la gigue :
I mise en mémoire I délai avant la lecture au client
14

Détails de la mémoire

taux variable x(t)

taux constant
d

vidéo en mémoire
I La mémoire tampon compense la gigue du délai
15

Streaming du multimédia par UDP
I Le serveur émet avec un débit adéquat pour le client
I spécialement s’il ignore les problèmes de congestion I débit émetteur = taux d’encodage (CBR) I débit récepteur = CBR – pertes de paquets
I Délais de démarrage courts (2-5 seconds) pour compenser la gigue du délai
I Compensation de pertes : si la contrainte temporelle le permet
16

Streaming du multimédia par TCP
I Le serveur émet au débit maximal permis par TCP
I Le débit récepteur varie à cause du contrôle de congestion TCP
I Plus qu’on ajoute du délai au client, plus la lecture du vidéo devient lisse
I HTTP/TCP passent plus facilement à travers les parefeux
17

Clients hétérogènes
encodage à 1.5 Mb/s encodage à 28.8 Kb/s

Q : Comment gérer plusieurs clients avec des débits de réception hétérogènes ?

I 28.8 Kb/s connexion par modem

I 100Mb/s sur Ethernet

R : Le serveur garde et transmet de multiples

copies de la vidéo encodé, avec des débits

différents

18

RTSP « Real Time Streaming Protocol »

HTTP

Limites de RTSP :

I Pas ciblé vers le multimédia I pas de définition du

I Pas de commandes pour

codage audio/vidéo

avancer, rembobiner, etc. I pas de définition de la

couche transport : le media

RTSP : RFC 2326
I Protocole client-serveur au niveau applicatif.
I Fonctionnalités fournies au client: avancer, rembobiner, pause, repositionnement,

peut être transporté par UDP ou par TCP
I pas de définition de la manière dont le client doit faire la mise en mémoire tampon d’audio ou vidéo

etc.…

19

RTSP: un contrôle hors bande

Comme avec FTP :
I Dans FTP, un fichier est transmis sur une connexion TCP.
I La signalisation de contrôle (changement de répertoire, effacement de fichier, renommément de fichier, etc.) est transmise sur une connexion TCP indépendante.
I Les canaux hors-bande et intrabande utilisent des numéros de ports différents.

RTSP :
I Le flux multimédia est l’intrabande
I Les messages de contrôle RTSP utilisent un numéro de port hors-bande réservé.
I Port 554

20

RTSP : un exemple
Scénario:
I un metafichier est transmis au navigateur I le navigateur exécute le lecteur I le lecteur construit :
I une connexion de contrôle RTSP I une connexion pour les données multimédia
21

Metafichier : exemple
<title>Twister</title> <session>
<group language=en lipsync> <switch> <track type=audio e="PCMU/8000/1" src = "rtsp://audio.example.com/twister/audio.en/lofi"> <track type=audio e="DVI4/16000/2" pt="90 DVI4/8000/1" src="rtsp://audio.example.com/twister/audio.en/hifi"> </switch>
<track type="video/jpeg" src="rtsp://video.example.com/twister/video">
</group> </session>
22

Fonctionnement du RTSP
23

RTSP : exemple d’un échange client-serveur
C: SETUP rtsp://audio.example.com/twister/audio RTSP/1.0 Transport: rtp/udp; compression; port=3056; mode=PLAY
S: RTSP/1.0 200 1 OK Session 4231
C: PLAY rtsp://audio.example.com/twister/audio.en/lofi RTSP/1.0 Session: 4231 Range: npt=0-
C: PAUSE rtsp://audio.example.com/twister/audio.en/lofi RTSP/1.0 Session: 4231 Range: npt=37
C: TEARDOWN rtsp://audio.example.com/twister/audio.en/lofi RTSP/1.0 Session: 4231
S: 200 3 OK
24

Plan
I Applications multimédia I Streaming d’audio et
vidéo stockés
I RTSP
I Exemple de l’interactive: téléphonie sur IP
I Applications en tempsréel
I SIP
25

Applications interactives en temps réel

I téléphonie PC à PC
I fourni par les services de messagerie instantanée
I PC à téléphone
I Dialpad
I Net2phone
I visioconférence avec Webcam

Examinons l’exemple de téléphonie PC à PC
26

Multimédia interactif : téléphonie sur IP
Notre exemple : I La voix alterne des périodes de son et de silence.
I 64 kb/s pendant une période de son
I Des paquets ne sont générés que durant des périodes de son
I échantillons de 20 msec à 8 Kbytes/sec: 160 bytes par trame
I Entête applicative ajouté à chaque trame. I Trame+entête sont encapsulés dans des segments UDP. I L’application envoi des segments UDP par le biais des
sockets chaque 20 msec pendant une période de son.
27

Multimédia interactif : les pertes et les délais
I pertes de paquets : Les paquets IP peuvent être perdu par cause de congestion (débordement des files d’attente)
I délai important : Un paquet IP peut être considéré comme perdu s’il arrive trop tard au récepteur
I délais dus au traitement, files d’attente, terminaux (récepteur, émetteur)
I délai maximal tolérable : 400 ms audio, vidéo
I tolérance aux pertes : dépend du type de compression, de la compensation, de l’existence de FEC.
I taux de pertes entre 1% et 10% peuvent être toléré
28

Gigue de délai

Quantité de données
données en mémoire

transmission CBR
GpODL GX UpVHDX YDULDEOH
JLJXH

réception au client

lecteur CBR au client

Idélai au client avant lecture

temps

I La différence entre les délais de deux paquets consécutives peut être plus ou moins que 20 msec

29

Tampons de réception fixe
I Le récepteur diffuse chaque paquet exactement q msecs après que la trame a été généré. I Si la trame a une estampille à l’instant t : il est diffusé à l’instant t+q . I Si la trame arrive après t+q : la trame est considérée perdue
I Balance pour q: I grand q: moins de pertes I petit q: meilleur interactivité
30

Délai de diffusion fixe
• L’émetteur génère un paquet toutes les 20 msec durant la période de son. • Le premier paquet est reçu à l’instant r • Un programme de diffusion : commencer à p • Deuxième programme de diffusion: commencer à p’
packets

SDFNHWV JHQHUDWHG

loss
SDFNHWV UHFHLYHG

SOD\RXW VFKHGXOH S
  U
SOD\RXW VFKHGXOH SU

r

p

p’

time 31

Tampon adaptatif
I Buts :
I minimiser le délai de diffusion I maintien un taux de pertes bas
I Stratégie : adapter le délai de diffusion
I Estimer le délai réseau, régler le délai de diffusion au début de chaque période de son.
I Les périodes de silence sont compressées et élongées. I Les trames sont toujours diffusés chaque 20 msec pendant les
périodes de son.
32

Tampon adaptatif : calcul
t i = timestamp of the ith packet ri = the time packet i is received by receiver pi = the time packet i is played at receiver ri − t i = network delay for ith packet d i = estimate of average network delay after receiving ith packet
Estimation dynamique du délai moyen au récepteur :
GL = (1 − X)GL−1 + X(UL − WL )
X est constant (e.g., X = .01).
33

Tampon adaptatif : calcul bis
L’écart type, YL , peut aussi être estimé :
YL = (1 − X)YL−1 + X | UL − WL − GL |
GL et YL sont calculés pour chaque paquet, mais sont appliqués au début d’une période de parole. Pour le premier paquet d’une période de parole l’instant de diffusion est :
SL = WL + GL + .YL
pour K un constant positif. Les autres paquets de cette même période de parole, sont diffusés dans une manière périodique.
34

Tampon adaptatif
Q : Comment le récepteur détermine que le paquet est le premier d’une période de parole ?
I Sans pertes, le récepteur scrute les estampilles successive.
I Si la différence entre deux estampilles successive > 20
msec --> début de période de parole. I Avec des pertes, il faut faire attention au numéros
de séquence aussi.
I différence entre deux estampilles > 20 msec et numéros de séquence successive --> début de période.
I Voir RTP/RTCP
35

Résistance contre les pertes (1)

« forward error correction » I Le délai de diffusion est (FEC) : procédure simple le temps de recevoir

I pour chaque groupe de n toutes les n+1 trames

trames, on crée une trame redondante
I XOR sur les n trames
I on envoi n+1 trames

I Echange :
I n plus grand
I moins on gaspille la bande passante

I le débit augmente par 1/n

I plus de délai de

I on peut reconstruire les n

diffusion

trames originales si on reçoit n des n+1 trames

I plus grande la probabilité de perdre 2 trames sur n+1

36

Résistance contre les pertes (2)
2ème procédure FEC superposition d’un flux de qualité inférieur • par exemple, flux PCM à 64 kb/s et flux redondant GSM à 13 kbps.
• Le récepteur peut cacher toute perte non-consecutive.
37

Résistance contre les pertes (3)

3ème procédure : entrelacement
I les trames sont découpées en unités plus petits
I par exemple, 4 unités de 5 msec par trame
I chaque paquet contient des petits unités de plusieurs trames

I si un paquet est perdu, on reçoit toujours le plupart de chaque trame
I pas de surdébit de redondance
I le délai de diffusion augmente

38

Bilan sur le multimédia interactif
I on utilise UDP
I éviter les délais induits par contrôle de congestion TCP
I le récepteur adapte son délai de diffusion
I compensation pour les délais aléatoires
I le serveur gère le débit du flux en fonction de la bande passante disponible sur le chemin client-serveur
I choix parmi des encodages à différents débits I la choix peut être dynamique
I compensation pour les pertes
I FEC, entrelacement I des retransmissions, si le temps permis I cacher des erreurs: redondances des flux
39

Plan
I Applications multimédia I Streaming d’audio et
vidéo stockés
I RTSP
I Exemple de l’interactive: téléphonie sur IP
I Applications en tempsréel
I SIP
40

SIP
I Session Initiation Protocol (RFC 3263)
La philosophie de SIP I Tous les appels téléphoniques et tous les
visioconférences vont avoir lieu dans l’Internet. I On identifie les participants par nom ou par mél, non
par numéro de téléphone. I On peut toujours joindre son correspondant
I n’importe où il se trouve I n’importe lequel adresse IP il utilise.
41

Les services SIP

I Etablissement de connexion
I Signalisation au correspondant qu’on veut l’appeler
I Signalisation pour se mettre d’accord sur les medias et l’encodage
I Signalisation pour la terminaison d’un appel.

I Recherche de l’adresse IP du correspondant
I Mappage entre l’identifiant mnémonique et l’adresse IP actuelle
I Gestion de l’appel
I Ajout de nouveaux flux de media en cours d’appel
I Changement d’encodage en cours d’appel
I Invitations aux autres I Transfert d’appel, mise en
garde
42

Exemple : établissement d’appel

Alice

Bob

167.180.112.24

193.64.210.89

mcIN==IVaNIuTIdPEio4b31o86b07@6.10189R03.T.16P14/2A.2.2V14P0.089

port 5060 Bob’s terminal rings

port 5060

200 OK c=IN IP4
m=audio

193.64.210.89 48753 RTP/AVP

3

ACK

port 5060

port 38060

µ Law audio

GSM

port 48753

time

time

• Alice invite Bob à communiquer (port 5060)
• son message SIP invite contient son numéro de port et son adresse IP • il indique que Alice préfère de recevoir l’encodage PCM ulaw • Le message 200 OK de Bob indique • son adresse IP et numéro de port pour la communication • sa préférence pour l’encodage GSM • Les messages SIP peuvent être TCP or UDP; ici RTP/UDP.
43

Etablissement d’appel bis

I Négociation de l’encodage:
I Supposons que Bob ne dispose pas de l’encodeur PCM ulaw.
I Bob répond par 606 Not Acceptable Reply. Il fourni la liste des encodeurs dont il peut s’en servir.
I Alice peut ensuite envoyer un nouveau message INVITE, proposant un encodeur adapté.

I Rejet d’appel
I Bob peut rejeter des appels avec les réponses replies « occupé », « absent », « crédit insuffisant », ou « interdit ».

44

Exemple d’un message SIP

INVITE sip:bob@domain.com SIP/2.0 Via: SIP/2.0/UDP 167.180.112.24 From: sip:alice@hereway.com To: sip:bob@domain.com Call-ID: a2e3a@pigeon.hereway.com Content-Type: application/sdp Content-Length: 885
c=IN IP4 167.180.112.24 m=audio 38060 RTP/AVP 0
A noter: I syntaxe HTTP I sdp = session description protocol I unicité d’identifiants Call-ID

• Dans ce cas, Alice ne connaît pas l’adresse IP de Bob. •Des serveurs intermediares sont nécessaires.
•Alice envoi et reçoit des messages SIP sur le numéro de port par défaut 5060.
• Alice indique dans l’entête Via que son client SIP envoi et reçoit par UDP.
45

Annuaire et localisation

I Comment appeler si on

I L’information fourni peut

connaît seulement le nom ou varier selon :

l’adresse mél ?

I l’horaire (travail, maison)

I Comment connaître l’adresse IP actuel du correspondant ?
I le correspondant se déplace I il utilise le protocole DHCP I il a plusieurs appareils IP (PC,
PDA, voiture)

I celui qui appel (éviter qu’un appel professionnel est diriger vers le foyer)
I l’état du correspondant (quand il est occupé, on dirige les appels vers le répondeur)

Les serveurs SIP :

I SIP registrar

I SIP proxy

46

SIP Registrar
I Quand Bob allume son client SIP, le client envoi un message SIP REGISTER message au Registrar Server (comme dans la messagerie instantanée)
message REGISTER :
REGISTER sip:domain.com SIP/2.0 Via: SIP/2.0/UDP 193.64.210.89 From: sip:bob@domain.com To: sip:bob@domain.com Expires: 3600
47

SIP Proxy
I Alice envoi un message INVITE à son serveur proxy
I il contient l’adresse sip:bob@domain.com
I Le proxy est responsable for l’acheminement des messages SIP vers le correspondant
I les messages peuvent passer par plusieurs serveurs proxy
I Le correspondant envoi sa réponse via le même ensemble de serveurs proxy.
I Le proxy fourni la réponse SIP à Alice
I la réponse contient l’adresse IP de Bob
I A noter : un proxy se ressemble à un serveur DNS
48

Appel de jim@umass.edu vers keith@upenn.edu

Exemple

6,3 UHJLVWUDU XSHQQHGX

(1) Jim envoi un message INVITE au SIP proxy de umass. (2) Le proxy renvoi le message vers le SIP registrar de upenn. (3) Le registrar de upenn répond avec un message REDIRECT, indiquant qu’il faut contacter keith@eurecom.fr

6,3 SUR[\ XPDVVHGX
1 8
6,3 FOLHQW 

2 3 4 7
9

6,3 UHJLVWUDU HXUHFRPIU
5 6
6,3 FOLHQW 

(4) Le proxy umass envoi un INVITE au registrar eurecom. (5) Le registrar eurecom renvoi le message INVITE à 197.87.54.21, sur lequel tourne le client SIP de keith. (6-8) réponse SIP (9) media envoyé directement entre les clients.

$ QRWHU il y a aussi des acquittements SIP (pas montrés).
49

Comparaison avec H.323

I H.323 est un autre protocole de signalisation pour l’interactive en temps réel
I H.323 est un ensemble monolithique de protocoles pour le visioconférence : signalisation, enregistrement, contrôle d’admission, transport, et encodage.
I SIP est un composant modulaire. Il est compatible avec RTP. Il peut fonctionner avec d’autres protocoles et services aussi.

I H.323 a été développé à l’UIT (téléphonie).
I SIP a été développé à l’IETF: Il est inspiré par HTTP.
I SIP est plus simple (et alors plus efficace ?)
50

