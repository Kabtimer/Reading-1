This article has been accepted for publication in the Proceedings of the 2016 IEEE International Conference on Communications (ICC).
PLEASE, CITE THE PAPER AS FOLLOWS:
Plain text: M. Polese, M. Centenaro, A. Zanella, and M. Zorzi, M2M Massive Access in LTE: RACH Performance Evaluation in a Smart City Scenario, 2016 IEEE International Conference on Communications (ICC), Kuala Lumpur, 2016, pp. 1-6.
BibTex: @INPROCEEDINGS{7511430, author={M. Polese and M. Centenaro and A. Zanella and M. Zorzi}, booktitle={2016 IEEE International Conference on Communications (ICC)}, title={M2M massive access in LTE: RACH performance evaluation in a Smart City scenario}, year={2016}, pages={1-6}, keywords={Long Term Evolution;multi-access systems;public domain software; smart cities;Internet of Things;LTE Random Access Channel; LTE cellular standard;LTE module;LTE random access procedure; Long Term Evolution cellular standard;M2M massive access;RACH; Smart City scenario;mobile terminals;open-source network simulators; system-level simulators;Delays;Indexes;Internet of things; Long Term Evolution;Signal to noise ratio;Smart cities;Uplink}, doi={10.1109/ICC.2016.7511430}, month={May},}

arXiv:1601.05098v4 [cs.NI] 5 Oct 2016

This paper was accepted for presentation at the IEEE ICC 2016 conference, May 23 - 27, 2016, Kuala Lumpur, Malaysia.
M2M Massive Access in LTE: RACH Performance Evaluation in a Smart City Scenario
Michele Polese, Marco Centenaro, Andrea Zanella, and Michele Zorzi Department of Information Engineering, University of Padova – Via Gradenigo, 6/b, 35131 Padova, Italy
Email: {polesemi,marco.centenaro,zanella,zorzi}@dei.unipd.it

Abstract—Several studies assert that the random access procedure of the Long Term Evolution (LTE) cellular standard may not be effective whenever a massive number of simultaneous connection attempts are performed by terminals, as may happen in a typical Internet of Things or Smart City scenario. Nevertheless, simulation studies in real deployment scenarios are missing because many system-level simulators do not implement the LTE random access procedure in detail. In this paper, we propose a patch for the LTE module of ns–3, one of the most prominent open-source network simulators, to improve the accuracy of the routine that simulates the LTE Random Access Channel (RACH). The patched version of the random access procedure is compared with the default one and the issues arising from massive simultaneous access from mobile terminals in LTE are assessed via a simulation campaign.
I. INTRODUCTION
A huge increase in fully automated communications between devices is forecasted in the next few years as new use cases, e.g., connected cars, e-health, environmental monitoring, are being identiﬁed. This new paradigm is called Machine-toMachine (M2M) communication, since it is typically performed without any human intervention, and is considered a fundamental enabler of the Internet of Things (IoT) vision.
A desirable requirement for the deployment of Machine-Type Devices (MTDs) is the place & play concept [1], i.e., MTDs should just need to be deployed in a certain area to be ready to operate. Indeed, the expected number of devices (40 MTDs per household according to [2]) makes a manual conﬁguration infeasible. For this reason, the cellular network infrastructure is suitable to provide connectivity for M2M communications, since it can provision (ideally) worldwide, ubiquitous coverage, in contrast to many ad hoc proprietary technologies. However, deploying such a huge number of devices in current cellular networks, e.g., the Long Term Evolution (LTE), poses new issues that need to be addressed. In particular, an important problem is the overload of the LTE Random Access (RA) procedure under a massive number of simultaneous connection attempts, since the LTE standard has been designed to provide high-rate access to a fairly limited number of terminals.
In this paper, we aim at evaluating the delay that a device may undergo while accessing an LTE network in the case of a massive number of access requests in a real deployment. In particular, we address a Smart City scenario using one of the most accurate open-source system-level network simulators, i.e., network simulator 3 (ns–3, [3]). We found that the current implementation of the RA procedure in ns–3 is idealized; therefore, we developed a patch to make the routine suitable

to study the impact of M2M trafﬁc in LTE networks in urban scenarios. Simulation results show that if a few hundred smart sensors simultaneously require network access, e.g., to report some kind of failure event, an MTD would experience extremely long delays to complete the access procedure, thus not respecting the delay constraints of important Smart City applications, such as alarms.
The remainder of the paper is organized as follows. In Sec. II, the random access procedure in LTE is described and issues related to massive access are brieﬂy explained. In Sec. III the implementation of LTE Random Access Channel (RACH) in ns–3 is discussed and its weaknesses are highlighted; then, a patch to the default routine is proposed to enhance the accuracy of the simulator. In Sec. IV the patched routine is compared with the default one and is used to evaluate the impact of a massive number of simultaneous access attempts in a realistic Smart Cities scenario. Finally, conclusions are drawn in Sec. V.
II. THE RANDOM ACCESS PROCEDURE IN LTE
The RA procedure in LTE is initiated when (i) a User Equipment (UE) is in the RRC_CONNECTED state1 and has new data to transmit or receive but no uplink synchronization; (ii) it recovers after radio link failure; (iii) it switches from RRC_IDLE to RRC_CONNECTED, or, ﬁnally, (iv) it performs a handover. The procedure takes place in a dedicated physical channel called Physical Random Access Channel (PRACH) [6], which is multiplexed in time and frequency with the Physical Uplink Shared Channel (PUSCH). The PRACH consists of 6 Resource Blocks (RBs) for an overall bandwidth of 1.08 MHz and has a duration between 1 and 4 subframes. Its periodicity is variable and is deﬁned by the PRACH Conﬁguration Index, which is broadcast by the base station (eNodeB, eNB) on the System Information Broadcast 2 (SIB2) along with the following signaling information:
• numContentionPreambles, i.e., the number of preambles reserved for contention-based RA (at most 64);
• preambleInitialReceivedTargetPower, i.e., the target power (in dBm) to be reached at the eNB for transmissions on PRACH;
• powerRampingStep, i.e., the power ramping step used to increase the transmission power after every failed attempt;
• preambleTransMax, i.e., the maximum number of preamble transmission attempts.
1A UE is in the RRC_CONNECTED state when a Radio Resource Control (RRC) connection has been established; if this is not the case, the UE is in the RRC_IDLE state [4, Sec. 4.2.1].

2

AWGN (0 Hz)

−14.2 dB

−14.2 dB

−16.4 dB

−16.5 d

ETU70 (270 Hz)

−8 dB

−7.8 dB

−10.0 dB

−10.1 d

4

AWGN (0 Hz)

−16.9 dB

−16.7 dB

−19.0 dB

−18.8 d

ETU70 (270 Hz)

−12.1 dB

−11.7 dB

−14.1 dB

−13.9 d

We recall that the preamble is a signature composed of a cyclic preﬁx and a Zadoff-Chu (ZC) sequence that is obtained by shifting a root sequence, which is common to all the UEs connected to a certain eNB. Preambles containing different sequences are orthogonal to one another.2 There are 4 different preamble formats, with duration from 1 to 4 subframes, in order to guarantee coverage of different cell sizes.
The RA procedure consists of 4 messages as follows. a) Preamble Transmission: The UE selects a random ZC
sequence and transmits a preamble on one of the resources speciﬁed by the PRACH Conﬁguration Index. The eNB will detect the sequence by applying a correlator and a peak detector to the received signal [6]. However, since the number of ZC sequences is ﬁnite, it may happen that more than one UE select the same sequence, thus incurring in a collision. If the colliding UE preambles are received with high enough Signalto-Noise Ratio (SNR), and are sufﬁciently spaced apart in time, two energy peaks separated by a time that is longer than the Maximum Delay Spread (MDS) are detected and the eNB will interpret this event as due to a collision. On the other hand, if only one of the colliding preambles is received with high SNR, or the delay of the different preambles is similar,3 the eNB will not be able to recognize the collision.
We remark that MDS and the preamble detection algorithm are not standardized but left to the eNB vendor. However, the 3GPP report [11] requires a missed detection probability lower than 10−2 for an SNR value of −14.2 dB and a 2-antenna receiver in AWGN channel.
b) Random Access Response (RAR): The eNB answers to correctly decoded preambles (including those with undetected collision) by sending a RAR message on the Downlink Shared Channel (DLSCH). RAR carries the detected preamble index, which corresponds to the sequence sent by the UE, a timing alignment to synchronize the UE to the eNB, a temporary identiﬁer (RNTI), and an uplink scheduling grant that speciﬁes the resources assigned to the UE to transmit in the next phase of the RA procedure. If a UE receives a RAR, then it proceeds with the third step; otherwise, it restarts the RA procedure anew (unless it has reached the maximum number of preamble transmission attempts) after a backoff time that is uniformly distributed in the interval [0,BI], where BI is the Backoff Indicator carried by the RAR. If the counter of consecutive unsuccessful preamble transmissions exceeds the maximum number of attempts, a RA problem is indicated to the upper layers.
c) Connection Request: The UE transmits a Radio Resource Control (RRC) message containing its core-network terminal identiﬁer in the uplink grant resources and starts a Contention Resolution timer. Note that the UEs that transmitted the same preamble but whose collision remained undetected will transmit on the same resources, colliding again.
d) Contention Resolution: If the eNB correctly receives the RRC message, it replies with an RRC Connection Setup that signals to the UE that the RA phase is successfully completed. Instead, if the Contention Resolution timer expires, the UE
2For eNBs with a large coverage area there may be more than one root sequence. However the sequences obtained have low cross-correlation [5].
3This is typical in Small Cells scenarios [6].

Figure

1:

P vs SNR Γ, taken Fig. 8. MDP vs SNR. 2 antennas, AWGN.
miss

from

[14].

repeats the RA procedure from the beginning after a random backoff time. Again, when the number of unsuccessful attempts reaches some speciﬁed maximum value, the network is declared unavailable by the UE and an access problem exception is raised to the upper layers.
A. Massive Random Access
The LTE RA process is efﬁcient when a small number of devices require access to the network, which is the typical case for Human-to-HFigu. 9m. MaDPnvs (H2H) trafﬁc. SNR. 4 antennas, AWGN. However, the number of terminals is envisioned to grow exponentially in IoT scenarios, especially for what concerns Smart Cities where smart meters will be deployed to monitor a large variety of parameters, from air pollution to supply levels. In the case of extraordinary events, e.g., power outages, many MTDs may be activated simultaneously, thus causing a PRACH overload. The consequences are that the constraints of delay-sensitive M2M applications can be violated, the power consumption of the sensors is increased, and the Quality of Service (QoS) of H2H applications can be degraded.
In this paper we aim at evaluating how this massive eventtriggered reporting may Fig. 10. impact MDP vs SNR. 2 tahnteennaLs,TETEU70.network performance in a Smart City scenario using a well-known open-source network simulation tool, i.e., ns–3, written in C++, which is particularly suitable to simulate an urban propagation environment. Other open-source simulation platforms are available, e.g., the LTE Vienna Simulator [9], which is based on Matlab, and Omnet++ [8] and LTE-sim [7], both written in C++. However, they cannot be directly used for our purposes. In fact, the Vienna Simulator is a link level simulator for the uplink, and therefore lacks some of the necessary features to adequately model a network of MTDs, whereas Omnet++ and LTE-sim focus on the higher networking layers through an idealized abstraction of the lower layers, and therefore do not capture the level of detail we need to model the RACH performance.
III. LTE RACH IN NS–3
In this section the LTE RACH implementation in ns–3 is addressed and an enhancement to evaluate IoT trafﬁc is proposed.
We refer to version 3.23 of the ns–3 simulator, which uses the LTE-EPC Network simulAtor (LENA) [10] module to simulate the LTE protocol stack and the Evolved Packet Core (EPC) network. In the current implementation of LENA, however, the RACH preamble is an ideal message, i.e., not

Parameter
Downlink carrier frequency Uplink carrier frequency RB bandwidth Available bandwidth Hexagonal sectors eNBs for each sector
eNBs beamwidth (main lobe) TX power used by eNBs
Max TX power used by MTDs eNB noise ﬁgure MTD noise ﬁgure Shadowing
Number of buildings Apartments for each ﬂoor Floors for each building
MTD speed Number of MTDs N Simulation time ∀N

Value
945 MHz 900 MHz 180 kHz
50 RB 1
3 (co-located) 65◦
43 dBm 23 dBm
3 dB 5 dB log-normal with σ = 8
96 6 3 0 Km/h {50, 100, 150, 200, 300, 400, 500, 600} {60, 60, 120, 120, 300, 300, 400, 400} s

Table I: Simulation parameters [2].

Y [m]

250
200
150
100
50
0 0 50 100 150 200 250 300 350 400 X [m]
Figure 2: Smart City network deployment example. The rectangles are the buildings, the small triangles are the MTDs, and the black square is the position of the three co-located eNBs.

Parameters
PRACH Conﬁguration Index Backoff Indicator BI
preambleInitialReceivedTargetPower powerRampingStep
numContentionPreambles preambleTransMax
Contention resolution timer

Value
1 0 ms −110 dBm 2 dB
54 ∞ 32 ms

Table II: Simulation parameters of LTE RACH.

subject to radio propagation; moreover, Connection Request and Connection Resolution messages are not modeled and, therefore, all collisions are detected and solved at the ﬁrst step of the RA procedure. Furthermore, we found that it is not possible to simulate the connection and disconnection of UEs during runtime, since LENA allows every UE to switch only once from RRC_IDLE to RRC_CONNECTED states at the beginning of the simulation. Therefore, we implemented a more realistic RA procedure, along with the possibility to disconnect UEs from the eNB (i.e., switching from RRC_IDLE to RRC_CONNECTED and vice versa). The enhanced module is called LENA+. 4 However, to maintain the backward compatibility with the current release, an option has been introduced to use the idealized LENA RA procedure if desired. In the following, we describe in detail the features of LENA+ that were not present in LENA.
A. PRACH Characterization
PRACH is implemented as a real physical channel, relying on the already developed and tested channel model. Nonetheless, PRACH preambles are now subject to noise and radio propagation, since they are sent on speciﬁc time and frequency physical resources, and therefore the eNB can fail their detection. We remark that only format 0 of PRACH preambles is implemented. Whenever a UE starts the RA procedure, it checks whether it has received SIB2, which carries the RACH conﬁguration. Then, it chooses a random index drawn uniformly in [0, numContentionPreambles - 1]
4The source code is available at https://github.com/ signetlabdei/lena-plus.

and transmits it in the next PRACH opportunity. Note that we are assuming that, in a PRACH-dedicated subframe, no PUSCH trafﬁc is allocated by the scheduler, while the PRACH is allocated in the ﬁrst 6 RBs available. The power (in dBm) for the transmission is computed according to the standard as [12]

Pprach = min{PUE,max,

(1)

PREAMBLE_RECEIVED_TARGET_POWER + Plc}

where PUE,max is the maximum transmit power for a UE, Plc is the estimated pathloss and PREAMBLE_RECEIVED_TARGET_POWER is given by the MAC layer, as [13]

PREAMBLE_RECEIVED_TARGET_POWER = preambleInitialReceivedTargetPower (2) + ∆preamble + (PREAMBLE_TX_COUNTER − 1) × powerRampingStep

where PREAMBLE_TX_COUNTER is the number of consecutive preamble transmissions and ∆preamble = 0 for format 0. The other parameters are given by the eNB with SIB2, as explained in Sec. II. At the eNB side, the SNR is computed for each preamble and a decision on correct or missed detection is made. In [14] different eNB detection algorithms are introduced and evaluated in terms of missed detection probability vs SNR at the receiver. The missed detection probability performance of these algorithms is reported in Fig. 1. Note that our improved PRACH model for ns–3 assumes a time domain detector with decimation (denoted with LT in the legend), which is the simplest algorithm which satisﬁes the 3GPP requirements in [14], as can be seen from Fig. 1. The ns–3 LTE module has also been modiﬁed, in order to handle the reception of multiple signals in the same time and frequency resources. Indeed, the default implementation raises an exception whenever two or more signals are received in the same time and frequency resources by the eNB, since the MAC scheduler forbids multiple transmissions in physical channels other than PRACH. In PRACH, indeed, transmissions cannot be scheduled and the ZC sequences allow multiple access by Code Division Multiple

1

1

1

0.8

0.8

0.8

0.6

0.6

0.6

ECDF

ECDF

ECDF

0.4

0.4

0.4

0.2

0 10−2

100 Delay [s]

(a) N = 100

LENA LENA+
102

0.2

0 10−2

100 Delay [s]

(b) N = 200

LENA LENA+
102

0.2

0 10−2

100 Delay [s]

(c) N = 300

LENA LENA+
102

1 LENA

0.8

LENA+

1 LENA

0.8

LENA+

1 LENA

0.8

LENA+

0.6

0.6

0.6

ECDF

ECDF

ECDF

0.4

0.4

0.4

0.2

0.2

0.2

0 10−2

100

102

Delay [s]

0 10−2

100

102

Delay [s]

0 10−2

100

102

Delay [s]

(d) N = 400

(e) N = 500

(f) N = 600

Figure 3: ECDFs of access delay for N ∈ {100, 200, 300, 400, 500, 600}. The x-axis is expressed in logarithmic scale.

Access (CDMA). If a preamble is correctly received but there

are two or more preambles with the same ZC sequence, then the

collision is detected or not according to the following heuristic.

Since the PDP of different users is not simulated in a system-

level simulator such as ns–3, as a rule of thumb a collision is

detected if

dmax − dmin c

> Tchip ,

(3)

where dmax and dmin are the distances from the eNB of the farthest and closest colliding UE, respectively, c is the speed of light, Tchip = 1/(2B), and B = 1.08 MHz is the bandwidth of PRACH.
RAR message transmission was already implemented as a message on the DLSCH. For each not-collided preamble or undetected collision, an uplink grant is allocated by the scheduler and added to the RAR response; the Backoff indicator has also been added.
Connection Request transmission on granted resources was already implemented, as well. However, since in the default implementation of RACH all the collisions are resolved at the ﬁrst step, collisions of messages 3 were not handled and the simulator raised an exception. This exception has been handled as follows. Firstly, no capture effect has been considered. Then, if two or more Connection Request messages collide, they are considered as received with errors, triggering an HARQ (layer 2) retransmission until the maximum number of attempts is reached; after that, the RA procedure starts again. The Contention Resolution timer, that was also not present in

LENA, has been added as well.
IV. PERFORMANCE EVALUATION
In this section the proposed enhanced version of the LENA module is evaluated and compared with the current release. Moreover, we will use our module to evaluate the impact of massive simultaneous accesses to an LTE network in a Smart City scenario.
The scenario we simulated is compliant with the speciﬁcations in [2]; the main simulation parameters are in Table I, while the RACH-related parameters can be found in Table II. We refer to an urban environment with a high density of tall buildings; the deployment of buildings and MTDs is depicted in Fig. 2. For what concerns the radio propagation model, we employed the ns–3 Hybrid Buildings Propagation Loss Model, which exploits different propagation models to account for several factors, such as the positions of the UE and the eNB (both indoor, both outdoor, one indoor and the other outdoor), the external wall penetration loss of different types of buildings (i.e., concrete with windows, concrete without windows, stone blocks, wood), and the internal wall penetration loss. We remark that all the MTDs have been placed inside the buildings and their positions are not changed during the simulation according to the speciﬁcations found in [2].
Let us denote with N the number of MTDs that are trying to simultaneously access the LTE network. For every value of N ∈ {50, 100, 150, 200, 300, 400, 500, 600}, 10 Monte Carlo simulations have been run and the Empirical Cumulative Dis-

ECDF Successful RACH Attempts

1

0.8 50

100

0.6

150

200

0.4

300

400

0.2

500

600

0

10−2

10−1

100

101

102

Delay [s]

Figure 4: ECDF for various values of N . The x-axis is expressed in logarithmic scale.

N Mean µ [s] Std. Dev. σ [s] µ/σ

50

0.235

100

0.498

150

0.780

200

1.481

300

5.268

400 21.400

500 64.234

600 77.423

1.855 2.608 2.605 4.453 5.359 15.126 52.852 59.256

0.127 0.191 0.300 0.333 0.983 1.415 1.215 1.307

Table III: Statistics of the access delay experienced by the MTDs that succeeded in completing the access procedure.

tribution Functions (ECDFs) of the access delays have been produced. Fig. 3 shows the ECDFs of the delay (in logarithmic scale) for the various values of N , obtained using both the default LENA module and the LENA+ module. We remark that, for what concerns the LENA+ performance curves, the average ECDF is represented by the solid line and we plotted the ECDFs of the individual Monte Carlo simulations with dashed lines to show the dispersion around the average value. It can be seen that the idealized RACH implemented in LENA gives quite unrealistic results, where all the MTDs would succeed in completing the RA procedure in less than 1 s for all values of N . The simulations that have been carried out using LENA+, instead, show that, as N grows, the access delay increases, up to hundreds of seconds for most MTDs, which is not acceptable for many delay-constrained Smart City applications, such as alarms. Moreover, using our module, we are able to observe that some UEs (approximately 5% of the total in each simulation) do not succeed in completing the RA procedure during the simulation, despite the unlimited number of transmission attempts allowed (i.e., preambleTransMax = ∞). This is due to their unfavorable position, e.g., inside buildings which are far away from the eNB. An overall comparison among the average ECDFs for all the values of N is provided in Fig. 4, which clearly shows that the access delay increases as N grows. As a further insight, we invite the reader to refer to Table III, which contains the average value and standard deviation of the delays of successful MTDs. The statistics conﬁrm the trend.
Finally, Fig. 5 represents the number of successful RACH attempts vs time for different values of N . Note that, as N increases, the maximum number of successful RACH attempts decreases, and is achieved later in time, as a consequence

50

40

100

150

200

300

20

400

500

600

0

0

2

4

6

8

10

Time [s]

Figure 5: Successful RACH attempts vs time.

of the higher number of collision events. For N > 300, we cannot observe any meaningful peak, denoting that the RACH is congested and the success probability is very low.
V. CONCLUSION
The implementation of a more realistic model of the LTE RA procedure in the network simulator ns–3 has been proposed and evaluated in a Smart City scenario. An enhanced ns–3 LENA module, called LENA+, has been developed to overcome the limitations of the default routine, which is rather idealized. The simulation results show that the default release of the LENA module underestimates the impact of M2M trafﬁc in cellular networks and conﬁrms the concerns about LTE RACH overload in case of massive simultaneous access attempts. As part of our future work, we will enrich the LENA+ implementation, to test the effectiveness of some of the strategies proposed in [1] to relieve the RACH overload problem.
REFERENCES
[1] A. Biral, M. Centenaro, A. Zanella, L. Vangelista, and M. Zorzi, “The challenges of M2M massive access in wireless cellular networks,” Digital Communications and Networks, Vol. 1, Issue 1, pp. 1-19, Feb. 2015
[2] 3GPP, “Cellular System Support for Ultra Low Complexity and Low Throughput Internet of Things,” TR 45.820, V. 1.3.1, June 2015
[3] https://www.nsnam.org [4] 3GPP, “Radio Resource Control (RRC) – Protocol speciﬁcation,” TS
36.331, V. 12.6.0, June 2015 [5] M. Amirijoo, P. Frenger, F. Gunnarsson, J. Moe, K. Zetterberg, “On
self-optimization of the random access procedure in 3G Long Term Evolution,” in Proceedings of the IFIP/IEEE International Symposium on Integrated Network Management-Workshops, pp. 177-184, June 2009 [6] P. Bertrand and J. Jiang, “Random Access,” in S. Sesia, I. Touﬁk, and M. Baker (editors), “LTE – The UMTS Long Term Evolution: From Theory to Practice,” John Wiley & Sons, pp. 421-457, 2009 [7] G. Piro, L. A. Grieco, G. Boggia, F. Capozzi, and P. Camarda, “Simulating LTE Cellular Systems: An Open-Source Framework,” in IEEE Transactions on Vehicular Technology, Vol. 60, No. 2, pp. 498-513, Feb. 2011 [8] A. Virdis, G. Stea, and G. Nardini, “SimuLTE - A modular system-level simulator for LTE/LTE-A networks based on OMNeT++,” in Proceedings of the International Conference on Simulation and Modeling Methodologies, Technologies and Applications (SIMULTECH), pp. 59-70, Aug. 2014 [9] J. Blumenstein, J. Ikuno, J. Prokopec, and M. Rupp, “Simulating the long term evolution uplink physical layer,” in Proceedings ELMAR, pp. 141-144, Sept. 2011 [10] N. Baldo, M. Miozzo, M. Requena, J. Nin Guerrero, “An Open Source Product-Oriented LTE Network Simulator based on ns-3,” in Proceedings of the 14th ACM International Conference on Modeling, Analysis and Simulation of Wireless and Mobile Systems (MSWIM), pp. 293-298, Nov. 2011

[11] 3GPP, “Base Station (BS) radio transmission and reception,” TS 36.104, V. 13.0.0, July 2015
[12] 3GPP, “Physical layer procedures,” TS 36.213, V. 12.6.0, June 2015 [13] 3GPP, “Medium Access Control (MAC) protocol speciﬁcation,” TS
36.321, V. 12.6.0, June 2015 [14] F. J. López-Martínez, E. del Castillo-Sánchez, E. Martos-Naya, J. Tomás
Entrambasaguas, “Performance evaluation of preamble detectors for 3GPP-LTE physical random access channel,” in Digital Signal Processing, Vol. 22, Issue 3, pp. 526-534, May 2012

