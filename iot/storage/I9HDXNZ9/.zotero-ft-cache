This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
1
A survey on emerging SDN and NFV security mechanisms for IoT systems
Ivan Farris, Tarik Taleb, Yacine Khettab, and JaeSeung Song

Abstract—The explosive rise of Internet of Things (IoT) systems have notably increased the potential attack surfaces for cybercriminals. Accounting for the features and constraints of IoT devices, traditional security countermeasures can be ineﬃcient in dynamic IoT environments. In this vein, the advantages introduced by Software Deﬁned Networking (SDN) and Network Function Virtualization (NFV) have the potential to reshape the landscape of cybersecurity for IoT systems. To this aim, we provide a comprehensive analysis of security features introduced by NFV and SDN, describing the manifold strategies able to monitor, protect, and react to IoT security threats. We also present lessons learned in the adoption of SDN/NFV-based protection approaches in IoT environments, comparing them with conventional security countermeasures. Finally, we deeply discuss the open challenges related to emerging SDN- and NFV-based security mechanisms, aiming to provide promising directives to conduct future research in this fervent area.
Index Terms—Internet of Things, Security, SDN, NFV, Cloud, and Edge Computing.
I. Introduction
T HE advancement of the Internet of Things (IoT) paradigm can bring remarkable transformation in each domain of human life. A myriads of smart devices will make our environments smarter by enabling sensing and actuation capabilities, contextual awareness, and physical-virtual bridging. To achieve these goals, IoT devices are able to interconnect and to jointly provide services also assisted by back-end systems, for example, when processing the huge amount of data generated by sensing activities [1]. Devices can also take autonomous decisions by perceiving the surrounding context and provide real-time information to users, thus improving decision support systems. All these envisioned beneﬁts are boosting the adoption of IoT devices as key assets along the value service chain.
On the other hand, IoT systems can introduce new potential attack surfaces to be exploited by malicious cybercriminals. If not appropriately considered, IoT security threats can bring tremendous economical and reputation damages, thus undermining the widespread adoption of IoT. In industrial ecosystem, attacks against smart IoT appliances can cause interruption in production workﬂows and, even worse, compromise the
I. Farris and Y. Khettab are with the Department of Communications and Networking, School of Electrical Engineering, Aalto University, Finland (emails: ivan.farris@aalto.ﬁ, yacine.khettab@aalto.ﬁ).
T. Taleb is with the Department of Communications and Networking, School of Electrical Engineering, Aalto University, 02150 Espoo, Finland and with the Computer and Information Security Department, Sejong University, 143-747 (05006) Seoul, South Korea (e-mail: tarik.taleb@aalto.ﬁ).
J. Song is with the Computer and Information Security Department, Sejong University, 143-747 (05006) Seoul, South Korea (e-mail: jssong@sejong.ac.kr).

quality of products. IoT devices used in home and health-care environments carry on sensitive user information. Therefore, ﬂaws in data integrity and conﬁdentiality can cause critical information leakage. Furthermore, the multitude and heterogeneity of IoT, ranging from smart cars to resource-constrained devices (e.g., sensors and actuators), from industrial robots to personal smart-watches, magnify the complexity of managing the security mechanisms in a uniform way, especially for nonsavvy users. Accounting for the native connectivity capabilities of IoT devices, the misconﬁguration of defense systems for a single node represents the weakest link of the chain, thus introducing the risk to compromise the interconnected devices and the relevant service outcomes. The analysis of security for IoT systems requires a systematic and comprehensive approach accounting for the manifold attack surfaces.
The constraints and heterogeneity of IoT systems make classic solutions, such as static perimeter defenses and devicehost security mechanisms, unsuitable for extremely dynamic IoT environments, thus requiring novel network-based protection strategies to enforce security in a scalable and eﬀective way [2]. Indeed, notable eﬀorts have been addressed over the last years to design next-generation Internet architectures [3], embracing the concept of security and privacy by design. In this vein, network softwarization represents a breakthrough in Telco industries, by bringing several advantages in terms of ﬂexibility and manageability [4]. This transformation is leaded by Software Deﬁned Networking (SDN) and Network Function Virtualization (NFV) paradigms [5]. The former aims at increasing network programmability by leveraging the separation of control and data planes, whereas the latter boosts the development of virtualized network appliances to be executed on top of commodity servers [6]. Even in the context of network security, SDN and NFV are gaining high momentum, representing key enablers towards the ondemand provisioning of protection mechanisms, according to the SECurity-as-a-Service (SECaaS) model [7]. These novel SDN/NFV-based security mechanisms can better cope with IoT security threats, especially accounting for the increasing blurring between physical and virtual IoT ecosystems.
In this survey, we aim at presenting a detailed analysis of SDN/NFV-based security mechanisms to increase the protection of IoT systems, pointing out introduced advantages and potential application scenarios. To this aim, we ﬁrst provide a systematic study of security threats of IoT domains, especially highlighting the additional requirements introduced by IoT environments. The background analysis is completed by a brief description of main conventional security approaches for IoT security, focusing on authentication, encryption, access

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
2

control, and detection solutions. Then, we provide an extensive analysis of security mechanisms provided by SDN and NFV, including a detailed background behind these promising network paradigms and current integration eﬀorts into IoT systems. Our survey represents the ﬁrst work in the literature to systematically investigate the joint usage of SDN- and NFVbased security mechanisms in the complex and heterogeneous landscape of IoT systems. To this aim, the main security features are identiﬁed, presenting a comprehensive overview of SDN/NFV-based security solutions and relevant application scenarios at diﬀerent levels, such as in cloud, core, and access IoT networks. This analysis includes comparison with conventional security solutions, allowing to highlight the advantages as well as the complementarity in manifold IoT environments, and to derive the lessons learned so far. Since our literature review shows that the research in this area is still incipient, we believe that another key contribution of this survey is represented by a detailed discussion on future research directions towards the broad deployment of SDN/NFV-based security solutions. To this aim, we have identiﬁed the following open challenges: deﬁnition of security IoT policies, orchestration over heterogeneous IoT domains, inherent security of SDN and NFV systems augmented by IoT devices, optimal selection and deployment of SDN/NFV-based security mechanisms, and security granularity for IoT network slicing. We believe that this survey can provide extensive guidelines for new researchers who would like to explore this fervent area.
A. Comparison with surveys on IoT security
In the literature, diﬀerent surveys have broadly analyzed IoT systems, also addressing relevant security challenges. In [1], the main technology enablers of IoT systems are described, also identifying open security and privacy aspects. The authors of [8] provide an analysis of security vulnerabilities for IoT systems, with a three dimensional framework to indicate the intricacy of IoT security domain; however, the analysis of existing countermeasures is missing. In [9], security and privacy threats relevant to IoT are discussed only on a legislative point of view. An overview of security solutions for IoT systems is provided in [10]. However, new emerging SDN/NFV-based security models are not discussed therein. Furthermore, remarkable eﬀorts have been carried out over the past years for securing Wireless Sensors Networks [11], [12], [13] and Radio Frequency Identiﬁcation (RFID) systems [14] [15]. However, several doubts have been raised with relevance to the eﬀective applicability of WSN/RFIDoriented security mechanisms for IoT environments. Other surveys discuss speciﬁc security solutions for IoT domains, such as authentication [16] [17], detection systems [18], thus focusing on narrow range solutions and lacking a global vision. In Table I, we provide an analysis of previous literature surveys on security countermeasures for IoT, showing that an extensive study of SDN/NFV-based security countermeasures to cope with IoT attacks is currently missing. Our survey aims to ﬁll this gap presenting the potential of SDN/NFV-based security solutions to secure IoT systems.

Other surveys have investigated the security features related to SDN and NFV paradigms. In [23], [24], [25], SDN-based security solutions are proposed to enhance network protection. Several works have also investigated the inherent security challenges introduced by SDN [26] [27], illustrating potential countermeasures. On the other hand, NFV can impact the security of virtualized networks, whose challenges have been analyzed in [28] [29]. To cope with security threats in the NFV infrastructure, several best security practices are described in [30]. However, all the above-mentioned works separately present SDN and NFV-based security mechanisms, thus an integrated vision is missing. Furthermore, these works lack to speciﬁcally address the peculiar features and threats of IoT systems.
B. Organization of the paper
The rest of this paper is structured as follows. Section II brieﬂy presents the main features of IoT systems according to a three layer taxonomy, whereas Section III analyzes relevant security threats. Section IV provides an overview of main conventional security countermeasures against IoT attacks. In Sections V and VI, we respectively present SDN and NFV paradigms in a comprehensive manner, analyzing integration approaches with IoT systems, and especially focusing on their security features. Section VII derives lessons learned in the adoption of SDN/NFV-based security solutions in IoT environments, comparing them with conventional security countermeasures. Section VIII thoroughly discusses open research areas, whereas concluding remarks are drawn in Section IX.
II. Overview on IoT landscape
In this section, we provide an overview of current IoT landscape, considering end-to-end solutions from devices to relevant IoT applications. In our analysis, we take into account how the broad adoption of cloud technologies, up to the extreme edge of the network, is making the borders even more blurry between network environments and IoT cloud-based platforms [31]. In this vein, we have opted for a three layer taxonomy, including IoT devices, IoT-oriented cloud networks and platforms, and IoT applications. In the following, we describe each domain, illustrating its main features and its enabling technologies.
A. IoT device layer
This layer includes the devices able to interact with the physical environments, by leveraging identiﬁcation, sensing, and actuation capabilities. Through their pervasive capabilities, IoT devices represent the bridge between the physical and cyber domains. The main technologies adopted in this layer are RFID technologies and Wireless Sensor Networks (WSNs). The main application scenario for RFID tags deals with the identiﬁcation and tracking of goods [32]. Therefore, RFID tags present extremely low costs and can be battery-free by leveraging electromagnetic energy harvesting [33]. WSNs have been used in manifold application scenarios, such as environmental monitoring, agriculture, military scenarios, and smart cities, and represent a key enabler for IoT adoption [34].

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
3

TABLE I Previous surveys on security countermeasures for IoT

Survey
Sicari et al, [10] Granjal et a. [19] Saadeh et al [16] Nia et al, [20] Ferrag et al. [17] Zarpelao et al. [18] Yang et al. [21] Alaba et al, [22]

Authentication YES YES YES YES YES NO YES YES

Encryption YES YES NO YES NO NO YES YES

Security Aspects

Access Control Detection

YES

NO

YES

NO

NO

NO

YES

NO

NO

NO

NO

YES

YES

NO

YES

NO

Privacy YES NO NO YES NO NO YES YES

SDN NO NO NO NO NO NO NO YES

NFV NO NO NO NO NO NO NO NO

Year
2015 2015 2016 2016 2017 2017 2017 2017

Fig. 1. IoT Overview.
We ﬁnally remark that by leveraging the reduction costs of enabling identiﬁcation and sensing modules, these components are nowadays embedded in a great variety of smart devices, such as autonomous vehicles [35], industrial robots [36], and Unmannered Areal Vehicles (UAVs) [37] [38]. This trend exponentially increases the number of potential devices involved in IoT solutions, further boosting the attraction of cybercriminals to exploit vulnerabilities and launch massive attacks.
B. IoT-oriented Cloud Networks and Platforms
The increased connectivity of smart objects has given impetus towards the explosion of IoT paradigm. Several communication strategies and networking schemes have been speciﬁcally designed to meet the requirements of sensing and actuation devices, accounting for their resource constraints and limited battery energy supply. The desire to provide global interconnectivity for each object has boosted notable eﬀorts of IETF community to design and develop an IPv6-based protocol for IoT nodes [39]. Furthermore, accounting for the

massive number of devices and the expected huge amount of traﬃc, cloud technologies have been envisioned as core enabler for IoT solutions. Also, to better cope with low-latency IoT applications, the Edge computing paradigm is boosting the deployment of micro data centers at the edge of the network [40]. Last but not the least, IoT service layer platforms have been standardized to provide common IoT service functions, such as device management, group management, security, and global discovery [41]. In the next sections, we provide an overview of these trends, which have notable impact on the relevant security of IoT solutions.
1) IPv6-based IoT protocol stack: The physical and link layer technologies have been designed to support constrained IoT devices, thus presenting low energy consumption and low transfer rates. Regarding short-range wireless communication protocols for WSN, IEEE 802.15.4 [42], IEEE 802.11ah, and Bluetooth Low Energy (BLE) [43] are the most widely adopted solutions. Furthermore, over the last years, Low Power wide Area Networks (LPWAN) technologies have attracted the interest of research and industrial communities, boosted by SigFox, Lora, and cellular-based solutions (e.g., Narrowband IoT) [44]. Indeed, upcoming 5G systems are considered potentially key drivers to further boost the widespread of IoT by developing solutions able to accommodate relevant requirements [45] [46].
Accounting for the heterogeneity of access technologies, the main challenge represents the global interconnectivity to ensure a uniform IoT networking. To this aim, several IETF eﬀorts have addressed the design of speciﬁc adaptation layers to enable diﬀerent wireless technologies interconnectivity by leveraging IP networking: 6LoWPAN WG has speciﬁcally focused on IEEE 802.15.4; 6lo WG copes with a variety of short range protocols, such as BLE and NFC; and LPWAN has recently started to address the challenge for long-range IoT communications. Another crucial step towards a standardized protocol stack for IoT has dealt with the development of speciﬁc application protocols. In this vein, accounting for the complexity of HTTP, a lightweigth RESTful application protocol, Constrained Application Protocol (CoAP) [47], has been proposed to support eﬃcient interactions even with resource-constrained IoT devices.
2) Cloud and Edge computing: Accounting for the ondemand resource provisioning enabled by virtualized environ-

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
4

ments, cloud technologies represent a key solution to cope with the scalability issues due to the massive spread of IoT devices [31]. To provide the virtualized resources required to execute applications, three diﬀerent virtualization layers have been devised: Infrastructure-as-a-Service (IaaS), Platform-asa-Service (PaaS), and Software-as-a-Service (SaaS). Indeed, several cloud-based platforms have been proposed over the last years from both research projects and industrial communities [48] [49].
Nowadays a great variety of IoT solutions are demanding for strict latency requirements. In this vein, the Edge computing paradigm [40] is rapidly gaining momentum, promoting distributed small-scale cloud environments deployed at the edge of the network to execute applications near to the IoT devices. This approach can introduce several beneﬁts by: (i) ensuring low-latency application response times; (ii) reducing network traﬃc overhead, since data generated by IoT devices can be processed at the edge avoiding traﬃc forwarding to remote cloud data centers; (iii) providing context data awareness for location-based services. ETSI Multi-Access Edge Computing (MEC) and OpenFog consortium are leading the standardization and broad adoption of edge computing solutions. Several IoT systems have fully embraced the Edge computing paradigm [50] [51] [52], by developing new models to split data processing between the edge and the cloud. Furthermore, the rise of lightweight virtualization technologies, such as LXC and Docker containers [53], allows even resource-constrained device to host IoT services [54].
C. Applications Layer
This layer includes all the application modules required to provide the desired IoT service to the end-users. Indeed, accounting for the manifold application scenarios, IoT platforms greatly diﬀer to accommodate speciﬁc business logic requirements. The most promising usage concerns smart home automation [55], Industrial Internet [56], intelligent transportation systems [57], smart energy [58], enhanced health-care services [59], and smart cities [60].
III. Security Threats in IoT environments
This section aims to provide a comprehensive analysis of attack threats in IoT environments. Based on the IoT taxonomy presented in the previous section, the security threats are discussed in-depth for each domain.
A. Security attacks on IoT devices
Accounting for the constrained computation capabilities and limited energy supply of IoT devices, the adoption of conventional strong security mechanisms is not guaranteed, thus increasing the potential vulnerabilities. In addition, IoT devices can operate remotely and unattended by human intervention, thus making them vulnerable to physical attacks. We remark that attacks against the physical devices can be extremely dangerous in IoT systems, since the compromised nodes can generate altered measurements. As a result of the corrupted information, IoT control systems can be severely impacted,

providing erroneous feedback information and wrong services. In the following, we describe the main attacks related to the IoT device layer.
a) Hardware Trojan attack: Trojans have emerged as a major security concern for IoT devices [61]. Trojan is a malicious modiﬁcation of hardware, which allows the attacker to exploit the infected IoT device to gain access to either sensitive data or software running on that device. To this aim, the attacker alters the original circuitry during design or fabrication and inserts a triggering mechanism that activates the malicious behavior of the Trojan [61].
b) Replication attack: A malicious attacker can create a new node by replicating the sensitive identiﬁcation information of a target device. Then, to allow the connectivity to the existing IoT system, the replicated node is faked as authorized, generating severe vulnerabilities in the IoT system. Indeed, the node can generate false data, making IoT applications returning erroneous feedback commands or providing wrong processed information. Furthermore, the replicated node can also enable the attacker to obtain security privileges, such as extracting cryptographic shared keys [62], and to revoke authorized nodes by carrying out node revocation mechanisms [63].
c) Tampering attacks: IoT devices can operate remotely and unattended by human intervention, thus making them vulnerable to tampering attacks. Tampering attacks refer to all scenarios where a malicious entity performs an unauthorized physical or electronic action against the device. The adversary can exploit the physical access to the device to gain full control, therefore known also as node capture attacks, causing intentional malfunction or sabotage [64]. In [65], an extended analysis of tampering attacks on sensor node is provided, especially focusing on the malicious approaches which can be executed in the deployment area, without interruption of the regular node operation.
d) Battery draining attacks: The majority of wireless sensor and actuator devices relies on embedded small batteries with limited energy capacity. This features can be exploited by malicious attackers to make an IoT device unavailable by completely draining its battery. This attack can be performed by sending a huge number of packets to the target devices, forcing their processing and the relevant resource consumption, which can rapidly consume the available energy [66]. Since IoT nodes typically use advanced duty cycle mechanisms to extend their lifecycle, a cyber-criminal can launch an attack, also known as sleep deprivation, to alter the normal sleep routing and force the target node to be awake until the complete depletion of its energy [67]. These battery-draining attacks can have severe consequences on IoT systems since the services provided by a single or a group of devices become interrupted, potentially causing the ineﬃciency of the whole IoT solution, such as a ﬁre detection system.
e) Malicious code injection attacks: In addition to hardware tampering attacks, attackers can take control of a device by injecting malicious code into its memory [68]. The injected malicious code can alter the normal node behaviour and can be even exploited to grant the adversary with increased privileges in the associated IoT system.

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
5

B. Security threats in IoT-oriented Cloud Networks and Platforms
IoT-oriented cloud networks and platforms represent a crucial domain of IoT systems, not only providing the connectivity between IoT devices and relevant applications, but also oﬀering the computation and storage capabilities of cloud environments to execute distributed IoT platforms. Therefore, potential vulnerabilities in this domain can have tremendous consequences, severely impacting the correct behavior of IoT solutions. In the following, we provide an in-depth description of attacks in IoT-oriented cloud networks and platforms.
a) Eavesdropping attack: Eavesdropping (also known as data sniﬃng) is a potential cyber-attack performed by intentionally listening to private IoT communications. When data are transmitted unencrypted, the adversaries can obtain sensitive information, such as credential or node conﬁguration.
b) Denial-of-Service attack: Denial-of-Service (DoS) attack is one of the most common networking attacks and can have dramatic impact against IoT systems: by attacking and compromising the communication links, as well as ﬂooding IoT networks with massive data, DoS attacks can rapidly exhaust resources causing the unavailability of IoT systems. Since the majority of IoT devices use wireless communication links, interference and jamming attacks can be used to block radio transmissions. Jamming attacks can be continuous [69], thus causing full or intermittent dis-connectivity [70], to lower the performance of time-sensitive IoT services. On the other hand, the ﬂooding of IoT networks can have serious consequences over the IoT systems availability. Diﬀerent approaches can be used to carry out DoS attacks, such as Ping of Death, TearDrop, UDP/SYN ﬂood, and SYN ﬂood. Furthermore, the eﬀects of these attacks get notably increased when they are performed in a distributed way, i.e., Distributed DoS (DDoS). In this vein, the vulnerabilities of IoT devices can be exploited to create large-scale botnets and to launch massive DDoS attacks [71].
c) Spooﬁng attack: The objective of spooﬁng attacks is to generate and send malicious packets that seem legitimate in the IoT systems. This malicious approach can be used in IP-based IoT systems, where the adversary can spoof the IP addresses of authorized IoT devices. Then, the adversary can send malicious data with the spoofed IP addresses, making relevant communication legitimate, thus gaining access to the IoT system [72]. In case of RFID solutions, the attacker can record the information of a valid RFID tag and then generates altered information using the valid tag ID [73].
d) Man-in-the-middle (MitM) attack: The MitM attack is an advanced version of spooﬁng attack wherein a malicious entity is on the network path between two IoT communicating devices. The adversary impersonates both endpoints and makes independent connections with each target, to intercept the exchanged traﬃc, and then transfers and forwards messages between them. In this way, the adversary is capable of delaying, cloning, replaying, spooﬁng or dropping packets. Impersonation makes the endpoints believe that they are talking directly to each other, while the entire conversation is controlled by the attacker. Reliable information, such as sensitive health status, industrial IoT control feedback, or even

secret keys of house doors, can be forged and altered by an attacker with MitM, thus causing serious IoT security issues [22].
e) Routing attacks: Routing attacks manipulate routing control information to alter how packets are routed over IoT networks. In this way, malicious adversaries can create routing loops or generate false error routing messages. Different strategies have been investigated to carry out routing attacks. In a Black Hole attack, a malicious node advertises the shortest path to a destination node, so that all packets are routed towards itself. Then the adversary can drop or alter the incoming packets [74]. In a Hello Flood attack, a broadcast ”Hello Packet” from a malicious node is used to advertise its presence to neighbors using high transmission power. The receiving nodes assume to be in the communication range of the sender, which can be selected as a next hop in the route, causing an unstable state in the network [75]. In a Sybil attack, an adversary device, i.e., a Sybil node, can claim legitimate identity in the IoT network and generate false routing information that can alter the correct forwarding rules of neighboring nodes [76].
f) IoT cloud service manipulation: IoT services are deployed over cloud data centers according to diﬀerent models, i.e., IaaS, PaaS, or SaaS. A cloud/edge data center that is controlled by a malicious administrator can generate a serious situation since the adversary can easily launch attacks against the deployed virtualized service instances, either VMs or containers. In this way, the attacker can have remarkable beneﬁts: extracting sensitive information gathered by associated IoT devices; manipulating processing IoT data tasks, thus compromising potential critical closed-loop controls; infecting the services with malicious software and fake information, which can compromise the security of both local and remote entities, such as other connected services deployed over different cloud/edge data centers or associated IoT devices.
g) Privilege escalation: A typical feature of IoT platforms is the resource sharing where data, generated by multiple IoT systems, are processed and stored by a common module, by leveraging appropriate isolation mechanisms. Similarly, cloud/edge data centers provide computing and storage resources for the deployment of IoT services over the same physical/virtual infrastructure. In this vein, malicious services can launch privileged escalation attacks by exploiting potential vulnerabilities in the virtualization/isolation technologies. The potential outcomes can be extremely severe such as stealing sensitive information and even taking control of other services within the data center environment.
h) Security inter-working: As multiple IoT platforms are now being inter-worked, their security mechanisms should be consistent across the interconnected IoT platforms. Unfortunately, not many IoT platforms are using the same security mechanisms. For example, it is very common to see that an IoT platform A is using Oauth as a security key management mechanism while an IoT platform B is using a proprietary security solution which has diﬀerent access rights and key management mechanisms. Such inconsistencies of security mechanisms on inter-worked systems can cause various security ﬂaws such as privacy data leakage and privilege escalation.

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
6

C. Security threats in IoT applications
The application layer implements the business logic to eﬀectively exploit the capabilities of IoT devices. The relevant security challenges account for vulnerabilities in the developed software, relevant data, and attacks against the involved users.
a) Malicious Virus/worm: IoT applications can be severely damaged through malicious viruses and worms, which can allow data leakage and compromise the correct behaviour of cyber-physical systems [77]. Furthermore, the self-propagation capabilities of worms can notably make the risk higher, extending the threats to other components of the systems, as well as to diﬀerent IoT applications.
b) Application data leakage: Another concern in this domain involves privacy leakage, whereby sensitive information can be extrapolated by both cybercriminals and honest but curious adversaries. These sensitive information, generated by IoT devices for speciﬁc domains, can also contain application context information which can be exploited by malicious users not only for hacking the application itself, but also for carrying out further attacks [78]. For example, when real-time information from an electrical metering system is revealed, adversaries can infer the absence of people in the house based on power utilization statistics, making it ideal for burglary.
c) Service logging failure: Logging activities can be extremely beneﬁcial to monitor the status of deployed services and to detect security attempts. To this aim, developers should appropriately record authentication events and application errors in the relevant log. Furthermore, compromised virtualized instances can intentionally generate huge amount of logs, which can impact the hypervisor logging analysis from other instances. Ineﬃcient logging monitoring can limit the capabilities of implementing security controls in cloud/edge environments [79].
d) Malicious Scripts: Malicious scripts can severely impact software execution, allow sensitive data leakage, and alter the features of IoT solutions. The scripts can be usually executed over IoT application portals, e.g., in the form of Java attack applets and Active-x scripts, so to fool the customers accessing relevant services through Internet.
e) Phishing Attacks: By leveraging infected e-mails and phishing websites, adversaries can perform phishing attacks aiming to obtain the users’ credentials for IoT applications. In this way, malicious accesses to the relevant devices and IoT platforms can be carried out.
f) Inconsistent software patches: A software patch, which is ﬁxing security vulnerabilities and bugs, is very important to improve the quality, usability and performance of software. However, by the nature of IoT devices, it is not easy to apply software patches to all deployed IoT devices. In particular, IoT devices with low memories typically do not support an Over-The-Air (OTA) update feature. Inconsistency of software versions among the same IoT devices can cause misbehaviour of IoT applications. Finally, we shall point out that the multiplicity and diversity of IoT applications vary across markets, potentially introducing speciﬁc security requirements. Other surveys deeply discuss security features for precise IoT application domains, such as smart grids [80]

[81], vehicular networking [82], and Industrial Internet [83] [84].
IV. Conventional security mechanisms in IoT environments
In this section, we provide an overview on the main conventional security countermeasures for IoT systems. Our analysis focuses on the following areas: authentication and authorization, traﬃc ﬁltering, encryption protocols, and detection systems.
A. Authentication and Authorization for IoT
Authentication is considered as a key security enabler allowing to cope with most common IoT threats, such as manin-the-middle attacks, impersonation attacks, forging attacks, replay attacks and Sybil attacks. The majority of current IoT authentication protocols rely on mutual authentication, which refers to two or more IoT devices authenticating each other, providing privacy and data integrity. This can be based on (i) symmetric cryptography, which generates unique symmetric keys for each session based on a shared algorithm, and (ii) public cryptography, which uses a combination of public and private keys for each entity. Other authentication mechanisms in IoT can include biometric and username/password authentications [85] [86]. For a detailed analysis of authentication protocols for IoT systems, the interested reader may refer to [87]. In the following, we focus on the Authentication, Authorization, and Accounting (AAA) framework, which is dedicated for intelligent access control of resources and security policy enforcement [88]. Indeed, this framework oﬀers protection against multiple vulnerabilities, such as insecure network services, insecure interfaces, and privacy concerns. Authentication is the process of proving the user’s or device’s ID. To this aim, the framework uses a combination of a username and a corresponding password. If the submitted credentials are correct, the server responds with a token which can be used for various operations. Each token is mapped to a set of “authorized” actions which can be executed by the authenticated entity. The authorization determines whether the entity has permissions to perform certain tasks or access certain data (e.g., accessing IoT device data or turning on/oﬀ IoT devices). This policy enforcement technique can be either user-based or role-based, meaning that the access rights can be determined per-user or per group of users. Regarding accounting features, the AAA framework does not only enable the ﬁnancial and commercial features, but it can also control the generated traﬃc, preventing massive usage of resources. The authors in [89] implemented an AAA framework at the IoT gateway level, providing a secure private topology that can be implemented in smart cites. They have presented a thorough evaluation of the security, performance and energy consumption of the system. The results show a variety of new security features and negligible latency and energy consumption overhead.
B. Traﬃc Filtering and Firewalls
A ﬁrewall, also known as packet ﬁlter, is a network security appliance which analyzes incoming/outcoming packets,

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
7

checking for matches to any of the pre-conﬁgured ﬁltering rules, to either drop or forward the packets accordingly. Each rule can be deﬁned using a diverse set of parameters, such as used protocol, incoming/outcoming ports, source/destination IP addresses, and zones. There are two types of ﬁrewalls: stateful and stateless ﬁrewalls. The key diﬀerence between them is that stateless ﬁrewalls do not keep track of traﬃc patterns and data ﬂows, and are limited to statically analyze packets; stateful ﬁrewalls can observe traﬃc streams from end to end, monitoring the overall sessions [90]. The authors in [91] implemented a system to secure a home IoT network against privacy breaches using ﬁrewalls. Their work consists of routing all traﬃc through a Raspberry Pi gateway which secures the communications of IoT devices with the cloud database. The relevant ﬁrewall is implemented at the gateway level (Raspberry Pi) using IPTables. Promising results are shown, demonstrating the capabilities of the system when dealing with diﬀerent kinds of attacks such as IP spooﬁng, ICMP DoS attacks, SYN ﬂood attacks and communication attempts from unknown identities. In a larger IoT network, this solution can suﬀer from potential scalability issues, due to the resource limitations imposed by the resource-constrained gateways, creating a bottleneck and a potential single point of failure.
C. Encryption Protocols
Data encryption mechanisms ensure data conﬁdentiality and integrity in IoT systems, preventing attackers from eavesdropping and data tampering during transmission. Most cryptosystems are based on symmetric and asymmetric key management. Elliptic Curve Cryptography (ECC) is an asymmetric algorithm which has emerged as an attractive and eﬃcient public-key cryptosystem. The authors in [92] designed a lightweight ECC-based protocol for multi-agent IoT systems. Datagram Transport Layer Security (DTLS) is another communication protocol which relies on symmetric key management. The authors in [93] presented an analysis of the DTLS protocol in the context of IoT and proposed a lightweight approach tailored to IoT devices, providing diﬀerent robust security functionalities. Other cryptosystems include PKI (Public Key Infrastructure) which is an end-to-end authentication and key agreement mechanism whereby a trusted public entity stores digital certiﬁcates and veriﬁes the identity of involved parties [94]. The resource constraints of IoT devices can severely limit the eﬀectiveness of the underlying encryption mechanisms. Deploying a proxy with re-encryption capabilities (using any of the aforementioned encryption approaches) represents a promising solution to address data integrity and conﬁdentiality issues. In [95], the authors proposed a proxy re-encryption solution between two endpoints exchanging data through an insecure network. The proxy acts as an intermediate node which resides between the two endpoints and it is responsible for re-encryption operations. The key manager is the entity which is in charge of mapping the destination public key using any addressing mechanism. For example, in the scenario shown in Fig. 2, all data coming from the self-driving car is

sent to the proxy to be re-encrypted and forwarded to the data center. Both the self-driving car and the data center have public and private key pairs, and the key manager has both public keys.
Fig. 2. Re-encryption using a Proxy.
D. Detection Systems Intrusion Detection Systems (IDS) aim to detect unau-
thorized access and abnormal network traﬃc using either predeﬁned attack patterns or signatures (Signature-based IDS) or the events log (Anomaly-based IDS). IDS are able to detect a wide range of attacks and abnormal network activities including: excessive bandwidth consumption, SYN ﬂooding, ICMP DoS attacks, ARP spooﬁng attacks and even the use of a protocol with certain parameters deﬁned by the administrator [96].
a) Signature-based IDS: This type of IDS is based on a large library which consists of a pre-deﬁned set of rules. If any (inbound or outbound) traﬃc matches with a rule, the IDS agent sends an alert to the security administrator, as sketched in Fig. 3. Although this static detection approach keeps false positives to a minimum, it requires detailed knowledge of each attack pattern and is not capable of discovering new types of attacks on its own.
b) Anomaly-based IDS: Unlike the signature-based approach, the anomaly-based IDS is event-driven. First, it deﬁnes the “normal” behavior of the network. Then, if any activity diﬀers from the normal behavior, this event is considered as an intrusion. In order to accurately detect attacks and minimize the false alerts, this system uses artiﬁcial intelligence (AI) techniques. It thus needs to be trained to be able to classify network traﬃc [97]. A detailed survey on IDS solutions for IoT has been presented in [98], highlighting the key aspects to be considered in the design of a cross-platform distributed IoT approach. Accounting for the heterogeneous nature of IoT devices, the need for a unilateral intrusion detection support across diﬀerent technologies is a pending research challenge. The authors also discussed the interoperability issues and the expected selfprotection features for detection systems.
Another popular detection solution is represented by Deep Packet Inspector (DPI), which analyzes not only the packet header, but also its payload extracting the relevant signature. It operates at the seventh layer (the application layer) of the Open System Interconnection (OSI) protocol stack, and

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
8

Fig. 3. A typical architecture of Intrusion Detection Systems in an IoT environment.

usually includes ﬁltering capabilities. Each packet is classiﬁed according to a set of predeﬁned rules. According to the system’s decision, the packet can be either blocked, forwarded, or tagged for QoS (Quality of Service) purposes. A common practice is to forward the traﬃc to a honey-pot to further inspect the potential attack [99]. In the IoT context, new solutions which aim to design lightweight DPI systems are emerging. That is mainly due to the fact that IoT devices do not meet the computational requirements of existing DPI systems. The authors in [100] designed a high-performance lightweight deep-packet anomaly detection solution which is feasible for such resource constrained devices. This approach uses “n-gram bit-patterns” to make a fast and eﬃcient packet classiﬁcation decision. Although the illustrated results show low level of false alerts and high eﬃciency, the authors have not evaluated the power consumption of this solution, which can be an issue for IoT systems.
V. SDN security in IoT environments
SDN is a promising network paradigm aiming at decoupling control and data planes to increase network programmability. In this way, SDN-based applications may have dynamic and granular access of network resources, and can specify traﬃc ﬂow setting over the underlying infrastructure. This increased manageability of SDN-based networks allows the introduction of novel approaches to cope with security threats. Indeed, moving the network intelligence into the SDN controller introduces the opportunity to oﬄoad the complexity from network devices and to react fast in case of alerts by appropriately modifying traﬃc ﬂows. In this section, we ﬁrst provide a broad overview of SDN networking, particularly focusing on its adoption for IoT systems. Then, we describe the main security features of SDN networking aiming to achieve a major breakthrough in the protection of IoT systems.
A. Background on SDN adoption for IoT systems
SDN guarantees enhanced network programmability by decoupling the control and forwarding functions. In this way, network management can be done separately, without aﬀecting data ﬂows, and can be carried out by a centralized controller. As a consequence, the complexity of the underlying switching devices is notably reduced in comparison with traditional

Fig. 4. The three layers in SDN architecture.
networks. The derived SDN networks result into a simpler programmable environment, allowing external applications to deﬁne the network behavior. According to Open Networking Foundation (ONF), a non-proﬁt consortium dedicated to development, standardization, and commercialization of SDN, the reference SDN architecture model [101] is composed of three layers, namely applications, control plane, and data plane (Fig. 4). The SDN applications can specify their requirements for the traﬃc management in the underlying networks through Northbound APIs. The SDN controller, which is in charge of the control plane, bridges the application plane and the data plane, translating applications’ requirements into appropriate forwarding rules to be enforced by the underlying network switches. To this aim, the south-bound interface allows the SDN controller to access functions provided by the SDN-enabled switching devices. These functions may include reporting network status and managing packet forwarding rules. Indeed, the data plane includes network elements (e.g., switches and routers) which are exploited to process packets based on the rules provided by the SDN controller, and to collect network status information, such as network topology and traﬃc statistics. The adoption of standardized interfaces, e.g., Openﬂow, allows to increase interoperability among network elements, avoiding vendor lock-in issues.
Accounting for the increased manageability introduced by SDN, several works have investigated its integration for endto-end IoT solutions. The adoption of SDN paradigm can be implemented at diﬀerent levels, such as data center, core, and access networking, as illustrated in Fig. 5, thus covering the IoT traﬃc management from the devices, which generate the data, up to the cloud services, where data processing is performed. Each networking environment introduces speciﬁc requirements and optimization for the adoption of SDN, as deeply analyzed in [102]. Speciﬁc eﬀorts are required for IoT access networks, aiming to provide uniﬁed network connectivity over wired and wireless networks [103]. Indeed, we remark how IoT is used as an umbrella term to include an extremely broad range of devices, ranging from lowconstrained sensors adopted in WSN to autonomous cars,

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
9

Fig. 5. Deployment scenarios of SDN paradigm for IoT systems.

from smart home devices to industrial connected equipment. This has lead to the development of multiple IoT connectivity solutions, including short range meshed networks, typical of WSNs, and low-power cellular networks, where 5G is considered a fundamental enabler for IoT. In this variegated landscape, SDN represents a potential breakthrough in the eﬃcient management of diﬀerent IoT network environments due to its extreme ﬂexibility and programmability. On the other hand, IoT domains introduce several challenges, in terms of latency, bandwidth, reliability, in-network data processing, and energy, which should be appropriately considered and require speciﬁc enhancements of SDN paradigm, as described in the following exemplary IoT scenarios.
Several exemplary case studies have addressed the adoption of SDN for vehicular communications, so to improve network utilization and ensure rapid network conﬁguration [104] [105]. Indeed, accounting for the notable mobility of vehicles and latency requirements for safety drive applications, fast connection establishment and dynamic routing decisions require optimized strategies for SDN system over vehicular networks. In [106], an SDN-based architecture is also devised to speciﬁcally cope with constraints and features of WSNs, such as reducing the overhead of control traﬃc. TinySDN architecture [107] is proposed to enable multiple controllers for software-deﬁned wireless sensor networks in TinyOS compatible devices. This approach transforms the wireless sensor nodes in an advanced entity including an SDN switch and an SDN end-device, called SDN-enabled sensor node. A peculiar feature of the TinySDN framework concerns the potential presence of multiple controllers within the WSN to reduce the overall latency. A stateful SDN solution, SDN-WISE, has

been developed and tested for IEEE 802.15.4 in [108], able to enhance programmability of sensor nodes as ﬁnite state machines to enable a broad range of in-network operations. In [109], an enhanced SDN controller has been devised to ensure diﬀerentiated quality of service for IoT ﬂows over heterogeneous IoT wireless networking scenarios. To ensure the seamless integration of SDN-WISE enhanced sensors and OpenFlow networks, the popular open-source ONOS framework [110] has been appropriately extended, as illustrated in [111]. By leveraging the increased features of the ONOS controller, two novel applications have been implemented to fully exploit the SDN capabilities of sensor devices: on the one hand, the SensorNodeForwarding application is in charge of installing the appropriate forwarding rules, based on the global topology, consisting of both OpenFlow and SDN-WISE nodes; on the other hand, the SensorNodeDeviceManagement enables the remote sensor device management, therefore providing increased ﬂexibility in the resource usage. Furthermore, an extensive performance analysis of SDN-based implementation for WSN has been conducted in [112], demonstrating that under static and quasi-static conditions, SDN outperforms two conventional protocols for IoT networks, i.e., Zigbee [113] and 6LoWPAN [114], independently of the network size, payload size, traﬃc generated, and considered performance metrics. Speciﬁc eﬀorts have also addressed the adoption of SDN paradigm for Wi-Fi and cellular access IoT networks: in [115], a novel WiFi architecture, OPENSDWN, leverages SDN networking to provide datapath programmability and enable service diﬀerentiation and ﬁne-grained transmission control, facilitating the prioritization of critical applications; an SDN-based ﬂexible architecture for 5G cellular networks has

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
10

been designed in [116] to fulﬁll functional and performance requirements of new generation services and IoT devices. The reader interested in aspects related to the integration of SDN networking with IoT systems can refer to these cited surveys [102] [117] [118] [119]. In our following analysis, we focus on the detailed analysis of SDN-based security mechanisms to enhance the protection of IoT systems.

B. SDN-based security features for IoT
The use of SDN is gaining high momentum also within the security research communities. In this section, we provide an overview of the major SDN features which can be explored to provide advanced security mechanisms for IoT systems. For each envisioned feature, we provide a high-level explanation of the concept, deepening relevant solutions and exemplary implementations. This analysis also contains insightful ﬁndings related to the application of SDN-based security solutions in diﬀerent IoT networking domains.
1) Traﬃc Isolation: SDN can be exploited to enable forwarding of diﬀerent network traﬃcs over the same physical network infrastructure, while guaranteeing the desired level of isolation. In [120], an SDN-based solution is introduced to deploy multiple logical networks for diﬀerent tenants. To this aim, the Flowvisor framework creates routing paths enforcing rules in the underlying network OpenFlow-based switches, according to each tenant’s conﬁguration. This feature can drastically limit the propagation and damages of security attacks between diﬀerent network domains. An exemplary scenario of these security features is depicted in Fig. 6, where an SDNbased IoT access control application is implemented on top of the SDN controller to prevent the forwarding of undesired malicious traﬃc. In this way, each incoming/outcoming connection, directed to IoT domains, is veriﬁed according to predeﬁned security policies. If the connection is allowed, the SDN controller issues relevant forwarding rules in the physical/virtual SDN switches along the desired networking path. On the other hand, malicious traﬃc generated by cybercriminals is blocked, by implementing the desired network access list. It is worth highlighting that the application domain of the SDN controller strictly depends on the network coverage under its responsibility. Even if in the case that the SDN controller supervises only the access network, the SDN-based security access control features can securely manage the traﬃc ﬂows by specifying the IoT gateways’ routes which provide connectivity for the attached IoT devices.
Furthermore, it can be used to dynamically separate malicious (or suspicious) network ﬂows. In this vein, SDNbased separation solutions can oﬀer diﬀerent levels of network abstractions, so to appropriately separate network traﬃc and provide network views according to desired security properties. For securely interconnecting smart IoT environments, Boussard et al. [121] proposed SDN over federated local area networks, where communications among IoT devices are dynamically enabled according to requests from service users.
2) Security Network Monitoring through Centralized Visibility: The SDN controller has a wide visibility of the data planes under its supervision and, through the control plane, can

Fig. 6. SDN-based access control features in IoT domains.
collect network status information by sending statistics query messages to the switches. In this way, the SDN controller can oﬀer updated status of the underlying infrastructure and ﬂow request messages to network applications running on the control plane. This approach can notably facilitate the development of strategies for implementing anomaly network analysis and detection of network-wide attacks. For example, several SDN-based strategies have been implemented to timely detect DDoS attacks [122] [123]. Since OpenFlow has been designed to provide ﬂow-oriented status, Flexam [124] has been proposed to increase packet-level information by introducing a ﬂexible sampling feature. This extension allows the SDN controller to deﬁne the sampling period according to either a probabilistic or a deterministic scheme, as well as the part of packets to select. This increased packet visibility can further support monitoring applications with low overhead. Moreover, the centralized view of the overall network can be exploited to better deﬁne monitoring analysis in complex scenarios. CloudWatcher [125] is an SDN-based framework which automatically detours network ﬂows to guarantee that all necessary packets are inspected by pre-installed network security devices. In [126], SDN networking is exploited to determine optimal routing paths based on policy requirements and ﬁxed-located security devices.
In the IoT landscape, an interesting idea is to extend the monitoring functions up to the extreme edge of the network, such as home device gateway and even IoT smart devices. This can notably increase the potential oﬀered by network-wide monitoring solutions leveraging a comprehensive vision of the network status. Indeed, performing network monitoring at line speed within the core network of Internet Service Providers (ISPs0 can be challenging accounting for the huge volume of ﬂowing traﬃc. A complementary valid strategy is to exploit the capillarity of SDN-based home and enterprise routers. Indeed, SDN programmability ensures remote management and allows application to be easily updated as new security threats emerge. The advantages to perform anomaly detection mechanisms at the network edge have been experimentally proved in [127], where implemented detection algorithms, unable to satisfactorily identify anomalies at ISP level, present accurate detection rates for home and enterprise routers.

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
11

3) Dynamic Flow Control: A key feature of SDN is the capability of the SDN controller to dynamically install and update forwarding rules in network elements, so to appropriately manage traﬃc ﬂows. This increased manageability notably raises the potential of network applications to implement appropriate security mechanisms. In [128], various SDN-based security functions (e.g., ﬁrewall and IDS/IPS) have been designed and implemented. For example, when an SDN switch does not have a ﬂow rule to process a speciﬁc packet, a relevant request is forwarded to the controller which can decide the relevant packet processing based on speciﬁc application policies. This feature can enable a dynamic access control function, which is commonly implemented to protect a network according to the speciﬁed privileges and security policies.
Furthermore, the dynamic ﬂow control can notably increase the potential countermeasures to cope with security threats, going beyond dropping packets. These defense solutions can include dynamic quarantine and network reﬂectors either for advanced analysis with honeypots or for forensics analysis. Indeed, by complementing SDN with IDS solutions able to discern suspicious and malign ﬂows, the forwarding rules can be dynamically updated without requiring the use of speciﬁc proxies. Also, SDN features allow to notably improve the responsiveness of the security mechanisms deployment, better coping with network attacks. In this vein, various SDN-based schemes have been deﬁned to face DDoS attacks [129] [130], which can drastically impact IoT system behavior.
The SDN-based ﬂow management can be extremely useful for increasing the security of critical infrastructures, where vital data are exchanged among elements of Industrial Control Systems (ICS). In [131], an SDN-based architecture allows an ICS operator to forward replicas of sensitive traﬃc streams towards an IDS located in a strategic position to analyze as many traﬃc ﬂows as possible. In this way, the ICS operator can instruct speciﬁc SDN network switches to duplicate traﬃc, for the streams that have to be monitored, and select optimal forwarding paths by exploiting spare bandwidth that might be available in over-provisioned networks. This approach is able to meet strict requirements in terms of packet loss for critical infrastructures.
4) Host and routing obfuscation: Malicious attackers leverage static network conﬁguration to discover potential target vulnerabilities. Indeed, scanning tools and worms usually send probes to random IP addresses as precursory for many malicious vectors. To cope with these threats, SDN ﬂexibility oﬀers enhanced network manageability. Jafarian et al. [132] proposed a solution that mutates IP addresses of hosts with high unpredictability, so to maximize the distortion of attackers’ network knowledge and increase the deterrence of attack planning. By leveraging SDN-based packet processing, the IP mutation is transparent to the end-host. Also, AnonyFlow [133] is an innetwork anonymization service, which dynamically assigns temporary IP addresses to ensure user privacy. In this way, third parties on the Internet are unable to correlate user traﬃc and compose user proﬁles by observing speciﬁc IP addresses. A proof-of-concept prototype has been implemented using OpenFlow-based switches and has proved endpoint anonymity

at line speed without compromising network performance. Static forwarding routes can oﬀer advantages to cybercrim-
inals to carry out eavesdropping and DoS attacks on speciﬁc traﬃc ﬂows. In [134], a proactive Random Route Mutation strategy is deﬁned to enable dynamic change of forwarding paths, while preserving QoS end-to-end connectivity. SDN ﬂexibility represents the ideal technology for developing and managing random routes, by appropriately updating ﬂows in SDN-switches. To mitigate network analysis and interference analysis, BlackSDN has been proposed in [135], where IoT communications are protected by encrypting the header and the payload. Furthermore, the SDN controller operates as a trusted third party for securing routing and optimizing performance. The framework has been demonstrated for IEEE 802.15.4 networks, with devices operating with diﬀerent duty cycles.
5) Security Network Programmability: The increased network programmability oﬀered by the SDN controller can boost the development and deployment of security network applications. To this aim, the eﬀorts towards the improvement of Northbound APIs and the deﬁnition of SDN-oriented coding languages can introduce several advantages to extend network functionalities [136]. In the context of security applications, the FRESCO framework [137] oﬀers a scripting language to assist programmers in developing new SDN-based security mechanisms, by also leveraging diﬀerent exemplary case studies. Furthermore, the framework also includes reusable modules which can be integrated to develop advanced security features. The FRESCO Application Layer prototype is implemented in Python, and operates as an OpenFlow application on NOX, by embedding a specialized security kernel, Fortnox [138], for the enforcement of relevant ﬂows. However, the proposed approach is generic and can be ported to diﬀerent SDN controllers.
Several works have also proposed some promising extensions of SDN control plane to increase the potential of SDN network applications. Avant-guard [139] has introduced two mechanisms, namely connection migration and actuation triggers. The former can drastically reduce the amount of control traﬃc in case of scanning and DDoS attacks, enabling greater scalability of centralized control. The latter has been designed to improve network monitoring services. These actuation triggers can be used to register for asynchronous call back and add ﬂow rules which are activated when speciﬁc conditions are identiﬁed. The combination of these two mechanisms allows to develop more scalable and resilient security services. The OFX framework exploits the computing capabilities of OpenFlow switches to deploy security applications within the network infrastructure. In particular, OFX [140] allows to install OFX software modules and carry out processing and monitoring tasks directly on the switches. This approach can notably increase the performance of SDN-based security applications by reducing the interactions between the data and control planes.
MEC scenarios, whereby intensive computing tasks are oﬄoaded from mobile devices to (edge) cloud resources, represent an exemplary use case to demonstrate the opportunity to build security applications by leveraging SDN.

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
12

These approaches are also appealing in enterprise contexts where business applications executed in mobile devices can improve enterprise operations. To meet the desired security levels, both performance, strict privacy, and trust requirements should be accounted for. This is particularly challenging in enterprise/campus networks where thousands of IoT devices executing diﬀerent applications and with diﬀerent privileges have to share the same physical and network infrastructure. In this vein, an Enterprise-Centric Oﬄoading System (ECOS) [141] has been proposed to manage oﬄoading by leveraging the enhanced SDN programmability. In particular, ECOS operates an application running on top of the SDN enterprise-wide controller to orchestrate all mobile application oﬄoads using a simple, expressive policy language. Then, the ECOS framework enforces trust and privacy constraints by controlling the ﬂows of traﬃc between mobile devices and selected computing resources, and by triggering additional higher-layer security mechanisms. Another exemplary eﬀort for SDN-based IoT environments is represented by Rol-Sec [142], a role-based security architecture, whereby the SDN controller is distributed according to its security roles. In this way, the architecture can provide extreme scalability by associating diﬀerent controllers to diﬀerent security features. The resulting solution is composed of three controllers: (i) Intrusion controller, which monitors the traﬃc, manages the routes for each ﬂow, and provides secure routing; (ii) Key controller, which is a repository of both symmetric and asymmetric keys, handling their appropriate distribution; (iii) and Crypto controller, which provides cryptographic services, such as integrity, privacy, authentication, and identity management.

Fig. 7. Network Function Virtualization in IoT.
the implemented virtualization technologies, e.g., hypervisor and container engine, respectively [144]. On the other hand, virtual networks include virtual nodes, with either hosting or routing capabilities, and virtual links, which represent the logical interconnection of two virtual nodes, independently from the underlying physical network. The Virtual Network Functions (VNFs) refer to the virtualized implementation of network functions with well-deﬁned functional behaviour and external interfaces. VNFs are deployed over virtual resources, such as VMs and containers. A VNF can be also composed of multiple internal components, where each component can be hosted in a single VM or container and interconnected through appropriate virtual network interfaces. VNFs can be chained with other VNFs and/or physical network functions to implement a network service (NS). The order, type, and number of VNFs, which compose a NS, depends on the expected service functionality.

VI. NFV-based security mechanisms in IoT
The adoption of virtualization technologies within network environments has recently changed the landscape of Telecommunication industries, leading to the NFV paradigm. Indeed, the decoupling of software from hardware can bring notably advantages for both capital and operating expenditures, increasing the manageability, scalability, and resilience of network function provisioning. Furthermore, the ability to deploy on-demand network solutions can notably accelerate in-network processing and ease the composition of integrated services.
A. Background on NFV adoption for IoT systems
ETSI NFV has played a main role towards the standardization of NFV approach, releasing several documents regarding architecture, use cases, guidelines for implementation. The ETSI NFV architecture [143] is composed of three main blocks, which are detailed hereunder. The Network Function Virtualization Infrastructure (NFVI) includes both hardware and software components which are required to create the virtual environment for the execution of virtual functions. Commercial-oﬀ-the-shelves nodes provide processing, storage, and network capabilities which are abstracted through the virtualization layer. The computing and storage virtual resources may be provided in terms of virtual machines and containers, according to

The increased ﬂexibility introduced by virtualized network appliances, as well as the complexity of the underlying infrastructure, has demanded for novel management features. To this aim, ETSI NFV has designed a Management and Orchestration (MANO) framework which controls the eﬃcient deployment of VNFs and it is composed of three main components:
• The Virtualized Infrastructure Manager (VIM) controls the hardware resources provided by the NFVI, as well as the relevant virtualization tools. Since NFVI can span across several physical locations, e.g., where NFVI Point of Presences (PoPs) are operated, the VIM is required to provide management over geo-distributed resources. Its tasks can also include collection of infrastructure information for monitoring, energy eﬃciency, fault, and performance analysis.
• The VNF Manager (VNFM) is responsible for the control of VNFs lifecycle, including the creation, conﬁguration, maintenance, performance, and security management of VNF instances. A VNFM can be deployed either for each VNF or to serve multiple VNFs.
• The NFV Orchestrator (NFVO) has a central role in the framework by covering both resource and service orchestration. To this aim, the NFVO interacts with the VIMs to provide the resources necessary for hosting VNFs, and with the VNFM to manage the conﬁguration of relevant VNFs.

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
13

NFV can be also seen complementary to Edge computing, to deploy both software-driven network and application functions over the same virtualized infrastructure [145]. On the other hand, the IoT landscape introduces several challenges for the adoption of NFV paradigm, especially related to the resource constraints, the massive traﬃc requirements, and the mobility of IoT nodes. The evolution of lightweight virtualization technologies is tremendously impacting the NFV implementation, enabling the opportunity to deploy VNFs at the extreme edge of the networks [146], including IoT smart devices, as drawn in Fig. 7. In this vein, several works have proposed increasing the capabilities of IoT gateway to execute ondemand VNFs according to the application’s requirements [147] [148]. Furthermore, the potential of hosting VNFs on top of smart IoT devices, such as smart cars [149], can open up the range of supported services providing ﬁne-grained access to sensitive information and enhancing local data processing.
B. NFV security features in the IoT ecosystem
The NFV paradigm can oﬀer novel security strategies to cope with IoT vulnerabilities, especially accounting for the heterogeneity of IoT devices and their expected massive deployment. Indeed, Telco providers can extend the potential services oﬀered to their customer including the Security-as-aService model [7], where prevention and defense mechanisms are provided on-demand. By adopting the NFV paradigm for IoT environments, several opportunities for enabling and eﬃciently orchestrating security enablers can be also introduced, as described in the following analysis of the key features of NFV-based security mechanisms. In this vein, the Cloud Security Alliance (CSA) has deﬁned guidelines for clouddelivered defence solutions, to assist enterprises and end-user to widely adopt this security paradigm shift [150]. The NFV approach presents remarkable advantages with respect to the hosting in remote cloud data centers, since the virtualized security functions can be deployed along the forwarding path, avoiding ineﬃcient traﬃc detouring. In the following, we describe the main security features of the NFV paradigm for IoT systems. Similarly to the SDN security analysis provided in the previous section, our evaluation of NFV security features is complemented with the description of exemplary literature works, aiming to derive remarkable ﬁndings in the potential application of NFV-based security mechanisms to increase IoT protection.
1) Decoupling security software from hardware: The basic principle of NFV deals with the opportunities to use commodity servers for deploying virtualized network functions, including security appliances, such as ﬁrewalls and DPIs. In this vein, [151] the APLOMB (Appliance for Outsourcing Middlebox) architecture has been introduced to oﬀer network processing as cloud service. This system relies on the deployment of middleboxes as virtual instances over cloud infrastructures, and appropriate forwarding of the network trafﬁc towards the virtualized instances. Furthermore, providing Deep Packet Inspection as a Service [152] for various security functions can lead to signiﬁcant performance improvement.
The oﬄoading of security functions to virtualized instances can be also extremely useful for IoT networks, accounting

Fig. 8. Scaling features of security VNFs at the network edge.
for the constraints of IoT devices. Furthermore, the oﬄoading of security functions to external virtualized security functions can notably reduce the challenging problem of security administrator to implement the same level of protection over heterogeneous IoT devices. Cheng et al. [153] have introduced a framework aiming at blocking malware propagation by patching intermediate nodes, e.g., IoT gateways or access points, and securing infrastructure links. This scheme represents a more feasible solution instead of patching a broad range of resource-constrained IoT devices. By leveraging analysis on traﬃc patterns and IoT malware infection strategies, an eﬃcient selection of the intermediate nodes to apply security patches can be carried out for ensuring timely mitigation of compromised IoT nodes.
Yu et al. [2] proposed an IoT security architecture, called IoTSec, envisioning customized micro-middleboxes, µmboxes, which can be rapidly instantiated over lightweight platforms. The analysis in [154] aims at shedding light on the feasibility of container-based security solutions on resourceconstrained edge nodes. The experimental assessment compares the native execution of security functions and their respective containerized counterparts. The results show an extremely low overhead of container-based security functions with respect to native execution, therefore supporting the provisioning of virtualized security functions even in constrained IoT environments. In [155], a new NFV-based security framework is proposed where virtualized security applications are instantiated in a user-speciﬁc Trusted Virtual Domain (TVD) in a network edge device. In this scenario, the trustworthiness of the TVD becomes essential since the security applications is executed on behalf of the user’s devices and appropriate isolation mechanisms are required to guarantee the isolation between diﬀerent users’ security functions.
2) On-demand scalability and fault tolerance for security VNF: By exploiting the dynamic instantiation of VNFs, network administrators can achieve a higher level of scalability and allow ﬁner resource optimization. In this way, virtual security network functions can be scaled up/down according to the current workload of incoming traﬃc requests, as demonstrated in [151]. To optimize the auto-scaling procedure, it is essential to assess the impact of hardware and virtualization

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
14

Fig. 9. Security VNF migration in mobile IoT environments.

Fig. 10. SDN-based chaining of virtual security functions for IoT environments.

features on the VNF performance. Cao et al. [156] have proposed a framework, NFV-VITAL (Virtualization Impact on Throughput and Load), for characterizing VNF performance based on user preference and available resources. The analysis of virtualized IDS solutions, such as Snort and Suricata, has demonstrated the beneﬁts for selecting the optimal sizing and conﬁguration. As shown in Fig. 8, the beneﬁts of lightweight vitualization can guarantee the possibility to scale up/down security VNFs, such as IDS, according to traﬃc demands even at the network edge. The high scalability of virtual security instances allows to reduce the probability of dropping packets during network analysis and, thus, ensures high threat detection rate, independently from the traﬃc variations. This ﬂexibility can be also enhanced by advanced orchestration of MANO-based IoT platform, able to balance the load of security VNFs over distributed edge nodes.
Another appealing feature, enabled by the virtualization technologies, deals with fault tolerance capability which can ensure the survivability of security functions. Several solutions are available to enable resilience and availability for cloudbased deployment [157]. In [158], state-aware replicas of virtual middleboxes are maintained, so that in case of a failure, a backup instance can be elevated to become master and handle the incoming traﬃc. There is an inherent trade-oﬀ in the number of replicas: this selection can depend on the criticality of the IoT security service to be guaranteed.
3) Mobility support of security VNF: Mobility represents a key feature for a broad range of IoT applications where IoT devices, such as wearables brought by human for continuous health monitoring and vehicular applications, can be always connected through diﬀerent network access technologies. In this vein, the opportunity to instantiate virtualized network functions provides new ﬂexibility in supporting the desired packet processing requirements near to the IoT device. This approach is well explained by the paradigm ”Follow-meedge” [159] where virtualized services can be seamlessly moved over diﬀerent edge nodes to support manifold IoT applications with mobile devices [160] [161]. The proposed scheme represents an important solution for reducing core network traﬃc and ensuring ultra-short latency through a smart MEC architecture. In the context of security service oﬄoading, the capabilities of seamlessly migrating virtualized

security appliances is fundamental to guarantee the protection requirements, along the device mobility. This concept of VNF migration is represented in Fig. 9, where an instance of virtual Firewall is migrated between edge clouds according to the connected IoT device position, ensuring seamless protection even in mobile IoT environments [162]. In [163], a framework to support migration of virtual security instances near the end-user devices has been devised. The proposed approach leverages the use of virtualization technologies and SDN networking to manage the migration of security applications at the network edge, while minimizing the disruption of ongoing connections. Furthermore, VNF migration can represent a potential strategy to cope with compromised underlying infrastructure [164]. Indeed, the decoupling from hardware can allow moving sensitive targets and network functions from a compromised node to another trusted environment.
4) Security network service chaining: The increased ﬂexibility of NFV paradigm allows improving the timeliness in the provisioning of services, as well as opens up a broader range of service composition accounting for ﬁne-grained user requirements [165]. These advantages are also of notable interest for security domains where user traﬃc can be processed through chains of virtualized middleboxes, drastically reducing operational costs of network operators and improving resource utilization [166]. Furthermore, to carry out eﬃcient security service chaining, SDN is complementary to NFV as it allows for highly elastic strategies to optimize traﬃc ﬂows along the security VNFs chain, so to maintain endto-end QoS. In Fig. 10, we report an illustrative example of joint SDN and NFV usage for security purposes in IoT environments. In particular, the traﬃc steering capabilities of SDN network are used to forward the traﬃc generated by (or directed to) IoT devices towards an NFV-based PoP, through a VXLAN tunnel, for security data processing. SDN is also used for NFV service chaining, steering the traﬃc through the security VNFs in the desired order by appropriately managing the routes in the SDN-controlled OVS switches. This joint adoption of SDN and NFV notably increases the ﬂexibility in the implementation of the security policies by allowing dynamic instantiation of new security VNFs and appropriately modifying the IoT traﬃc routes.
In this vein, the SIMPLE framework [167] is an SDN-

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
15

based policy enforcement framework which simpliﬁes the traﬃc forwarding among middleboxes. In particular, SIMPLE translates logical middlebox routing policy deﬁned by the security administrators into forwarding rules, while accounting for the status of links and SDN switches, as well as middlebox resource constraints. As also remarked in [168], NFV ﬂexibility requires appropriate network management to ensure that traﬃc is correctly forwarded when VNFs are either scaled or migrated, accounting for their internal states. To allow consistent reallocation of ﬂows across VNF instances, OpenNF introduces a dedicated control plane to ensure coordinated control of both VNF states and network forwarding states. By leveraging speciﬁc APIs and primitives, the control plane can consistently move security VNF states along with dynamic ﬂow management, with a low overhead in terms of VNFs development.
An initial promising example in the joint use of cloudbased security and SDN features is oﬀered by Securebox [158] which aims at providing a composition of defense and management services for IoT systems, including device state conﬁguration and traﬃc analysis. The platforms consists of two main components: (i) the Securebox frontend is a programmable gateway which uses SDN to dynamically conﬁgure the network ﬂows for each attached device and to enforce the security policies; (ii) the Security and Management Service (SMS) is a cloud-based environment to deploy virtualized middleboxes according to the IoT security requirements. The SMS receives and analyzes the traﬃc ﬂows from all the connected Securebox gateways. In this way, it can combine relevant analysis with updated knowledge (e.g., related to virus signature database) and provide enhanced detection solutions with respect to traditional network perimeter security systems.
VII. Lessons Learned in the Adoption of SDN/NFV-based Security Solutions for IoT Systems
Due to the heterogeneity of IoT systems, the enforcement of appropriate security and privacy requirements is highly challenging. Conventional security solutions can hardly cope with the increasing security vectors against IoT. In this section, we discuss how the manifold features of SDN and NFV paradigms make these technologies the best candidates to complement conventional IoT security solutions in several aspects and bring notable advantages to increase the end-toend protection of IoT systems. In Table II, we show how the combination of SDN and NFV can be leveraged to enhance security mechanisms for IoT devices. In particular, for each identiﬁed security enabler, we present the SDN/NFV-based counterparts and the IoT security threats which can be tackled accordingly. Compared to traditional IoT solutions, scalability is one of the strongest aspects introduced by SDN and NFV. Oﬄoading the extra processing required by security from either the gateways or the IoT devices to the network improves their energy eﬃciency and ensures more scalability to support the rising amount of traﬃc and functionalities. Moreover, thanks to the dynamic allocation of network and processing resources, virtual security appliances (e.g., vIDS, vDPI, and vFirewalls)

can be scaled up/down according to the amount of traﬃc and to the number of attached IoT devices. We remark that NFV paradigm is strongly complementary to the security enablers developed so far, allowing to move from dedicated hardware to software instances. To further improve the performance, software-based security appliances can be refactored accounting for the latest micro-service development paradigm and cloud-oriented programming style [169], which promises to fully exploit the advantages oﬀered by cloud environments in terms of scalability and reliability. On the networking side, the rise of IoT systems can be eﬃciently supported by the SDN infrastructure. Indeed, most of SDN controllers support distributed control planes, dynamic allocation of bandwidth, and OVS (Open Virtual Switches) ensuring optimal routing and improving the reactivity and availability of the network, even in case of security attacks. SDN and NFV can be also the enabling key feature to deal with IoT management issues. Having a uniﬁed system, at diﬀerent levels, is essential for IoT device management. To this aim, several works have been conducted to design SDNenabled IoT gateways and sensors based on the Openﬂow protocol, OVS and programmable IoT applications [170] [171], as also discussed in Section V-A. This closes the gap between speciﬁc IoT device applications and network programmability. Having this level of ﬂexibility does not only improve the resiliency of the infrastructure against failures, but also enables multi-level security enforcement. Indeed, SDN applications can implement stateless ﬁrewalls at the edge of the IoT network installing appropriate ﬂows in the SDN physical/virtual switches. On the other hand, if the security policies require more advanced traﬃc ﬁltering features, SDN can allow to reroute the traﬃc towards virtual stateful ﬁrewalls, deployed through NFV platform. This ﬂexibility is extremely useful to satisfy the demanding and extremely granular security policies of IoT systems. In an SDN environment, the SDN controller manages and supervises the entire network. Having a global vision of the network topology and real-time state allows the SDN controller to manage the network in an eﬃcient way, ensuring the best routing decisions according to the desired Service Level Agreement (SLA). SDN is also capable of providing platforms for a wide range of diﬀerent vendors and applications using multiple gateways and supporting multiple IoT devices [172] [173]. As a consequence, security administrators can use advanced mechanisms to control the network behaviour according to the desired security policies. Moreover, virtual security appliances can be deployed in diﬀerent environments, such as data centers, core networks, and IoT access networks with diﬀerent conﬁgurations according to the underlying virtualization infrastructures [174]. IoT environments have to deal with rapid changes in the network to mitigate the growing number of security issues. It is not feasible for general users to manually conﬁgure each device to ensure the desired security properties. Having the latest security updates is mandatory and it should be handled by specialists. In this context, using SDN and NFV, administrators can maintain the security enablers up-to-date making it transparent to the end users. This also enables the feasibility of

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
16

traﬃc-aware patching methodologies which can be extremely useful to address malware propagation, as elaborated in [153]. These patches can be provisioned and deployed at diﬀerent levels of the infrastructure (i.e., core, edge and IoT networks) to ensure the protection of IoT solutions. Moreover, in the context of self-defense, IoT devices are often low-energy devices which make their self-defense capabilities very limited. Oﬄoading security features on higher performance hardware (cloud network servers) allows increased security standard protection, while saving device energy and manufacturing costs. In this context, resource intensive security appliances, such as DPIs, can really beneﬁt from the extra available computation capabilities in cloud-enhanced network nodes. Finally, this extra performance ﬂexibility enables function service chaining, which allows network operators to dynamically provide security features at diﬀerent levels without requiring physical changes, either to the physical networks or to the IoT devices.
VIII. Open research areas
In this Section, we aim at deﬁning the most promising research areas towards the broad deployment of SDN/NFVbased security solutions in IoT systems. Accounting for the complexity of IoT systems, our discussion aims at providing a comprehensive study of cutting-edge research eﬀorts in these areas, so to cover the implementation of SDN/NFV-based security mechanisms at diﬀerent levels, such as IoT access networks, core networks, and cloud/edge data centers. Our analysis covers the following research issues:
• the deﬁnition of IoT security policies introduces several challenges related to the level of abstraction in the security requirements, the formal language to be used for policy encoding, and contextual IoT aspects to be considered for an eﬃcient use of SDN/NFV-based security mechanisms;
• the orchestration of SDN/NFV-based security solutions over heterogeneous IoT environments stimulates the research and development of appropriate federation schemes, so to seamlessly enforce innovative protection mechanisms across diﬀerent technological and administrative IoT domains;
• the inherent security of SDN and NFV frameworks represents one of the main challenges towards the eﬀective adoption of software-driven network security mechanisms, even more emphasized when considering the additional threats derived by the integration of IoT systems;
• the optimal selection of SDN/NFV-based security mechanisms can notably aﬀect the experienced network and service quality, especially accounting for mission-critical IoT applications with stringent requirements in terms of latency and reliability, thus requiring novel analytical models and evaluation tools for security administrators;
• the granularity of protection mechanisms represents an open challenge in the provisioning of network slices tailored for IoT applications, considering the inherent trade-oﬀ among ﬂexibility, performance, and cost.
These open issues are extensively discussed in the next subsections, to drive the research towards the eﬀective realization of

SDN and NFV-based security solutions able to ensure eﬀective end-to-end IoT protection.
A. Policy deﬁnition for SDN/NFV-based IoT security
Deﬁning the security policies for IoT systems has a particular urgency due to the uniﬁcation of physical and data domains, which can severely increase the risks of cyber attacks. To accelerate the path towards broad usability, IoT systems need to incorporate contextual policies deﬁnition (for consumers, enterprises, and public governments). The ultimate objective is to ensure an abstraction of high-level security requirements from one side and low-level conﬁguration of security mechanisms from the other side. Allowing a higher degree of ﬂexibility and manageability is strictly compelling for IoT involving the security of heterogeneous networks and devices. Indeed, expressing security requirements to govern distributed IoT systems represents a challenging task, especially when diﬀerent administrative and technological domains are involved. To this aim, a Hierarchical Policy Language for Distributed Systems (HiPoLDS) [175] has been proposed focusing on decentralized service-oriented execution environments. HiPoLDS increases the abstraction of security policies in a concise and readable way, by allowing to specify the desired security properties along with the mechanisms to be implemented.
Similarly for SDN and NFV environments, several eﬀorts towards security policies deﬁnition have been carried out. In [176], policy reﬁnement for NFV environment has been deﬁned through a double-step translation process. The security requirements are initially formulated in a High-Level Policies (HLP) language which follows the subject-object-attribute paradigm. By identifying the required security functions, the HLP policies are then translated in Medium-Level Policies (MLP) language which introduces an abstraction from the lowlevel details of potential VNF implementation. In the last step of policy reﬁnement, MLP scripts are translated in speciﬁc VNFs’ conﬁgurations to enable their eﬀective instantiation. In [177], an OpenFlow-based security framework, OpenSec, has been proposed allowing a security administrator to specify and implement policies in human readable language. The policies include a description of the ﬂow in terms of OpenFlow matching ﬁelds, security services to be applied to that ﬂow (i.e., IDS), and strategies to react in case of a malicious threat is detected.
However, the speciﬁc features of IoT domain require also to extend policy deﬁnition accounting for contextual information, so to make relevant protection mechanisms more eﬀective [2]. Security policies may also depend on the interactions among smart objects located in the same environment. All these aspects demand for empowering current policy templates to include the peculiarities of IoT systems, as well as the potential of novel software-driven security mechanisms.
B. Federation of security mechanisms over heterogeneous domains
This research area tackles the issues related to the development of appropriate security tools which are adapted

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
17

Security Enabler

TABLE II Comparison of Conventional IoT Security Enablers with SDN/NFV-based Approaches.

NFV

SDN

IoT Security Threats

Intrusion Detection System

Virtual Intrusion Detection System (vIDS) as a
software instance on a cloud-enabled network.

Mirror the traﬃc to be analyzed by the vIDS using
a secure data tunnel.

• Denial of Services attacks • Flooding attacks • Policy violation • Selective forwarding attacks • Sybil attacks • Abnormal network activities • Battery draining attacks

Firewall

Virtual Firewall (vFirewall) as a software instance on a
cloud-enabled network.

Route the traﬃc through the vFirewall using a secure data tunnel.
SDN traﬃc ﬂow management to operate as
a stateless ﬁrewall.

Deep Packet Inspector

Virtual Deep Packet Inspector (vDPI) as a software instance on a cloud-enabled network.

Mirror the traﬃc to be analyzed by the vDPI using
a secure data tunnel.

Encryption
Authentication and Authorization

Virtual Encryption Proxy (vProxy) as a software instance on a cloud-enabled
network.
Virtual Authentication, Authorization, and
Accounting framework (vAAA) as a software instance on a cloud-enabled
network.

Re-route the traﬃc to be analyzed through the
vProxy using a secure data tunnel.
Create secure network tunnels for IoT data
transport.
Inject the relevant ﬂow rules for each authenticated
IoT device.

Security Service Function Chain (Security SFC)

Multiple security VNF instances (e.g., vDPi, vFirewall, and vIDS).

Manage the ﬂows to and from the Security SFC using packet tagging.

• Access control • Port scanning • Denial of Services attacks • Fragmentation attacks • IP spooﬁng attacks
• Spooﬁng attacks • Malicious code injection attacks • Abnormal network activities • Excessive bandwidth usage • Malformed network packets • IP spooﬁng attacks
• Man-in-the-middle attacks • Eavesdropping attacks • Data alteration • Sniﬃng attacks • Impersonation attacks
• IoT authentication inter-working • Service logging failures • Access control • User activity tracking
• A combination of security threats (depending on the security enablers which are part of the implemented service chain).

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
18

to the heterogeneous nature of IoT systems. Indeed, potential security mechanisms can be enforced at diﬀerent levels, such as IoT access networks, core networks, and cloud/edge environments. Furthermore, protection solutions for IoT can include a combination of conventional and novel IoT security approaches. In this context, the enforcement of SDN/NFVbased security mechanisms over diﬀerent wired and wireless IoT ecosystems in a transparent way represents an open research challenge, with potentially great impact on the security implementation strategies. Indeed, interoperability is a core principle in IoT design and development, and its beneﬁts should be also ensured in the security area. To this aim, it is worthwhile browsing the main recent eﬀorts towards the orchestration of security mechanisms for NFV and SDN environments, as a basis for future enhanced IoT solutions.
Shin et al. [137] have proposed an OpenFlow security application development framework, FRESCO, to boost the rapid design of security applications. To this aim, diﬀerent security detection and mitigation modules can be combined to fulﬁll the desired security requirements. Furthermore, the OrchSec framework has been proposed in [178] aiming at jointly utilizing network monitoring appliances and SDN control functions to develop security applications. The advantages of the proposed framework have been evaluated for a DNS ampliﬁcation attack. Olivier et al. [179] have presented an SDNbased security architecture for IoT with multiple SDN domains where each domain can represent an enterprise network or a datacenter. Each domain is controlled by one or multiple SDN controllers and has its own security strategy. To allow a distributed enforcement of network security, this solution proposes the exchange of respective security requirements among domain SDN controllers. However, the east/westbound interfaces of SDN controller require further investigation, to fully ensure the security requirements over heterogeneous IoT domains.
With regard to the management of security in NFV environments, a Security Orchestrator has been devised in [180] to manage security over a hybrid Telco network, so to conﬁgure both physical and virtual network functions. Several responsibilities, such as Security Proﬁle, Security Policy Management and Automation, and Trust Management, should be implemented in the Security Orchestrator to fully meet the end-to-end security. Furthermore, the interworking with current ETSI NFV MANO module has been described to coherently deploy physical/virtual security network functions. The ANSwer architecture [181] aims at combining VNFs and SDN features to deliver a set of strategies for network resilience, also accounting for potential security threats. The proposed architecture relies on a continuous monitoring of the network infrastructure and a feedback control-loop systems to timely provide remedial actions. The SELFNET architecture enriches SDN/MANO with self-management features for overall performance improvement in a fully autonomous way. Particular eﬀorts are addressed to improve security features management and protect against malicious threats. Security VNF chains are dynamically adjusted and deployed across the networks by the autonomic management system. However, all the above-mentioned solutions do not speciﬁcally take

into account IoT systems’ characteristics to provide integrated security.
To address security IoT challenges, Choi et al. [182] have proposed the SDIoT security framework for the conﬁguration of software-deﬁned IoT environments. The approach combines SDN features with Big Data security analysis to provide a broad range of protection mechanisms for IoT devices. Besides, a reactive security framework [183], based on SDN and Service Function Chaining (SFC), has been speciﬁcally designed for industrial wind parks. After detecting potential security threats, the proposed solution can perform dynamic network reconﬁguration, steering the malicious traﬃc towards speciﬁc security mechanisms, such as SCADA honeypots, tailored to the wind park operations. In [184] [185], an architecture to orchestrate SDN, NFV, and conventional IoT security mechanisms has been proposed within the EU H2020 ANASTACIA project. In particular, the Security Orchestration plane aims at enforcing the deployment and conﬁguration of physical/virtual security enablers in an automatic way. By also leveraging the outputs of Monitoring and Reaction components, the Security Orchestation plane can identify potential deviations from the required security policies and dynamically enforce appropriate countermeasures.
To sum up, in Table III, we report the main investigated security orchestration solutions for SDN/NFV, classifying them accounting for features in terms of policy support, integrated detection mechanisms, and autonomic reaction. Furthermore, since the integration of heterogeneous security mechanisms is crucial, we report the main supported enforcement environments: SDN, cloud, ETSI NFV MANO, and IoT. Indeed, still several eﬀorts are required to develop appropriate federation schemes so to seamlessly enforce security mechanisms across diﬀerent technological and administrative IoT domains. To this aim, the deﬁnition of open and standardized management interfaces also represents an essential step to provide a holistic view of end-to-end security over private and public IoT ecosystems.
C. Securing SDN-NFV platforms
The security issues of both SDN and NFV are outside the scope of traditional security frameworks, because they involve securing the control planes that manage virtual resources and their relationships with applications and services. The adoption of virtualization technologies and SDN in Telco networks has introduced new potential security attacks which can potentially impact the eﬃciency of envisioned security approaches described in Sections V and VI. Furthermore, the extension of these paradigm to IoT ecosystems can even increase the risks accounting for the manifold heterogeneous connected devices and can cause more dramatical eﬀects than in conventional networks. In the following subsections, we illustrate the security implications of emerging SDN/NFVbased networks for IoT, reporting the current state-of-the-art solutions and devising potential research directives.
1) SDN threats for IoT networks: SDN oﬀers novel capabilities to monitor the traﬃc and adapt on-the-ﬂy the network ﬂows according to security demands. However, the increased

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
19

TABLE III Review of security orchestration proposals.

Proposal
[137] [178] [177] [179] [180] [155] [181] [158] [164] [182] [183] [184]

Features

Policy-based orchestration Detection

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

Autonomic reaction
+
+ +
+ + + +

Security Enforcement Domains

SDN Cloud ETSI NFV MANO IoT

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

+

ﬂexibility and centralized control can generate additional attacks [186]. We present a list of security threats based on the three main components of SDN networks, namely switches, controllers, and communication interfaces.
A ﬁrst kind of security attacks concerns the failure of a SDN switch due to ﬂow rule ﬂooding, able to consume the whole ﬂow table. This attack becomes extremely dangerous especially accounting for the resource constraints of SDNenabled IoT devices. Malicious attackers can also attempt to either tamper ﬂow rules for compromising the expected traﬃc ﬂows or masquerading the legitimacy of a network element by leveraging spooﬁng approaches and the heterogeneity of IoT environments. A more severe attack deals with taking control of an SDN switch (i.e., hijacking) to compromise network behavior and infer conﬁdential information within the system. Furthermore, in case of IoT environments, diﬀerent wireless communication schemes, used for either control and data planes, can be targeted by security attacks. An increasing number of systems are also embracing software deﬁned radios (SDRs) due to the several advantages in dynamic spectrum management, such as in Software Deﬁned Vehicular Networks. Malicious conﬁgurations of SDR interface can lead to illegal use of relevant services, severely impacting the stability of network behavior, as investigated in [187].
The SDN controller embodies the network intelligence to manage the traﬃc ﬂow forwarding, thus increasing the potential attractions of attackers since it represents a single point of failure. DoS attacks carried out by saturating the control links can dramatically impact the network performance, slowing down the request processing or making the SDN controller fully unavailable. Accounting for the capabilities to control the global infrastructure, network misconﬁguration and ﬂow tampering rules can be even more dangerous than similar attacks in SDN switches. For example, dynamic ﬂow tunneling has the potential to orchestrate rules in such a way that no single rule violates any ﬁrewall setting, but they can jointly bypass security policies over inter-federated IoT environments. Finally, the hijacking of the SDN controller provides cybercriminals with extremely dangerous privileges to exploit the

whole network for malicious purposes. To ease programmability and management, the communi-
cation interfaces are fundamental to conﬁgure the network behavior in SDN networks. However, vulnerabilities in these communication channels can be exploited by attackers. Lack of encryption between SDN switches and relevant controller represents a remarkable risk to violate the conﬁdentiality of interactions. Similarly, Man-In-The-Middle attacks can leverage weaknesses in trust mechanisms to impersonate the legitimate elements and tamper network conﬁgurations. The northbound interfaces between SDN controllers and applications suﬀer from lack of standardization and can represent a threat vector to trick or even manipulate the SDN controllers. Also, in case of federated IoT networks, the east/westbound interfaces among SDN controllers should be uniformly deﬁned so to enable cross-boundary security policy enforcement and reduce potential vulnerabilities.
Diﬀerent works have started to investigate and address some of these challenges [188] [189]. In this vein, Kreutz et al. [186] have suggested manifold approaches: (i) stringent authentication mechanisms and trust models to cope with common identity-based attacks; (ii) sandboxing techniques to isolate domains through well-deﬁned interfaces that allow minimal set of operations; (iii) tamper-proof devices to securely store sensitive data. In [139], an extension of the data plane has been proposed to face the SDN saturation attacks that disrupt network operations as a consequence of scanning and DDoS attacks. FortNOX [138] has introduced a software extension for the NOX SDN controller to provide role-based authentication and security constraints enforcement by checking ﬂow rules conﬂicts. In this way, FortNOX can identify malicious SDN applications which attempt to add ﬂow rules aiming at circumventing secure traﬃc forwarding conditions. Li et al. [190] have investigated MitM attacks in IoT-Fog networks, highlighting the potential threats for IoT local area networks, by modifying ﬂow tables, collecting information, and poisoning the controller’s view. To eﬃciently detect MitM attacks, the authors have extended the OpenFlow protocol to incorporate Bloom ﬁlter mechanisms.

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
20

2) NFV threats for IoT networks: The possible security attacks for NFV-based networks can be categorized accounting for the logical blocks identiﬁed by the ETSI NFV architecture speciﬁcations.
The ﬁrst potential security threat for virtualization infrastructure concerns the isolation failures, which can be carried out leveraging hypervisor and container engine vulnerabilities from one side, and network misconﬁguration from the other side. The potential risks are even more augmented in IoT virtualized environments due to the heterogeneity of systems. Also, the opportunity to execute VNFs over third-party infrastructure opens up potential risks related to its trustworthiness. Indeed, a malicious administrator has the root access to the hypervisor and can violate data integrity and conﬁdentiality of hosted VNFs, thus severely impacting their correct behavior. Indeed, accounting for the exponential increase of micro edge data centers, veriﬁcation of their trustworthiness can be highly challenging [191]. Lack of monitoring for the underlying hardware resources represents a potential security ﬂaw during the whole system lifecycle, from booting to run-time operations.
Further issues are related with the management and the deployment of VNFs over multiple environments. The exchange of relevant images, which contain all software components and conﬁgurations, can be intercepted by a malicious attacker, aiming to tamper the image in transit. Potential security threats for VNFs are also represented by their public interfaces, which can be attacked by external malicious entities, e.g., leveraging DDoS attacks. Furthermore, a compromised VNF can cause an avalanche eﬀect, increasing the risk to compromise other VNFs involved in the same service chains and even other VNFs hosted in the same cloud environment, if appropriate isolation mechanisms are not adopted.
Accounting for the core roles in the orchestration of VNFs, the MANO modules represent the main target for any attacker since their hijacking can allow to control the remaining NFV components, e.g., by leveraging leakages in the authentication and authorization systems. Another crucial aspect deals with the misconﬁguration of security policies, which can cause issues in the enforcement of security mechanisms according to the desired Service Level Agreement (SLA). As a result, malicious attackers can exploit any vulnerability to compromise deployed VNFs or other NFV MANO components. In this context, the fragmentation of VNFs represents a remarkable challenge in the enforcement of security policies over such a heterogeneous environment.
To face the above mentioned issues, the ETSI NFV security groups have released several speciﬁcations, providing guidelines in the management of security issues for NFV platforms. Several works in the literature have also investigated potential remediations against some of the above-mentioned issues. In [192], a security extension of NFV orchestrator has been proposed to enhance the capability of managing security mechanisms. To this aim, the TOSCA model has been extended to include security properties for each involved VNF. The template is then processed by a security policy engine which accordingly enforces relevant access control mechanisms. In [193], speciﬁc mechanisms to ensure VNF image integrity have been proposed for Telco networks. Besides, the

VNF-Host sealing process has been devised to bind some VNF instances to a speciﬁc compute host which satisﬁes a set of system conﬁguration policies. In [194], the NFVI Trust Platform (NFVI-TP) has been introduced by providing a root trusted module (RTM) to ensure every component built upon it is trusted. This middleware layer includes several trusted management components to verify the trustworthiness of security VNFs. Also, diﬀerent NFVI-TPs can exchange trust information in a secure way to provide the reputation management system with appropriate feedback on VNFs performance. To tackle the issues of data conﬁdentialiy and integrity in Telco cloud environments, an encryption service has been introduced in [195] to provide end-to-end protection between cloud hosts and among VNFs. Deng et al. [196] proposed a new framework for an eﬀective provisioning and management of virtualized ﬁrewalls (vFW) to safeguard virtual networks. To this aim, they have deﬁned a high-level ﬁrewall policy language, ensuring increased ﬂexibility and mobility to protect VNFs, by leveraging features provided by both NFV and SDN. The VNGUARD framework transforms user policies to lowlevel ﬁrewall rules, then identiﬁes an optimal placement, and adapts the conﬁguration of the virtual ﬁrewall according to virtual network changes.
Despite the notable recent works to increase the security of NFV frameworks, further eﬀorts are required to deal with scenarios where enhanced IoT access networks are fully integrated. The management of NFV platforms will need to ensure the protection and trustworthiness of executed VNFs not only in cloud-based Telco PoPs, but also on customer premise equipments and user equipments with virtualization capabilities, as discussed in Section VI-A. This can involve several issues in terms of reliable lightweight virtualization technologies, secure control protocols, and trust mechanisms suitable with the constraints of IoT nodes. Complementary to the security of SDN approaches, this represents a primary research area towards the eﬀective adoption of software-driven security solutions for IoT systems.
D. Optimal selection of SDN/NFV-based security mechanisms
In this survey, manifold novel security mechanisms based on SDN and NFV have been examined for IoT systems. This increased variety of available solutions open up new challenges in the selection of the most appropriate security enablers. Indeed, some of the security mechanisms envisioned in Sections V and VI present some overlapping features, requiring further investigation to better evaluate the application scenarios and their potential integration with existing security solutions, especially accounting for the particularities of IoT systems. To evaluate the feasibility of SDN security mechanisms, Yoon et al. [128] have analyzed if SDN technologies can eﬀectively enhance or replace the current security functions through the implementation of several representative SDN-based security functions (e.g., ﬁrewalls and network anomaly detectors). Their analysis in a realistic testbed has provided useful insights on achievable performance, also highlighting the impact of hardware features in the overall results. Similar evaluation for security VNFs has been carried out in [197] [198], where the

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
21

performances of a ﬁrewall implemented as a virtual network function have been analyzed using oﬀ-the-shelves server.
Furthermore, the increased ﬂexibility of NFV-based security provisioning introduces new challenging problems, such as which security services to implement, where to place and how to conﬁgure them [199] [200] [201]. This results in complex multi-dimensional optimization problem to determine the best allocation for virtualized security services. In [202], a preliminary model has been introduced considering three diﬀerent actor perspectives: (i) users, who deﬁne the security requirements they need; (ii) developers, who specify the capabilities of their security applications, as well as the resource requirements to ensure desired performance; (iii) network operators, who are in charge of the cloud-based network topology and the relevant available resources to support security service provisioning. This model can be used to carry out an initial dimensioning of the system infrastructure, according to the expected number of customers and pre-deﬁned security policies. The design of a run-time optimizer represents an even more challenging step since current workload should be accounted for in the reconﬁguration of the security mechanisms, especially for the dynamic features of IoT systems. This on-demand adaptation can be triggered in the presence of mobile IoT devices which can change their access to the network, and in case of new identiﬁed security threats. We also remark that the provisioning of security should account for security-related best practices and recommendations [203]. Indeed, considering only the cost optimization in the chaining of virtual functions can lead to deployments which violate potential security patterns. This can be extremely complex especially in multi-domain IoT network infrastructures, where several security and trust criteria should be taken into account.
Last but not least, security mechanisms involve the consumption of extra resources which can impact the perceived QoS and cause a system performance degradation. In [204], the QoS2 (Quality of Service and Security) framework is proposed to enable protection from malicious threats in an autonomous way, by dynamically relaxing or increasing security features. The framework is also able to adjust the level of security while ensuring acceptable QoS levels employing a Multi Attribute Decision Model approach. However, the research challenge related to the optimal selection of SDN/NFVbased security mechanisms is even more emphasized in IoT systems, where involved devices are characterized by resource constraints [205]. Therefore, the tuning of security mechanisms represents a key step to ensure the desired performance, especially accounting for the strict requirements of missioncritical IoT applications. In this vein, new analytical models and evaluation tools are required to assist network and service designers in the selection and optimization of SDN/NFV-based security mechanisms for IoT solutions.
E. Providing customized network security with network slicing
The joint use of SDN and NFV also represents the basic foundations for more advanced management of network and application services within the network domain. In this vein, the concept of Network Slicing has recently attracted

academia, industries, and SDOs such as 3GPPP and ITU. A “slice” is deﬁned as an isolated set of programmable resources to implement network functions and application services through software programs for accommodating individual network functions and application services within each slice, without interfering with the other functions and services on coexisting slices [206]. This concept is extremely promising for the provisioning of IoT solutions which typically include multiple components deployed in distributed environments, as described in Section II. 5G network slices can provide endto-end connectivity from IoT devices to cloud data centers and end-users while guaranteeing the desired performance [207]. Indeed, IoT applications are extremely variegated and present potentially conﬂicting security requirements. Accommodating IoT device security requests over the same physical infrastructure represents a complex task. Preliminary eﬀorts have been conducted towards the provisioning of customized slices. PERMIT [208] aims at creating Virtual Mobile Network slices for speciﬁc verticals, taking into account inputs related to mobile service usage behaviour, perceived QoS, and mobility. In [209], 5G network slices customized for vehicleto-everything services have been devised, involving vehicles exchanging data with each other, with the infrastructure and any communicating entity for improved transport ﬂuidity, safety, and comfort on the road. However, security challenges have not been comprehensively investigated in the network slicing domain yet. An exemplary open challenge deals with the granularity of SDN/NFV-based protection mechanisms related to network slicing, accounting for the inherent tradeoﬀ among ﬂexibility, performance, and cost. Indeed, slices and relevant security features can be provided: per vertical, per IoT tenant, per single device, and even per single application traﬃc ﬂow. Further research eﬀorts should be addressed to enable the creation and dynamic management of slices with diﬀerent security mechanisms according to the speciﬁc IoT requirements.
IX. Concluding remarks
The landscape of IoT is continuously evolving, attracting an increasing number of cybercriminals who aim at exploiting vulnerabilities of IoT systems to carry out malicious attacks on a potentially global scale. Conventional security mechanisms have been revealed to be ineﬃcient accounting for the heterogeneity, pervasivity, and mobility of IoT devices. On the other hand, software-based networking and NFV are rapidly changing the Telco industry, encouraging a breakthrough also in the IoT security area.
In this survey, we ﬁrst presented a broad overview on major security threats for IoT systems and conventional security countermeasures. Our analysis provides a thorough investigation of the security features oﬀered by both SDNand NFV-based security mechanisms, analyzing the relevant state-of-the-art solutions for IoT systems. Our survey covers diﬀerent potential deployment environments, such as IoT access networks, core networks, and cloud/edge data centers, illustrating how SDN and NFV security mechanisms can have a diﬀerent impact on the end-to-end security of IoT

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
22

solutions. Indeed, we discussed how the manifold features of SDN and NFV paradigms make these technologies the best candidates to complement conventional IoT security solutions, presenting for each identiﬁed security enabler the SDN/NFV-based counterparts. Through the lessons learned in the adoption of SDN/NFV-based protection approaches, we highlighted several advantages in terms of scalability, on-demand network programmability, energy eﬃciency, and mobility support. Since our literature review shows that the research in this area is still incipient, we also identiﬁed current open challenges related to SDN and NFV for IoT security: deﬁnition of security IoT policies, orchestration over heterogeneous IoT domains, inherent security of SDN and NFV systems augmented by IoT devices, optimal selection and deployment of SDN/NFV-based security mechanisms, and security granularity in network slicing. We hope and believe that this survey can provide extensive guidelines for new researchers who would like to explore this fervent arena.
Acknowledgment
This work was partially supported by the ANASTACIA project, that has received funding from the European Unions Horizon 2020 Research and Innovation Programme under Grant Agreement N 731558 and from the Swiss State Secretariat for Education, Research and Innovation. Prof. Song was supported by Basic Science Research Program through the National Research Foundation of Korea (NRF) funded by the Ministry of Education (NRF-2017R1D1A1B03036285).
References
[1] Luigi Atzori, et al., “The internet of things: A survey”, Computer networks, 54(15), 2010, pp. 2787–2805.
[2] Tianlong Yu, et al., “Handling a trillion (unﬁxable) ﬂaws on a billion devices: Rethinking network security for the Internet-of-Things”, in Proceedings of the 14th ACM Workshop on Hot Topics in Networks, ACM, 2015, p. 5.
[3] M. Ambrosin, et al., “Security and Privacy Analysis of National Science Foundation Future Internet Architectures”, IEEE Communications Surveys Tutorials, 2018, pp. 1–1.
[4] Tarik Taleb, “Toward carrier cloud: Potential, challenges, and solutions”, IEEE Wireless Communications, 21(3), 2014, pp. 80–91.
[5] Tarik Taleb, et al., ““Anything as a Service” for 5G Mobile Systems”, IEEE Network, 30(6), 2016, pp. 84–91.
[6] Tarik Taleb, et al., “EASE: EPC as a service to ease mobile core network deployment over cloud”, IEEE Network, 29(2), 2015, pp. 78– 88.
[7] Vijay Varadharajan and Udaya Tupakula, “Security as a service model for cloud environment”, IEEE Transactions on network and Service management, 11(1), 2014, pp. 60–75.
[8] Md Mahmud Hossain, et al., “Towards an analysis of security issues, challenges, and open problems in the internet of things”, in Services (SERVICES), 2015 IEEE World Congress on, IEEE, 2015, pp. 21–28.
[9] Rolf H Weber, “Internet of Things–New security and privacy challenges”, Computer law & security review, 26(1), 2010, pp. 23–30.
[10] Sabrina Sicari, et al., “Security, privacy and trust in Internet of Things: The road ahead”, Computer Networks, 76, 2015, pp. 146–164.
[11] Yong Wang, et al., “A Survey of Security Issues in Wireless Sensor Networks”, Commun Surveys Tuts, 8(2), 2006, pp. 2–23, URL http: //dx.doi.org/10.1109/COMST.2006.315852.
[12] Yun Zhou, et al., “Securing wireless sensor networks: a survey”, IEEE Communications Surveys & Tutorials, 10(3), 2008.
[13] Xiangqian Chen, et al., “Sensor network security: a survey”, IEEE Communications Surveys & Tutorials, 11(2), 2009.
[14] Ari Juels, “RFID security and privacy: A research survey”, IEEE journal on selected areas in communications, 24(2), 2006, pp. 381– 394.

[15] RK Pateriya and Sangeeta Sharma, “The evolution of RFID security and privacy: a research survey”, in Communication Systems and Network Technologies (CSNT), 2011 International Conference on, IEEE, 2011, pp. 115–119.
[16] Maha Saadeh, et al., “Authentication Techniques for the Internet of Things: A Survey”, in Cybersecurity and Cyberforensics Conference (CCC), 2016, IEEE, 2016, pp. 28–34.
[17] Mohamed Amine Ferrag, et al., “Authentication Protocols for Internet of Things: A Comprehensive Survey”, Security and Communication Networks, 2017, 2017.
[18] Bruno Bogaz Zarpela˜o, et al., “A survey of intrusion detection in Internet of Things”, Journal of Network and Computer Applications, 84, 2017, pp. 25–37.
[19] Jorge Granjal, et al., “Security for the internet of things: a survey of existing protocols and open research issues”, IEEE Communications Surveys & Tutorials, 17(3), 2015, pp. 1294–1312.
[20] Arsalan Mohsen Nia and Niraj K Jha, “A comprehensive study of security of internet-of-things”, IEEE Transactions on Emerging Topics in Computing, 2016.
[21] Yuchen Yang, et al., “A survey on security and privacy issues in internet-of-things”, IEEE Internet of Things Journal, 4(5), 2017, pp. 1250–1258.
[22] Fadele Ayotunde Alaba, et al., “Internet of Things security: A survey”, Journal of Network and Computer Applications, 88, 2017, pp. 10 – 28.
[23] Syed Taha Ali, et al., “A survey of securing networks using software deﬁned networking”, IEEE transactions on reliability, 64(3), 2015, pp. 1086–1097.
[24] Seungwon Shin, et al., “Enhancing Network Security through Software Deﬁned Networking (SDN)”, in Computer Communication and Networks (ICCCN), 2016 25th International Conference on, IEEE, 2016, pp. 1–9.
[25] Danda B Rawat and Swetha R Reddy, “Software deﬁned networking architecture, security and energy eﬃciency: A survey”, IEEE Communications Surveys & Tutorials, 19(1), 2017, pp. 325–346.
[26] Wenjuan Li, et al., “A survey on OpenFlow-based Software Deﬁned Networks: Security challenges and countermeasures”, Journal of Network and Computer Applications, 68, 2016, pp. 126–139.
[27] Ijaz Ahmad, et al., “Security in software deﬁned networks: A survey”, IEEE Communications Surveys & Tutorials, 17(4), 2015, pp. 2317– 2346.
[28] Wei Yang and Carol Fung, “A survey on security in network functions virtualization”, in NetSoft Conference and Workshops (NetSoft), 2016 IEEE, IEEE, 2016, pp. 15–19.
[29] Mahdi Daghmehchi Firoozjaei, et al., “Security challenges with network functions virtualization”, Future Generation Computer Systems, 67, 2017, pp. 315–324.
[30] S. Lal, et al., “NFV: Security Threats and Best Practices”, IEEE Communications Magazine, 55(8), 2017, pp. 211–217.
[31] Alessio Botta, et al., “Integration of cloud computing and internet of things: a survey”, Future Generation Computer Systems, 56, 2016, pp. 684–700.
[32] Aysegul Sarac, et al., “A literature review on the impact of RFID technologies on supply chain management”, International Journal of Production Economics, 128(1), 2010, pp. 77–95.
[33] Xiao Lu, et al., “Wireless networks with RF energy harvesting: A contemporary survey”, IEEE Communications Surveys & Tutorials, 17(2), 2015, pp. 757–789.
[34] Ian F Akyildiz, et al., “Wireless sensor networks: a survey”, Computer networks, 38(4), 2002, pp. 393–422.
[35] Sherin Abdel Hamid, et al., “On the recruitment of smart vehicles for urban sensing”, in Global Communications Conference (GLOBECOM), 2013 IEEE, IEEE, 2013, pp. 36–41.
[36] Li Da Xu, et al., “Internet of things in industries: A survey”, IEEE Transactions on industrial informatics, 10(4), 2014, pp. 2233–2243.
[37] Naser Hossein Motlagh, et al., “UAV-based IoT platform: A crowd surveillance use case”, IEEE Communications Magazine, 55(2), 2017, pp. 128–134.
[38] Naser Hossein Motlagh, et al., “UAV Selection for a UAV-Based Integrative IoT Platform”, in Global Communications Conference (GLOBECOM), 2016 IEEE, IEEE, 2016, pp. 1–6.
[39] Maria Rita Palattella, et al., “Standardized protocol stack for the internet of (important) things”, IEEE communications surveys & tutorials, 15(3), 2013, pp. 1389–1406.
[40] T. Taleb, et al., “On Multi-Access Edge Computing: A Survey of the Emerging 5G Network Edge Cloud Architecture and Orchestration”, IEEE Communications Surveys Tutorials, 19(3), 2017, pp. 1657–1681.

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
23

[41] Jorg Swetina, et al., “Toward a standardized common M2M service layer platform: Introduction to oneM2M”, IEEE Wireless Communications, 21(3), 2014, pp. 20–26.
[42] IEEE 802 Working Group et al., “IEEE Standard for Local and Metropolitan Area NetworksPart 15.4: Low-Rate Wireless Personal Area Networks (LR-WPANs)”, IEEE Std, 802, 2011, pp. 4–2011.
[43] Carles Gomez, et al., “Overview and evaluation of bluetooth low energy: An emerging low-power wireless technology”, Sensors, 12(9), 2012, pp. 11734–11753.
[44] U. Raza, et al., “Low Power Wide Area Networks: An Overview”, IEEE Communications Surveys Tutorials, 19(2), 2017, pp. 855–873.
[45] Maria Rita Palattella, et al., “Internet of things in the 5G era: Enablers, architecture, and business models”, IEEE Journal on Selected Areas in Communications, 34(3), 2016, pp. 510–527.
[46] L Militano, et al., “Device-to-device communications for 5G internet of things”, EAI Endorsed Transactions on Internet of Things, 2015.
[47] Angelo P Castellani, et al., “Web Services for the Internet of Things through CoAP and EXI”, in Communications Workshops (ICC), 2011 IEEE International Conference on, IEEE, 2011, pp. 1–6.
[48] Julien Mineraud, et al., “A gap analysis of Internet-of-Things platforms”, Computer Communications, 89, 2016, pp. 5–16.
[49] John Soldatos, et al., “Openiot: Open source internet-of-things in the cloud”, in Interoperability and open-source solutions for the internet of things, Springer, 2015, pp. 13–25.
[50] Flavio Bonomi, et al., “Fog computing and its role in the internet of things”, in Proceedings of the ﬁrst edition of the MCC workshop on Mobile cloud computing, ACM, 2012, pp. 13–16.
[51] Arijit Mukherjee, et al., “Angels for distributed analytics in iot”, in Internet of Things (WF-IoT), 2014 IEEE World Forum on, IEEE, 2014, pp. 565–570.
[52] Ivan Farris, et al., “Social virtual objects in the edge cloud”, IEEE Cloud Computing, 2(6), 2015, pp. 20–28.
[53] Riccardo Petrolo, et al., “The design of the gateway for the Cloud of Things”, Annals of Telecommunications, 72(1-2), 2017, pp. 31–40.
[54] R. Morabito, et al., “Evaluating Performance of Containerized IoT Services for Clustered Devices at the Network Edge”, IEEE Internet of Things Journal, 4(4), 2017, pp. 1019–1030.
[55] Min Chen, et al., “A Survey of Recent Developments in Home M2M Networks.”, IEEE Communications Surveys and Tutorials, 16(1), 2014, pp. 98–114.
[56] Li Da Xu, et al., “Internet of things in industries: A survey”, IEEE Transactions on industrial informatics, 10(4), 2014, pp. 2233–2243.
[57] Juan Antonio Guerrero-ibanez, et al., “Integration challenges of intelligent transportation systems with connected vehicle, cloud computing, and internet of things technologies”, IEEE Wireless Communications, 22(6), 2015, pp. 122–128.
[58] V Cagri Gungor, et al., “A survey on smart grid potential applications and communication requirements”, IEEE Transactions on Industrial Informatics, 9(1), 2013, pp. 28–42.
[59] Mukhtiar Memon, et al., “Ambient assisted living healthcare frameworks, platforms, standards, and quality attributes”, Sensors, 14(3), 2014, pp. 4312–4341.
[60] Andrea Zanella, et al., “Internet of things for smart cities”, IEEE Internet of Things journal, 1(1), 2014, pp. 22–32.
[61] A. Mohsen Nia and N. K. Jha, “A Comprehensive Study of Security of Internet-of-Things”, IEEE Transactions on Emerging Topics in Computing, PP(99), 2016, pp. 1–1.
[62] John Paul Walters, et al., “Wireless sensor network security: A survey”, Security in distributed, grid, mobile, and pervasive computing, 1, 2007, p. 367.
[63] Bryan Parno, et al., “Distributed detection of node replication attacks in sensor networks”, in Security and Privacy, 2005 IEEE Symposium on, IEEE, 2005, pp. 49–63.
[64] Xun Wang, et al., “Search-based physical attacks in sensor networks”, in Computer Communications and Networks, 2005. ICCCN 2005. Proceedings. 14th International Conference on, IEEE, 2005, pp. 489– 496.
[65] Alexander Becher, et al., “Tampering with motes: Real-world physical attacks on wireless sensor networks”, in International Conference on Security in Pervasive Computing, Springer, 2006, pp. 104–118.
[66] MHR Khouzani and Saswati Sarkar, “Maximum damage battery depletion attack in mobile sensor networks”, IEEE Transactions on Automatic Control, 56(10), 2011, pp. 2358–2368.
[67] David R Raymond, et al., “Eﬀects of denial-of-sleep attacks on wireless sensor network MAC protocols”, IEEE transactions on vehicular technology, 58(1), 2009, pp. 367–380.

[68] Xinyu Yang, et al., “Towards a low-cost remote memory attestation for the smart grid”, Sensors, 15(8), 2015, pp. 20799–20824.
[69] Guevara Noubir and Guolong Lin, “Low-power DoS attacks in data wireless LANs and countermeasures”, ACM SIGMOBILE Mobile Computing and Communications Review, 7(3), 2003, pp. 29–30.
[70] David R Raymond and Scott F Midkiﬀ, “Denial-of-service in wireless sensor networks: Attacks and defenses”, IEEE Pervasive Computing, 7(1), 2008.
[71] E. Bertino and N. Islam, “Botnets and Internet of Things Security”, Computer, 50(2), 2017, pp. 76–79.
[72] Ayman Mukaddam, et al., “IP spooﬁng detection using modiﬁed hop count”, in Advanced Information Networking and Applications (AINA), 2014 IEEE 28th International Conference on, IEEE, 2014, pp. 512– 516.
[73] Yong-Zhen Li, et al., “Security and privacy on authentication protocol for low-cost RFID”, in Computational Intelligence and Security, 2006 International Conference on, IEEE, 2006, vol. 2, pp. 1101–1104.
[74] B Revathi and D Geetha, “A survey of cooperative black and gray hole attack in MANET”, International Journal of Computer Science and Management Research, 1(2), 2012, pp. 205–208.
[75] Chris Karlof and David Wagner, “Secure routing in wireless sensor networks: Attacks and countermeasures”, Ad hoc networks, 1(2), 2003, pp. 293–315.
[76] James Newsome, et al., “The sybil attack in sensor networks: analysis & defenses”, in Proceedings of the 3rd international symposium on Information processing in sensor networks, ACM, 2004, pp. 259–268.
[77] I. Andrea, et al., “Internet of Things: Security vulnerabilities and challenges”, in 2015 IEEE Symposium on Computers and Communication (ISCC), 2015, pp. 180–187.
[78] Mohamed Abomhara and GM Kien, “Cyber security and the internet of things: vulnerabilities, threats, intruders and attacks”, Journal of Cyber Security, 4, 2015, pp. 65–88.
[79] B. Grobauer, et al., “Understanding Cloud Computing Vulnerabilities”, IEEE Security Privacy, 9(2), 2011, pp. 50–57.
[80] Ye Yan, et al., “A Survey on Cyber Security for Smart Grid Communications.”, IEEE Communications Surveys and tutorials, 14(4), 2012, pp. 998–1010.
[81] Jing Liu, et al., “Cyber security and privacy issues in smart grids”, IEEE Communications Surveys & Tutorials, 14(4), 2012, pp. 981–997.
[82] Mohamed Nidhal Mejri, et al., “Survey on VANET security challenges and possible cryptographic solutions”, Vehicular Communications, 1(2), 2014, pp. 53–66.
[83] Ahmad-Reza Sadeghi, et al., “Security and privacy challenges in industrial internet of things”, in Design Automation Conference (DAC), 2015 52nd ACM/EDAC/IEEE, IEEE, 2015, pp. 1–6.
[84] A. Sajid, et al., “Cloud-Assisted IoT-Based SCADA Systems Security: A Review of the State of the Art and Future Challenges”, IEEE Access, 4, 2016, pp. 1375–1384.
[85] T. Mamouni, et al., “Universal AAA for hybrid accesses”, in 2015 European Conference on Networks and Communications (EuCNC), 2015, pp. 403–407.
[86] Jose L Hernandez-Ramos, et al., “Toward a lightweight authentication and authorization framework for smart objects”, IEEE Journal on Selected Areas in Communications, 33(4), 2015, pp. 690–702.
[87] Helge Janicke Jianmin Jiang Mohamed Amine Ferrag, Leandros A. Maglaras and Lei Shu, “Authentication Protocols for Internet of Things: A Comprehensive Survey”, Security and Communication Networks, 2017(1), 2017, p. 41.
[88] Christoph Rensing, et al., “AAA: a survey and a policy-based architecture and framework”, IEEE network, 16(6), 2002, pp. 22–27.
[89] Dominik Samociuk and Blazej Adamczyk, “Secure gateway for Internet of Things with internal AAA mechanism”, Theoretical and Applied Informatics, 28(3), 2017, pp. 17–35.
[90] R. K. Sharma, et al., “Diﬀerent ﬁrewall techniques: A survey”, in Fifth International Conference on Computing, Communications and Networking Technologies (ICCCNT), 2014, pp. 1–6.
[91] N. Gupta, et al., “A ﬁrewall for Internet of Things”, in 2017 9th International Conference on Communication Systems and Networks (COMSNETS), 2017, pp. 411–412.
[92] H. Hasan, et al., “Secure lightweight ECC-based protocol for multiagent IoT systems”, in 2017 IEEE 13th International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob), 2017, pp. 1–8.
[93] S. L. Keoh, et al., “Securing the Internet of Things: A Standardization Perspective”, IEEE Internet of Things Journal, 1(3), 2014, pp. 265– 275.

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
24

[94] David J Malan, et al., “A public-key infrastructure for key distribution in TinyOS based on elliptic curve cryptography”, in Sensor and Ad Hoc Communications and Networks, 2004. IEEE SECON 2004. 2004 First Annual IEEE Communications Society Conference on, IEEE, 2004, pp. 71–80.
[95] D. Daz-Snchez, et al., “Proxy re-encryption schemes for IoT and crowd sensing”, in 2016 IEEE International Conference on Consumer Electronics (ICCE), 2016, pp. 15–16.
[96] Hardik Upadhyay Tariqahmad Sherasiya, “Intrusion Detection System for Internet of Things”, IJARIIE International Journal, 2(3), 2016, pp. 2344–2349.
[97] Gulshan Kumar, et al., “The use of artiﬁcial intelligence based techniques for intrusion detection: a review”, Artiﬁcial Intelligence Review, 34(4), 2010, pp. 369–387.
[98] A. A. Gendreau and M. Moorman, “Survey of Intrusion Detection Systems towards an End to End Secure Internet of Things”, in 2016 IEEE 4th International Conference on Future Internet of Things and Cloud (FiCloud), 2016, pp. 84–90.
[99] R. T. El-Maghraby, et al., “A survey on deep packet inspection”, in 2017 12th International Conference on Computer Engineering and Systems (ICCES), 2017, pp. 188–197.
[100] D. H. Summerville, et al., “Ultra-lightweight deep packet anomaly detection for Internet of Things devices”, in 2015 IEEE 34th International Performance Computing and Communications Conference (IPCCC), 2015, pp. 1–8.
[101] Open Networking Foundation, “ONF TR-50 2SDN architecture”, , 2014.
[102] Samaresh Bera, et al., “Software-Deﬁned Networking for Internet of Things: A Survey”, IEEE Internet of Things Journal, 4(6), 2017, pp. 1994–2008.
[103] Fabrizio Granelli, et al., “Software deﬁned and virtualized wireless access in future wireless networks: scenarios and standards”, IEEE Communications Magazine, 53(6), 2015, pp. 26–34.
[104] Zongjian He, et al., “SDVN: enabling rapid network innovation for heterogeneous vehicular communication”, IEEE network, 30(4), 2016, pp. 10–15.
[105] Ramon Dos Reis Fontes, et al., “From Theory to Experimental Evaluation: Resource Management in Software-Deﬁned Vehicular Networks”, IEEE Access, 5, 2017, pp. 3069–3076.
[106] Tie Luo, et al., “Sensor OpenFlow: Enabling software-deﬁned wireless sensor networks”, IEEE Communications letters, 16(11), 2012, pp. 1896–1899.
[107] Bruno Trevizan De Oliveira, et al., “TinySDN: Enabling multiple controllers for software-deﬁned wireless sensor networks”, IEEE Latin America Transactions, 13(11), 2015, pp. 3690–3696.
[108] Laura Galluccio, et al., “SDN-WISE: Design, prototyping and experimentation of a stateful SDN solution for WIreless SEnsor networks”, in Computer Communications (INFOCOM), 2015 IEEE Conference on, IEEE, 2015, pp. 513–521.
[109] Zhijing Qin, et al., “A software deﬁned networking architecture for the internet-of-things”, in Network Operations and Management Symposium (NOMS), 2014 IEEE, IEEE, 2014, pp. 1–9.
[110] Open Network Operating System (ONOS), Tech. rep., 2018. [111] Angelos-Christos G Anadiotis, et al., “Towards a software-deﬁned
Network Operating System for the IoT”, in Internet of Things (WFIoT), 2015 IEEE 2nd World Forum on, IEEE, 2015, pp. 579–584. [112] Chiara Buratti, et al., “Testing protocols for the internet of things on the EuWIn platform”, IEEE Internet of Things Journal, 3(1), 2016, pp. 124–133. [113] Paolo Baronti, et al., “Wireless sensor networks: A survey on the state of the art and the 802.15. 4 and ZigBee standards”, Computer communications, 30(7), 2007, pp. 1655–1695. [114] Isam Ishaq, et al., “IETF standardization in the ﬁeld of the internet of things (IoT): a survey”, Journal of Sensor and Actuator Networks, 2(2), 2013, pp. 235–287. [115] Julius Schulz-Zander, et al., “Opensdwn: Programmatic control over home and enterprise wiﬁ”, in Proceedings of the 1st ACM SIGCOMM Symposium on Software Deﬁned Networking Research, ACM, 2015, p. 16. [116] Riccardo Trivisonno, et al., “SDN-based 5G mobile networks: architecture, functions, procedures and backward compatibility”, Transactions on Emerging Telecommunications Technologies, 26(1), 2015, pp. 82– 92. [117] Nikos Bizanis and Fernando A Kuipers, “SDN and virtualization solutions for the Internet of Things: A survey”, IEEE Access, 4, 2016, pp. 5591–5606.

[118] Hlabishi I Kobo, et al., “A Survey on Software-Deﬁned Wireless Sensor Networks: Challenges and Design Requirements”, IEEE Access, 5, 2017, pp. 1872–1899.
[119] P. Porambage, et al., “Survey on Multi-Access Edge Computing for Internet of Things Realization”, IEEE Communications Surveys Tutorials, 2018, pp. 1–1.
[120] Rob Sherwood, et al., “Flowvisor: A network virtualization layer”, OpenFlow Switch Consortium, Tech Rep, 2009, pp. 1–13.
[121] Mathieu Boussard, et al., “Software-deﬁned LANs for interconnected smart environment”, in Teletraﬃc Congress (ITC 27), 2015 27th International, IEEE, 2015, pp. 219–227.
[122] Rodrigo Braga, et al., “Lightweight DDoS ﬂooding attack detection using NOX/OpenFlow”, in Local Computer Networks (LCN), 2010 IEEE 35th Conference on, IEEE, 2010, pp. 408–415.
[123] Qiao Yan, et al., “Software-deﬁned networking (SDN) and distributed denial of service (DDoS) attacks in cloud computing environments: A survey, some research issues, and challenges”, IEEE Communications Surveys & Tutorials, 18(1), 2016, pp. 602–622.
[124] Sajad Shirali-Shahreza and Yashar Ganjali, “Eﬃcient implementation of security applications in openﬂow controller with ﬂexam”, in HighPerformance Interconnects (HOTI), 2013 IEEE 21st Annual Symposium on, IEEE, 2013, pp. 49–54.
[125] Seungwon Shin and Guofei Gu, “CloudWatcher: Network security monitoring using OpenFlow in dynamic cloud networks (or: How to provide security monitoring as a service in clouds?)”, in Network Protocols (ICNP), 2012 20th IEEE International Conference on, IEEE, 2012, pp. 1–6.
[126] Seungwon Shin, et al., “A ﬁrst step toward network security virtualization: from concept to prototype”, IEEE Transactions on Information Forensics and Security, 10(10), 2015, pp. 2236–2249.
[127] Syed Akbar Mehdi, et al., “Revisiting traﬃc anomaly detection using software deﬁned networking”, in International Workshop on Recent Advances in Intrusion Detection, Springer, 2011, pp. 161–180.
[128] Changhoon Yoon, et al., “Enabling security functions with SDN: A feasibility study”, Computer Networks, 85, 2015, pp. 19–35.
[129] Seyed Kaveh Fayaz, et al., “Bohatei: Flexible and Elastic DDoS Defense.”, in USENIX Security Symposium, 2015, pp. 817–832.
[130] Narmeen Zakaria Bawany, et al., “DDoS Attack Detection and Mitigation Using SDN: Methods, Practices, and Solutions”, Arabian Journal for Science and Engineering, 42(2), 2017, pp. 425–441.
[131] Federico Griscioli, et al., Leveraging SDN to Monitor Critical Infrastructure Networks in a Smarter Way, Tech. Report arXiv:1701.04293, Cornell University, 2017.
[132] Jafar Haadi Jafarian, et al., “Openﬂow random host mutation: transparent moving target defense using software deﬁned networking”, in Proceedings of the ﬁrst workshop on Hot topics in software deﬁned networks, ACM, 2012, pp. 127–132.
[133] Marc Mendonca, et al., “A ﬂexible in-network IP anonymization service”, in Communications (ICC), 2012 IEEE International Conference on, IEEE, 2012, pp. 6651–6656.
[134] Qi Duan, et al., “Eﬃcient Random Route Mutation considering ﬂow and network constraints”, in 2013 IEEE Conference on Communications and Network Security (CNS), 2013, pp. 260–268.
[135] Shaibal Chakrabarty, et al., “Black SDN for the Internet of Things”, in Mobile Ad Hoc and Sensor Systems (MASS), 2015 IEEE 12th International Conference on, IEEE, 2015, pp. 190–198.
[136] Celio Trois, et al., “A survey on SDN programming languages: toward a taxonomy”, IEEE Communications Surveys & Tutorials, 18(4), 2016, pp. 2687–2712.
[137] Seungwon Shin, et al., “FRESCO: Modular Composable Security Services for Software-Deﬁned Networks.”, in NDSS, 2013.
[138] Philip Porras, et al., “A security enforcement kernel for OpenFlow networks”, in Proceedings of the ﬁrst workshop on Hot topics in software deﬁned networks, ACM, 2012, pp. 121–126.
[139] Seungwon Shin, et al., “Avant-guard: Scalable and vigilant switch ﬂow management in software-deﬁned networks”, in Proceedings of the 2013 ACM SIGSAC conference on Computer & communications security, ACM, 2013, pp. 413–424.
[140] John Sonchack, et al., “Enabling Practical Software-deﬁned Networking Security Applications with OFX”, in NDSS, 2016, vol. 16, pp. 1–15.
[141] Aaron Gember, et al., “ECOS: leveraging software-deﬁned networks to support mobile application oﬄoading”, in Proceedings of the eighth ACM/IEEE symposium on Architectures for networking and communications systems, ACM, 2012, pp. 199–210.

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
25

[142] K. Kalkan and S. Zeadally, “Securing Internet of Things (IoT) with Software Deﬁned Networking (SDN)”, IEEE Communications Magazine, 2017, pp. 1–7.
[143] ETSI GS NFV 002 Architectural Framework V1.1.1, Tech. rep., 2013. [144] Roberto Morabito, et al., “Hypervisors vs. lightweight virtualization: a
performance comparison”, in Cloud Engineering (IC2E), 2015 IEEE International Conference on, IEEE, 2015, pp. 386–393. [145] Vincenzo Sciancalepore, et al., “A double-tier MEC-NFV Architecture: Design and Optimisation”, in Standards for Communications and Networking (CSCN), 2016 IEEE Conference on, IEEE, 2016, pp. 1–6. [146] Richard Cziva and Dimitrios P Pezaros, “Container network functions: bringing NFV to the network edge”, IEEE Communications Magazine, 55(6), 2017, pp. 24–31. [147] Bilal R Al-Kaseem and Hamed S Al-Raweshidy, “SD-NFV as an Energy Eﬃcient Approach for M2M Networks Using Cloud-Based 6LoWPAN Testbed”, IEEE Internet of Things Journal, 2017. [148] Nicolas Herbaut, et al., “Migrating to a nfv-based home gateway: introducing a surrogate vnf approach”, in Network of the Future (NOF), 2015 6th International Conference on the, IEEE, 2015, pp. 1–7. [149] Benjamin Baron, et al., “Virtualizing vehicular node resources: Feasibility study of virtual machine migration”, Vehicular Communications, 4, 2016, pp. 39–46. [150] Deﬁned Categories of Service 2011, Tech. rep., Cloud Security Alliance - SecaaS WG, 2011. [151] Justine Sherry, et al., “Making middleboxes someone else’s problem: network processing as a cloud service”, ACM SIGCOMM Computer Communication Review, 42(4), 2012, pp. 13–24. [152] Anat Bremler-Barr, et al., “Deep packet inspection as a service”, in Proceedings of the 10th ACM International on Conference on emerging Networking Experiments and Technologies, ACM, 2014, pp. 271–282. [153] S. M. Cheng, et al., “Traﬃc-Aware Patching for Cyber Security in Mobile IoT”, IEEE Communications Magazine, 55(7), 2017, pp. 29– 35. [154] Abderrahmane Boudi, et al., “Assessing Lightweight Virtualization for Security-as-a-Service at the Network Edge”, in Standards for Communications and Networking (CSCN), 2018 IEEE Conference on, IEEE, 2018. [155] Diego Montero, et al., “Virtualized security at the network edge: a user-centric approach”, IEEE Communications Magazine, 53(4), 2015, pp. 176–186. [156] Lianjie Cao, et al., “Nfv-vital: A framework for characterizing the performance of virtual network functions”, in Network Function Virtualization and Software Deﬁned Network (NFV-SDN), 2015 IEEE Conference on, IEEE, 2015, pp. 93–99. [157] Carlos Colman-Meixner, et al., “A survey on resiliency techniques in cloud computing infrastructures and applications”, IEEE Communications Surveys & Tutorials, 18(3), 2016, pp. 2244–2281. [158] Ibbad Hafeez, et al., “Securebox: Toward Safer and Smarter IoT Networks”, in Proceedings of the 2016 ACM Workshop on CloudAssisted Networking, ACM, 2016, pp. 55–60. [159] Tarik Taleb, et al., “Mobile edge computing potential in making cities smarter”, IEEE Communications Magazine, 55(3), 2017, pp. 38–43. [160] A. Aissioui, et al., “On Enabling 5G Automotive Systems Using Follow Me Edge-Cloud Concept”, IEEE Transactions on Vehicular Technology, 67(6), 2018, pp. 5302–5316. [161] T. Taleb, et al., “Follow-Me Cloud: When Cloud Services Follow Mobile Users”, IEEE Transactions on Cloud Computing, 2017, pp. 1–1. [162] Rami Addad, et al., “MIRA!: A SDN-based Framework for CrossDomain Fast Migration of Ultra-Low Latency 5G Services”, in Global Communications Conference (GLOBECOM), 2018 IEEE, IEEE, 2018. [163] Diego Montero and Rene´ Serral-Gracia`, “Oﬄoading personal security applications to the Network Edge: A mobile user case scenario”, in Wireless Communications and Mobile Computing Conference (IWCMC), 2016 International, IEEE, 2016, pp. 96–101. [164] Zhongliang Zhao, et al., “Autonomic Communications in SoftwareDriven Networks Autonomic Communications in Software-Driven Networks”, IEEE Journal on Selected Areas in Communications, 2017. [165] H. Hantouti, et al., “Traﬃc Steering for Service Function Chaining”, IEEE Communications Surveys Tutorials, 2018, pp. 1–1. [166] Faizul Bari, et al., “Orchestrating virtualized network functions”, IEEE Transactions on Network and Service Management, 13(4), 2016, pp. 725–739. [167] Zafar Ayyub Qazi, et al., “SIMPLE-fying middlebox policy enforcement using SDN”, ACM SIGCOMM computer communication review, 43(4), 2013, pp. 27–38.

[168] Aaron Gember-Jacobson, et al., “OpenNF: Enabling innovation in network function control”, in ACM SIGCOMM Computer Communication Review, ACM, 2014, vol. 44, pp. 163–174.
[169] Nicola Dragoni, et al., “Microservices: yesterday, today, and tomorrow”, in Present and Ulterior Software Engineering.
[170] Y. Li, et al., “A SDN-based architecture for horizontal Internet of Things services”, in 2016 IEEE International Conference on Communications (ICC), 2016, pp. 1–7.
[171] V. R. Tadinada, “Software Deﬁned Networking: Redeﬁning the Future of Internet in IoT and Cloud Era”, in 2014 International Conference on Future Internet of Things and Cloud, 2014, pp. 296–301.
[172] Igor Miladinovic and Sigrid Schefer-Wenzl, “A Highly Scalable IoT Architecture through Network Function Virtualization”, Open Journal of Internet Of Things (OJIOT), 3(1), 2017, pp. 127–135.
[173] A. C. G. Anadiotis, et al., “Towards Uniﬁed Control of Networks of Switches and Sensors through a Network Operating System”, IEEE Internet of Things Journal, PP(99), 2018, pp. 1–1.
[174] M. Ojo, et al., “A SDN-IoT Architecture with NFV Implementation”, in 2016 IEEE Globecom Workshops (GC Wkshps), 2016, pp. 1–6.
[175] Matteo Dell’Amico, et al., “Hipolds: a hierarchical security policy language for distributed systems”, Information Security Technical Report, 17(3), 2013, pp. 81–92.
[176] Cataldo Basile, et al., “A novel approach for integrating security policy enforcement with dynamic network virtualization”, in Network Softwarization (NetSoft), 2015 1st IEEE Conference on, IEEE, 2015, pp. 1–5.
[177] Adrian Lara and Byrav Ramamurthy, “OpenSec: Policy-based security using software-deﬁned networking”, IEEE Transactions on Network and Service Management, 13(1), 2016, pp. 30–42.
[178] Adel Zaalouk, et al., “Orchsec: An orchestrator-based architecture for enhancing network-security using network monitoring and sdn control functions”, in Network Operations and Management Symposium (NOMS), 2014 IEEE, IEEE, 2014, pp. 1–9.
[179] Flauzac Olivier, et al., “New Security Architecture for IoT Network”, Procedia Computer Science, 52, 2015, pp. 1028 – 1033.
[180] B. Jaeger, “Security Orchestrator: Introducing a Security Orchestrator in the Context of the ETSI NFV Reference Architecture”, in 2015 IEEE Trustcom/BigDataSE/ISPA, 2015, vol. 1, pp. 1255–1260.
[181] Cristian Cleder Machado, et al., “ANSwer: Combining NFV and SDN features for network resilience strategies”, in Computers and Communication (ISCC), 2016 IEEE Symposium on, IEEE, 2016, pp. 391–396.
[182] Seongho Choi and Jin Kwak, “Enhanced SDIoT security framework models”, International Journal of Distributed Sensor Networks, 12(5), 2016, p. 4807804.
[183] K. Fysarakis, et al., “A Reactive Security Framework for operational wind parks using Service Function Chaining”, in 2017 IEEE Symposium on Computers and Communications (ISCC), 2017, pp. 663–668.
[184] Ivan Farris, et al., “Towards Provisioning of SDN/NFV-based Security Enablers for Integrated Protection of IoT Systems”, in Standards for Communications and Networking (CSCN), 2017 IEEE Conference on, IEEE, 2017.
[185] Molina Zarca Alejandro, et al., “Enhancing IoT security through network softwarization and virtual security appliances”, International Journal of Network Management, 0(0), p. e2038.
[186] Diego Kreutz, et al., “Towards secure and dependable software-deﬁned networks”, in Proceedings of the second ACM SIGCOMM workshop on Hot topics in software deﬁned networking, ACM, 2013, pp. 55–60.
[187] Adnan Akhunzada and Muhammad Khurram Khan, “Toward Secure Software Deﬁned Vehicular Networks: Taxonomy, Requirements, and Open Issues”, IEEE Communications Magazine, 55(7), 2017, pp. 110– 118.
[188] Wenjuan Li, et al., “A survey on OpenFlow-based Software Deﬁned Networks: Security challenges and countermeasures”, Journal of Network and Computer Applications, 68, 2016, pp. 126–139.
[189] Danda B Rawat and Swetha R Reddy, “Software deﬁned networking architecture, security and energy eﬃciency: A survey”, IEEE Communications Surveys & Tutorials, 19(1), 2017, pp. 325–346.
[190] C. Li, et al., “Securing SDN Infrastructure of IoT-Fog Networks From MitM Attacks”, IEEE Internet of Things Journal, 4(5), 2017, pp. 1156– 1164.
[191] Rodrigo Roman, et al., “Mobile edge computing, fog et al.: A survey and analysis of security threats and challenges”, Future Generation Computer Systems, 78, 2018, pp. 680 – 698.
[192] Montida Pattaranantakul, et al., “A First Step Towards Security Extension for NFV Orchestrator”, in Proceedings of the ACM International

1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/COMST.2018.2862350, IEEE Communications Surveys & Tutorials
26
Workshop on Security in Software Deﬁned Networks & Network Function Virtualization, ACM, 2017, pp. 25–30. [193] Shankar Lal, et al., “Assuring virtual network function image integrity and host sealing in telco cloud”, in IEEE ICC, 2017. [194] Zheng Yan, et al., “A security and trust framework for virtualized networks and software-deﬁned networking”, Security and communication networks, 9(16), 2016, pp. 3059–3069. [195] S. Lal, et al., “Securing VNF Communication in NFVI”, in Standards for Communications and Networking (CSCN), 2017 IEEE Conference on, IEEE, 2017, pp. 187–192. [196] J. Deng, et al., “VNGuard: An NFV/SDN combination framework for provisioning and managing virtual ﬁrewalls”, in 2015 IEEE Conference on Network Function Virtualization and Software Deﬁned Network (NFV-SDN), 2015, pp. 107–114. [197] Leopoldo AF Mauricio, et al., “Proposing and evaluating the performance of a ﬁrewall implemented as a virtualized network function”, in Network of the Future (NOF), 2016 7th International Conference on the, IEEE, 2016, pp. 1–3. [198] Y. Khettab, et al., “Virtual Security as a Service for 5G Verticals”, in IEEE WCNC, 2018. [199] T. Taleb, et al., “User mobility-aware Virtual Network Function placement for Virtual 5G Network Infrastructure”, in 2015 IEEE International Conference on Communications (ICC), 2015, pp. 3879– 3884. [200] M. Bagaa, et al., “Service-aware network function placement for eﬃcient traﬃc handling in carrier cloud”, in 2014 IEEE Wireless Communications and Networking Conference (WCNC), 2014, pp. 2402– 2407. [201] I. Benkacem, et al., “Optimal VNFs Placement in CDN Slicing Over Multi-Cloud Environment”, IEEE Journal on Selected Areas in Communications, 36(3), 2018, pp. 616–627. [202] Cataldo Basile, et al., “Towards the Dynamic Provision of Virtualized Security Services”, in Cyber Security and Privacy Forum, Springer, 2015, pp. 65–76. [203] Alireza Shameli Sendi, et al., “Eﬃcient provisioning of security service function chaining using network security defense patterns”, IEEE Transactions on Services Computing, 2016. [204] Tarik Taleb and Yassine Hadjadj-Aoul, “QoS2: a framework for integrating quality of security with quality of service”, Security and communication networks, 5(12), 2012, pp. 1462–1470. [205] Cynthia Irvine, et al., “Security as a dimension of quality of service in active service environments”, in Active Middleware Services, 2001. Third Annual International Workshop on, IEEE, 2001, pp. 87–93. [206] Akihiro Nakao, “Network virtualization as foundation for enabling new network architectures and applications”, IEICE transactions on communications, 93(3), 2010, pp. 454–457. [207] Akihiro Nakao, et al., “End-to-end network slicing for 5G mobile networks”, Journal of Information Processing, 25, 2017, pp. 153–163. [208] Tarik Taleb, et al., “PERMIT: Network Slicing for Personalized 5G Mobile Telecommunications”, IEEE Communications Magazine, 55(5), 2017, pp. 88–93. [209] C. Campolo, et al., “5G Network Slicing for Vehicle-to-Everything Services”, IEEE Wireless Communications, 24(6), 2017, pp. 38–45.
1553-877X (c) 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

