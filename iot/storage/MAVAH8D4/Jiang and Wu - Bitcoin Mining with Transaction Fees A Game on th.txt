Bitcoin Mining with Transaction Fees: A Game on the Block Size
Suhan Jiang and Jie Wu Department of Computer and Information Sciences, Temple University
{Suhan.Jiang and jiewu}@temple.edu

Abstract—In a Bitcoin market, miners participate in blockchain mining with an aim to make proﬁts. Until reaching consensus, PoW-valid blocks (including validated transactions and proper PoW solutions) can be viewed as being successfully mined and are rewarded. There are two types of rewards for miners: ﬁxed block subsidies and time-varying transaction fees. Block subsidies, predetermined by design, are the current major revenue source. Transaction fees, offered by Bitcoin transaction senders to accelerate their transactions, heavily depend on the corresponding transaction size. Thus, a larger-size block tends to contain higher transaction fees and hence more rewards. However, the probability of a miner to successfully mine a block diminishes as the block size increases, since a larger-size block takes a longer time to reach consensus. Thus, the reward included in the block is vitally affected by its size, which is independently decided by a miner. In this paper, we use a game-theoretic approach to study how a miner’s payoff, i.e., expected proﬁts, is determined by his block size. More speciﬁcally, we derive an expression to characterize the relation between the miner’s payoff and block sizes. Besides, we use game theory to analyze how proﬁt-driven miners will manipulate their block sizes to optimize payoff instead of adopting the default block size. We conduct numerical experiments on real-world data collected from Bitcoin to ﬁnd peaceful equilibrium where miners have no incentive to misbehave. The achieved block sizes thereby give guidelines on the default block size, in order to deter miners from misbehaving. Our analysis suggests a block size of 4 MB.
Index Terms—Bitcoin, blockchain, deviant mining strategy, game theory, transaction fees.
I. INTRODUCTION
As the most successful decentralized digital currency, Bitcoin applies blockchain, a distributed ledger, to record transactions in the form of linked blocks secured by cryptography. The consensus protocol is the core of blockchain, since it regulates how to maintain such an append-only public ledger in a distributed fashion. Bitcoin is built on top of a proof-ofwork (PoW) protocol. In the Bitcoin network, agents called miners collect blocks of transactions, verify their integrity, and append them to the blockchain. Miners are required to solve a computationally difﬁcult PoW puzzle, in order to append a block to the blockchain. This mechanism ensures the security and reliability of blockchain, since lots of trial and error is required on average before computing a valid solution to such a puzzle. The process of successfully adding a block to the chain can be viewed as a mining round and the blockchain grows due to continuously repeated mining rounds. Each miner successfully appending a block will receive monetary rewards as a mining incentive.

Trends for block subsidies and transaction fees

BTC per block

50

45

40

35

30

25

20

15

10

Block subsidy

5

Transaction fee

0 2010 2020 2030 2040 2050 2060 2070 2080

Year

Fig. 1: Block reward evolution trend [10].

A major success factor of Bitcoin is its novel reward mechanism. This mechanism couples, albeit loosely, the extension of the blockchain with newly minted Bitcoins. The creation of Bitcoins is only accompanied by a new block added permanently to the blockchain, as a reward for its creator. However, due to a 21,000,000-unit upper bound of bitcoin supply, starting from 50 BTC, the block subsidy halves every 210,000 blocks and will eventually become zero. Thus, transaction fees, offered by transaction senders, are also introduced to gradually replace block subsidy as the other mining incentive. However, there are two types of rewards in the current Bitcoin market: ﬁxed block subsidies and time-varying transaction fees. As is shown in Fig. 1, ﬁxed block subsidies for mining will be entirely substituted with transaction fees in the long run. Since the security of Bitcoin’s consensus protocol relies on miners behaving correctly, the reward structure of the protocol should encourage honest miners (those who strictly follow the Bitcoin protocol when mining) by ensuring their payoff is proportional to their mining power. However, it cannot always hold due to the increasingly-signiﬁcant transaction fees in the Bitcoin reward mechanism. More and more miner misbehaviors arise due to transaction fee. To gain more rewards, miners usually have more incentive for transactions with more fees. Thus, chances are high that a transaction without fee could not be processed immediately or might not even be relayed by miners.

There also exist cases where misbehaving miners give up part of available transaction fees in hopes of enhancing his chance to win all other unabandoned rewards. Carlsten et al. [1] proposed such a deviant mining behavior called Undercutting. Undercutting attackers always actively fork the head of the chain without claiming all transactions. Those unclaimed transactions (associated with fees) can incentivize more miners to support attackers’ blocks instead of an oldest-seen block, since they can collect more transaction fees in their next block

Block0

Scheming
Blockn-1 Blockn

Arrived at 5:01 pm
Blockn+1 95 5

Arrived at 5 pm
100

Greedy option

Default option

Fig. 2: Two possible options for a miner when accepting a new block.

by mining on an attacker’s block. Actually, mining on a block that claims fewer transaction fees instead of a block seen ﬁrst is also a deviant behavior. Fig. 2 illustrates how these two mining misbehaviors work. Imagine three miners of different types: honest Heidi, greedy Grace, and scheming Sybil. Grace receives two blocks from Heidi and Sybil, respectively, and Sybil’s block arrives a little late. Grace has two options: (1) extend the longest chain, mining on Heidi’s block and receiving an expected reward of 0; (2) mine on Sybil’s block, with an expectation to receive 5 BTC in the next block. The Bitcoin protocol dictates option (1), but quick reasoning suggests that option (2) is more beneﬁcial for Grace.
1) Miners’ Misbehaviors on Block Size: The previouslymentioned transaction-fee manipulation can be viewed as miners’ misbehaviors on the block size, given the amount of transaction fees included in a block is linearly proportional to its size. Thus, a larger-size block tends to contain more transaction fees. We consider how a miner’s mining payoff (expected proﬁts) will be affected by his block size in the long run. The payoff is determined mainly by a miner’s winning probability and his expected reward. The expected reward increases as the block grows larger, while the winning probability goes down since smaller blocks tend to reach consensus faster. The Bitcoin protocol itself has requirements on the block size. A block should be bounded within 1 MB and include all valid transactions if available transactions are not enough to fully occupy a 1-MB block. If all miners follow the Bitcoin protocol in an ideal network, then a miner’s payoff is proportional to his mining power. However, if a miner dedicatedly designs his block size in order to maximize his payoff, it is possible that he can gain more than his fair share out of total proﬁts, given the current Bitcoin mechanism that includes transaction fees as a source of reward.
2) Our Result: To some extent, transaction fees can be seen as a ﬂaw in Bitcoin as it discourages honest miners and thereby poses an important threat to the stability of Bitcoin network. Manipulating transaction fees is for the purpose of gaining more rewards and essentially is miners’ misbehavior on the block size. To analyze the proﬁt-driven miners strategy evolution in transaction-fee regime, we start with how a miner’s payoff is determined by his block size. We derive an expression for the distribution and use the law of total expectation to characterize the relation between a miner’s payoff and his block size, as well as other parameters. We then discuss how miners with different mining powers can determine their optimal block sizes to maximize payoffs. We

ﬁnd the optimal block size is positively related to the miner’s mining power. Based on the observation, we deﬁne a game on the block size, where honest miners always follow the default block size, while misbehaving miners play strategies on their own block sizes to optimize payoffs. We investigate our game in different scenarios. Both the game theoretical analysis and numerical results show the existence of peaceful equilibrium where all miners are refrained from misbehaving. We further analyze how different values affect the corresponding equilibria. Since payoff ratios and mining ratios are equivalent in peaceful equilibria, the corresponding block size gives us guidelines on the Bitcoin default block size, which will deter miner’s misbehaviors and encourage honest mining. Thus, deviant behaviors in the transaction-fee regime can also be deterred. Our main contributions are summarized as follows:
• We derive expressions to capture relations between miner’s expected payoffs and their block sizes.
• We prove a miner with less mining power prefers a smaller block size in order to optimize his payoff.
• We deﬁne a block-size game to analyze how misbehaving miners will manipulate their block sizes, instead of following the default block size required in the Bitcoin protocol, in order to maximize payoff.
• We show the Nash equilibria in the proposed game using numerical analysis conducted on the real Bitcoin data.
• The Block sizes achieved in peaceful equilibria give guidelines on the default block size, that would deter misbehaving miners and remove instability caused by transaction fees.
II. RELATED WORK
A vast majority of previous work examines possible types of misbehaviors against the Bitcoin protocol and suggest adaptations of the protocol to encourage honest mining, and thereby ensuring its security. We very brieﬂy mention some of these works here. Usually, misbehaviors at the miners’ side tend to be referred to as Mining attacks. Eyal and Sirer [4] develop the selﬁsh mining attack, a deviant mining strategy that enables miners to get more than their fair share of rewards. Other works, notably Sapirshtein et al. [6] have analyzed selﬁsh mining in more detail using Markov Decision Processes (MDP). Various other attacks have been studied. For example, members of a mining pool can launch a block withholding attack against the pool itself [5], and this harms the victim pool and its other members, but actually increases the revenue of the rest of the network. In [10], the author considers attacks performed between different pools where users are sent to inﬁltrate a competitive pool giving rise to a pool game. [15] deals with information propagation and Sybil attacks. Most of them are consider a model where the subsidy is the dominant incentive for mining. In this work, we analyze how a miner’s behavior differs according to his block size in a reward mechanism with block subsidies and transaction fees. Mser and Bhme [18] review and analyze the history of transaction fees in Bitcoin. They conclude that historically miners prefer to follow the protocol rules rather than optimize their gains.

They predict such a state is sustainable only when fees are a negligible part of the incentive.
There also exists real attacks at the network layer. Each Bitcoin node is connected over TCP to many peers, with a default maximum of 125. The peer-to-peer connections between these nodes can be inferred through various techniques [7, 8]. Heilman et al. [9] demonstrated a network-level eclipse attack where a single node monopolizes all possible connections to a victim and eclipses it from the network. Thereby, the eclipsing node can ﬁlter the eclipsed node’s view of the blockchain. Although a few proposed counter-measures have been implemented that reduce the feasibility of carrying out an eclipse attack by a single node, multiple nodes can collude and still succeed in eclipsing. Besides, Coinscope [7] proposed non-trivial techniques to map out the Bitcoin network topology as well as the mining power of various nodes. This network knowledge can further help a network-level attacker.
In addition, game theory has been widely applied to analyze Bitcoin attacks. Several recent works have examined the game theoretic consequences of attacks. Kiayias et al. [14] performed a theoretical analysis of various selﬁsh mining strategies in the ﬁxed-reward model, and proved that when miners are small enough, the default mining behavior is an equilibrium. See also [11] for a (cooperative) game theoretic analysis regarding pool mining.
III. SYSTEM MODEL
In this section, we introduce a realistic Bitcoin mining model used in this paper. As commonly done in blockchainrelated analysis, we assume the whole system is in a quasistatic state [14, 21]. That means no miners join or leave, existing miners maintain their behavior, and the system reaches equilibrium. Therefore, in our model, the system comprises a ﬁxed set of miners associated with their mining power.
Suppose there are n miners starting to mine a new block on the top the same block, i.e., there is no fork at the beginning time. All players(miners) are asked to solve the proof-of-work puzzle in order to mine a block. The puzzle can be solved only by using a trial and error strategy, and the occurrence of solving this problem can be well approximated by a random variable following a Poission process. The time for the whole system to ﬁnd a valid block is exponentially distributed with a ﬁxed rate parameter. Time used to ﬁnd the ﬁrst block by any of the miners is the minimum of all ﬁnding times by all different miners. The value of the rate parameter is determined by the consensus protocol, such that the expected block time interval is of a constant value. The rate parameter represents the difﬁculty of the proof-of-work puzzle, and we use the terms difﬁculty and rate interchangeably. The total mining power affects the value of the rate parameter. The difﬁculty parameter value is adjusted by the whole system to decrease (or increase) the rate of each miner. In an equilibrium, the rate parameter is ﬁxed as a constant. Currently, the difﬁculty of ﬁnding a block is dynamically adjusted so that it takes T = 600 seconds on average. Thus, the mining Poission process has a ﬁxed parameter 1/T for the whole network.

We assume that the difﬁculty of all puzzles is the same. In fact, the difﬁculty of puzzles at each time is proportional to the total mining power in the Bitcoin network of that time. It is reasonable because in our quasi-static model, the miners and their mining power are ﬁxed, thus there is a stable total mining power. There exists more than one valid solution for each puzzle. It is possible that two or even more miners solve their puzzles for a same-height block, which will result in a blockchain fork. Then, the rest miners have to choose only one to continue mining on. The branch accepted by the majority survives, and the corresponding miner would be rewarded. Thus, we could conclude that, miners who solve a puzzle are not necessarily rewarded, and only the ﬁrst to make his solved block reach consensus will obtain rewards.
The reward of a mined block comes from two aspects: the ﬁxed block subsidy and the extra fee from transactions included in this block. The block subsidy can be referred to as base reward, which is relatively ﬁxed over time. This reward is comprised of the minting of new currency with the creation of each block. Transaction fees come from the aggregation of newly introduced transactions in the system. This reward is time-dependent. As the time progresses, there are more pending transactions in the system, and the potential fees grow. We follow the assumption made in [1] that transactions (and their associated fees) arrive at a constant and continuous rate. To be more precise, during any time interval t, the sum of fees in the announced transactions is ct, where c is a speciﬁc constant. As is emphasized in [1], this assumption helps to simplify analysis on the effects of transaction fees, although there is no guarantee it holds in practice. Thus, the transaction fee density of unveriﬁed transactions is also constant.
According to the Bitcoin mining protocol, each miner can decide what and how many transactions to include in their block. Following the assumption in [1], if there are m transaction fees available, a miner can choose to include any real-valued number of transaction fees between 0 and m in his block. That is, a miner can selectively choose a set of transactions whose fees are very close to whatever real-valued target he wants. It is a reasonable approximation due to the large number of transactions per block. Thus, the amount of transaction fees included in a block is proportional to its size. Besides, the set of transactions chosen by each miner has no effects on the time and chance to solve hid puzzle. However, it matters during the block broadcast time. Once a miner ﬁnds a block, he needs to broadcast it to the rest of the Bitcoin network. In order to be added permanently to the blockchain, this block must be accepted by the majority. If we take the block transfer delay into consideration, the time used to make a block reach consensus is heavily dependent on its size and hence, the set of transactions in it.
Once a block is mined, all miners move on to ﬁnd the next block. This process is repeated indeﬁnitely. The proﬁt of a miner for each block is the difference between his total expenses and his total reward. Rational miners strive to maximize their proﬁts, giving rise to a game.

TABLE I: Summary of Parameters.

Symbol T R α β n λi hi Bi Pi

Description
Average block arriving interval Block subsidy Transaction fee density Block propagation time per unit Number of miners or players Player i’s mining rate Player i’s mining power where hi = λi/T Block size decided by player i Payoff for player i to mine a block

IV. DISTRIBUTION IN THE BLOCK SIZE GAME

The repeated search for the blocks becomes a series of independent one-shot competitions, and in each competition, only one miner gets the reward but all miners pay expenses. To analyze the expected revenues, rather than considering the individual iterations, we consider a one-shot game played by the miners. A player’s strategy is the choice of his block size. The choice of block sizes are made a-priori by all the players.
To ﬁnd the payoff of each player, we start by analyzing the block ﬁnding time probability distribution. This is a function of the players selection of block sizes. We model the block ﬁnding time as a random variable denoted X with cumulative distribution function (CDF) and probability density function (PDF) denoted FX (t; B, λ) and fX (t; B, λ), respectively. The corresponding notations are listed in Table I.

A. Distribution Analysis

The ﬁrst step towards analyzing the system is to derive

an expression for the distribution, namely FX (t; B, λ) and fX (t; B, λ). We begin with the distribution of a single player i with mining rate λi. Assume i’s block size is Bi, thus, his propagation time is pi = βBi. Denote the time this player

requires for successfully mining a block as a random variable

Xi. The probability density function (PDF) of Xi is

fXi (t; Bi, λi) =

0 λie−λi(t−pi)

t < pi , t ≥ pi

(1)

which describes the probability of player i, whose mining

rate is λi, to successfully mines a block of size Bi at time t.

And the corresponding cumulative density function (CDF) is

FXi (t; Bi, λi) =

0 1 − e−λi(t−pi)

t < pi , t ≥ pi

(2)

deﬁning i’s accumulated winning probability until time t.

As FXi (t; Bi, λi) = P r(Xi ≤ t) = 1 − P r(Xi ≥ t), we can obtain that

P r(Xi ≥ t) =

1 e−λi (t−pi )

t < pi . t ≥ pi

(3)

Since all the players are competing on mining the next block,

any player with the minimal value of Xi is the ﬁrst one to

ﬁnd the next block. Therefore, the time required for ﬁnding

the next block is X = min Xi.
i∈{1,2,··· ,n}
We use a boolean variable activei(t) to capture a player i’s

winnablility at time t, which is expressed in the below:

activei(t) =

0 1

t < pi . t ≥ pi

(4)

It is obvious that, i has zero winnablility before time pi, even if he could solve his PoW puzzle at t = 0. After pi, i starts to hold a probability to win. Besides, we deﬁne active(t) as

the set of any player who is likely to win at time t. That is,

active(t) = {i | activei(t) = 1, ∀i}. The probability that none of the players have found a block

by time t, P r(X > t), is the product of P r(Xi > t) for all i
(as players are independent of each other), shown in Eq.(5).
n

P r(X > t) = P r(Xi > t) = P r(Xi > t)

i∈{1,2,··· ,n}

i=1

(5)

= e i∈active(t)[−λi(t−pi)]

Thus, X’s corresponding CDF and PDF are shown below,

FX (t; B, λ) = 1 − P r(X > t)

= 1 − e , i∈active(t)[−λi(t−pi)] (6)

fX (t; B, λ) = (

λ ) · e . i

i∈active(t) [−λi (t−pi )]

i∈active(t)

B. Proof of A Valid PDF
Theorem 1. fX (t; B, λ) is a valid probability density function to express the probability of ﬁnding a block as time passes in the whole blockchain mining network.

Proof. We present the full veriﬁcation process in the below

by checking that

+∞ −∞

fX (t;

B,

λ)dt

=

1

holds.

+∞

l=n pl+1

fX (t; B, λ)dt =

fX (t; B, λ)dt

(7)

−∞

l=1 pl

l=n
=
l=1

pl+1
λ|active(pl)|e
pl

dt j∈active(pl)[λj (t−pl)]

l=n
=
l=1

pl+1
λxle−xlλte
pl

dt j∈active(pl) pj

= e−λ

[e − e ] j∈active(pl)(pl−pj )

l∈active(pl)(pl+1−pj )

= e [e − e −λ

j∈active(p1)(p1−pj )

= e−λ(e0 − e+∞) = 1

] j∈active(p∞)(p∞−pj )

Thus, the PDF we use is valid, hence our model is as well.

V. PAYOFF IN THE BLOCK SIZE GAME

A. Payoff Analysis

The payoff is deﬁned as the expected proﬁt of player i.

We use the variable prof iti to represent i’s proﬁt and hence at time t, i’s expected proﬁt is denoted as E(prof iti|X = t). We model the proﬁt of a block consisting of the ﬁxed

block subsidy and transaction fees inside that block, which is

proportional to the block size. Thus, for a speciﬁc player i, the

total available proﬁt is R + αBi. Recall that, in expectation, the probability that a speciﬁc active player will ﬁnd a block

is his mining power divided by the total mining power owned

by all the active players. Thus, if a block was found at time

t, then the expected proﬁt of player i is shown below.

E(prof iti|X = t) =

activei(t) · λi j∈active(t) λj

(R

+

αBi)

(8)

Since we deﬁne the player i’s payoff as the expectation of his proﬁt, we express it in Eq.(9),

Pi = E(prof iti) = E(E(prof iti|X = t))

+∞

=

E(prof iti|X = t) · fX (t; B, λ)dt

−∞

(9)

ne = λi(R + αBi)
l=i

− e λj (pj −pl)

λj (pj −pl+1)

λj

where j ∈ active(pl) for all valid l. 1) Impacts of Individual Block Size on Self-payoff: A player
can improve his expected payoff by two means - increasing either (i) his expected reward or (ii) his chance of being rewarded. Although both of them are implemented by adjusting the block size, they are in conﬂicting directions. When a player chooses a big block size, he prefers to increase his potential transaction fee reward by including more transactions, at the cost of lowering his chance to be rewarded (since a bigger block incurs a longer propagation time). When a player chooses a small block size, he prefers to increase his chance for receiving a reward by shortening the propagation time of his block (therefore prolonging his mining time), at the cost of decreasing his reward amount from transaction fees.
2) Impacts of Individual Block Size on Others’ Payoffs:

Theorem 2. A player indirectly increases each of his rivals’ payoff by increasing his own block size.

Proof. We calculate the ﬁrst-order derivatives of player k’s

payoff over Bi:

∂Pk ∂Bi

ne = βλiλk(R + αBk)
l=max{i,k}

λj (pi−pl) − e λj

λj (pj −pl+1)
.

(10)

where k = i and j ∈ active(pl) for all valid l. Obviously, ∂Pk/∂Bi ≥ 0 always holds. This result can be
interrupted as follows. When any player increases his own

block size, it brings external beneﬁts to other players. This

is because the player lengthens his own propagation time,

allowing others to mine for a longer time. This increases their

probability of ﬁnding a valid PoW solution.

B. Optimal Block Size and Mining Power
According to Eq.(9), a player’s expected payoff is related to the block sizes selected by all the players, as well as the mining power distribution in the whole Bitcoin network. Now, we are interested in ﬁnding out how a player’s mining power would affect his decision on the block size. Intuitively,
Theorem 3. A player’s optimal block size is positively related to his mining power.
Proof. We assume two heterogeneous players: player 1 with lower mining power and player 2 with higher mining power. Besides, we assume there is no bound on the block size. Thus, players are allowed to put as many transactions as they want in the block. We deﬁne player 1’s mining power as h1 and player 2’s mining power as h2 , respectively. Given h1 + h2 = 1 and h1 < h2, then we can see λ1 = h1/T and λ2 = h2/T .

We analyze these two players’ payoffs under two possible

conditions: (1) B1 < B2 and (2) B1 > B2, respectively.

(1) B1 < B2: This means player 1 with lower mining power

would choose a smaller block size than player 2. Then, each

player’s expected payoff can be expressed as

P1 = (R + αB1)

1

−

(1

−

h )e−h1β(B2−B1)/T
1

P2

=

(R

+

αB )h e 2

2 −(1−h2)β(B2−B1)/T

.

(11)

To ﬁgure out each player’s optimal block size, we calculate

the ﬁrst-order derivative of Pj over Bj in Eq.(12).

∂P1 = α ∂B1

1−h e −h1β(B2−B1)

2

T

−

h1h2 T

β

(R

+

αB1

)e

−h1

β(B2 T

−B1

)

∂P2 ∂B2

= αh e −h1β(B2−B1)

2

T

−

h1 T

β

(R

+

αB2

)h2

e

−h1

β(B2 T

−B1

)

(12)

Let ∂P2/∂B2 = 0, then B2 = T/β(1−h2) − R/α. Let B2∗ =

argmax P2, thus we conclude that

B2 ≥0
B2∗ =

0

if

R α

≥

T β (1−h2 )

case (a)

T β (1−h2 )

−

R α

otherwise

case (b)

Now we discuss the optimal B1∗ dependent on B2∗. Given player

= argmax0≤B1≤B2∗ P1 2’s dominant strategy,

. B1∗ is player

1 should choose his best response. In case (a), B2∗ = 0, then

∂P1 = α ∂B1

1

−

h eh1βB1/T
2

−

h1h2 β(R T

+

αB1 )eh1 β B1/T

.

For any B1 ≥ 0, ∂P1/∂B1 ≤ 0 always holds. Thus, B1∗ = 0. In

the case (b), B2∗ = T/β(1−h2) − R/α, and the payoff function

P1 for player 1 is concave in B1 since / ∂2P1 (∂B1)2 < 0 always

holds. As ∂P1/∂B1 |B1=B2 < 0 holds if R/α < T/β(1−h2), there

is a unique B1∗, satisfying B1∗ < B2∗. Obviously, the analysis

result is consistent with the condition B1 < B2.

(2) B1 > B2: This means player 1 with lower mining power

would choose a bigger block size than player 2. Now, each

player’s expected payoff can be expressed as

P1

=

(R

+

αB )h e−(1−h1)β(B1−B2)/T
11

P2 = (R + αB2)

1

−

(1

−

h )e−h2β(B1−B2)/T
2

.

(13)

Then by calculating ∂P1/∂B1 = 0, we obtain the optimal block

size B1∗ for player 1, which is listed below.

0



B1∗ =

T

R

−

 β(1 − h1) α

if

R α

≥

T β (1−h1 )

otherwise

case (a) case (b)

We verify if B2∗ < B1∗ holds. We begin with case (a), where R/α ≥ T/β(1−h1) and B1∗ = 0. Thus, ∂P2/∂B2 = α 1 − h e1 h2βB2/T − (h1h2/T )β(R + αB2)eh2βB2/T . When

B2 = 0, we obtain ∂P2/∂B2 |B2=0 = (α − h1/T βR)h2. Based

on R/α ≥ T/β(1−h1), we can see B2∗ = 0 if α ≤ Rβh1/T (since

∂P2/∂B2 |B2=0 ≤ 0 ), and B2∗ > 0 if Rβh1/T ≤ α ≤ Rβh2/T

(since ∂P2/∂B2 |B2=0 > 0). Thus, B2∗ ≥ B1∗ holds in case (a).

We proceed with case (b), where R/α < T/β(1−h1) and B1∗ =

T/β(1−h1) − R/α.

When

B2 = B1∗,

we

obtain

| ∂P2
∂B2

B2 =B1∗

=

(1

−

h1 h2

)αh2

,

which

is

bigger

than

0

given

h1

<

h2

and

P2

is a concave function in B2 as / ∂2P2 (∂B2)2 < 0 holds, then

B2∗ > B1∗. Thus, the result violates the condition B1 > B2.

Optimal block size (MB) Optimal block size (MB)

1000 900 800 700 600 500 400 300 200 100
0

B assuming B <B

1

12

B2 assuming B1<B2

B assuming B >B

1

12

B2 assuming B1>B2

0.1

0.2

0.3

0.4

Player 1's mining power: h1

(a) R = 12.5, α = 0.16, β = 8.2

1000 900 800 700 600 500 400 300 200 100
0

B assuming B <B

1

12

B2 assuming B1<B2

B assuming B >B

1

12

B2 assuming B1>B2

0.1

0.2

0.3

0.4

Player 1's mining power: h1

(b) R = 25, α = 0.3, β = 8.2

Fig. 3: Player with lower mining power will have smaller optimal block size.
Based on the previous discussion, it is obvious to see that, given h1 < h2, B1∗ < B2∗ always holds.

We also use real-world data from the Bitcoin network to validate our conclusions. The numeric results can be seen in Fig. 3. We plot the optimal block sizes for both players under different conditions. In Fig. 3(a), the solid lines represent B1∗ and B2∗ under the condition B1 < B2. The red solid line is above the blue solid line, which is consistent with the condition B1 < B2. As h1 increases, i.e., h1 is close to h2, these two solids approach and ﬁnally intersect when h1 = h2. However, the result reﬂected by the dashed lines violates the condition B1 > B2 (the blue dashed line is below the red one). In the Fig. 3(b), we modify the Bitcoin network settings by changing the block subsidy, transaction fee density and the network delay, but we still get the same trend. Thus, a player with low mining power should choose a small block size while a player with high mining power should choose a big one.

VI. SYSTEM EQUILIBRIUM ANALYSIS AND SEARCH
The payoff presented in Eq.(9) is derived given all players’ strategies. If a player changes his strategy, then the payoffs of all the other players will also be affected. We are interested in ﬁnding equilibria, i.e., strategies of all players such that no player can improve its payoff by changing its strategy. It is infeasible to express a player’s payoff in a symbolic manner, since it is a function of all players’ strategies as well as the difﬁculty parameter, which is expressed as an implicit function. Therefore, we use numerical analysis to ﬁnd equilibria in the system.
We implement an equilibrium-search-tool, a tool we use to numerically search for an equilibrium, and that works in the following manner. The equilibrium-search-tool receives as an input for the system income and expenses parameters, as well as a list of tuples representing all players strategies. Each tuple of that list is in the form of {i, hi, Bi}, where i is a players index, hi is the mining power controlled by player i, and Bi is the block size selected by player i.
Iteratively, the equilibrium-search-tool randomly chooses an input tuple {i, hi, Bi}, and searches what value of a block size Bi will result in maximal payoff for player i. This process is repeated until no player increases its payoff by changing any of its rigs, meaning an equilibrium is reached. Note that all equilibria found by such process are only -Nash equilibria, as they are limited by the numerical precision of the calculation. To counter that predicament, we repeat the search process with different random start times and different optimizing order. In

all conducted experiments, the randomness introduced had no effect on the output equilibrium. That strengthens our analysis of an equilibrium.

VII. ONE MISBEHAVING MINER
We begin our analysis with an assumption that there is exactly one miner with misbehavior. For simplicity, we assume that miners are divided into two groups, a corrupted pool A controlled by the misbehaving miner, and the rest of the miners M behaving heuristically. It is irrelevant whether M operates as a single pool, as a collection of pools, or individually. Each miner in M always honestly mines with the default block size B (1M B at the time of writing this paper), while A manipulates his block size BA to optimize his expected payoff.

A. Attacker’s Expected Payoff

Let A’s mining power equal to hA, then M controls hM =

1−hA of the total mining power. Based on Eq.(9), we calculate

A’s expected payoff in Eq.(14).

 (R + αBA)

1 − (1 − h )e A −hAβ(B−BA)/T

PA =

(R

+

αB )h e A

A −(1−hA)β(BA−B)/T

if BA ≤ B. otherwise.

(14) B. Numerical Analysis on One-Sided Misbehavior

The expected payoff presented in Eq.(14) is derived given A’s mining power and block size. In fact, A’s optimal block size BA∗ can be decided according to ∂PA/∂BA = 0, and is an implicit function related to hA. Now, we focus on how A’s mining power hA would inﬂuence his decision on BA. Thus, we allow A to put as many (or few) transactions as he wants in the block. Since it is infeasible to express BA∗ in a symbolic manner, we use numerical analysis to ﬁnd BA∗ under different values of hA, in hopes of ﬁnding out a uniﬁed and reasonable explanation to these numerical results.
Fig. 4(a) shows how A’s optimal block size BA∗ is related to his mining power hA, given B = 1 and T = 600. We ﬁx the parameters R, α, and β and vary the parameter hA. Values of each set (R, α, β) are based on the real-time information from [16]. From the black dashed line we can see A always puts few transactions in his block. BA∗ = 0 is reasonable due to the huge network delay, i.e., β = 82. When we set the network delay to a normal level (β = 8.2), we ﬁnd A’s optimal block size becomes larger as his mining power
increases. We can also see that decreasing the block subsidy motivates A to increase his block size to optimize payoff, even
if the transaction fee density decreases. Thus, we could predict
that, once the transaction fee dominates the Bitcoin reward
mechanism, optimal block size increases for each player no
matter what his mining power is. Results in Fig. 4(b)-(c)
show that, the payoff ratio is equivalent to the mining ratio between A and M when A adopts his optimal block size while M follows default block size. In fact, if only A seeks
to gain more by manipulating his block size, we could see the payoff distribution between A and M still follows the fairness
requirement: the payoff should be distributed proportionally to
the mining power in the long run.

(a) Optimal block size using different sets of (R, α, β).

Ratio

0.5

0.4

Payoff ratio rP Mining power ratio rM

0.3

zeroline

r -r
PM
0.2

0.1

0

-0.1 0

0.05 0.1 0.15 0.2 0.25 0.3 A's mining power: hA

(b) Payoff ratio Vs Mining power ratio between A and M when R = 12.5.

Ratio

0.5

0.4

Payoff ratio rP Mining power ratio rM

0.3

rP-rM

0.2

0.1

0

-0.1 0

0.05 0.1 0.15 0.2 0.25 0.3 A's mining power: hA

(c) Payoff ratio Vs Mining power ratio between A and M when R = 25.

Fig. 4: Numerical analysis based on real-time information from [10].

Block propagation delay )

80

80

Block propagation delay )

70

70

60

60

50

50

40

40

30

30

20

20

10

10

0

0

0

1.5

3

4.5

6

7.5

0

1.5

3

4.5

6

7.5

Transaction fee density

Transaction fee density

(a) R = 12.5

(b) R = 0

Fig. 5: Existence of the peaceful equilibrium when R is ﬁxed.

50

50

Block reward R

Block reward R

25

25

12.5

12.5

6.25

6.25

3.125

3.125

0

0

0

1.5

3

4.5

6

7.5

0

1.5

3

4.5

6

7.5

Transaction fee density

Transaction fee density

(a) β = 8.2

(b) β = 82

Fig. 6: Existence of the peaceful equilibrium when β is ﬁxed.

Since any block over 1 MB will be denied in the real Bitcoin network, we are interested in ﬁnding peaceful equilibria which refrain A with any hA from manipulating his block size. That is, we want to ﬁnd on what conditions, A can optimize his payoff by always ﬁlling up his 1-MB block. Obviously, BA∗ ≥ 1 must hold on those conditions, such that A is forced to ﬁll up his block, in order to maximize his expected payoff (although it is still not his optimal payoff due to the 1M B limitation).
In Fig. 5(a), we ﬁrstly ﬁx the parameter R as 12.5, and we vary the parameters α and β. The red shaded areas represent the existence of peaceful equilibria given different values of α and β (if you are reading this paper in a black-andwhite version, those grey parts represent equilibria). The ﬁgure shows that, a peaceful equilibrium tends to appear when α is high and β is low. That is, if the transaction fee density is high enough and the network delay is within a low range, A’s optimal block size is always over 1 MB, which forces him to maximize his obtainable payoff by choosing his block size as the default 1 MB. In Fig. 5(b), we assume the block reward runs dry, i.e., R = 0, and we cannot observe a peaceful equilibrium unless either α → 0 or β ≥ 600 (which is impossible in reality unless a delay attack exists). This is reasonable since transaction fees are the only incentive.
In Fig. 6, we ﬁx the parameters β (81.92 in (a) and 8.192

in (b)), and we vary the parameters R and α. These ﬁgures show that if R is low and α is high, then a peaceful equilibrium is possible; however, if either of these parameters is deviant, then there can be no peace. This further conﬁrms the result in Fig. 5(b), as the block subsidy goes low (even dry), the transaction fee dominates, A with any mining power has the motivation to choose a larger block size. Besides, Fig. 6 also implies β is especially important. As we can compare, the red shaded area obviously shrinks as β goes up. That is, dramatic increase on the network delay will lead A to choose a block size smaller than 1 MB. In practice, if someone issues a delay attack (which can delay a message for at most 20 minutes ), then players may have no incentive to collect transactions in their blocks. This would be a disaster for the liveness of Bitcoin.

VIII. TWO POOLS
We proceed to analyze the case with two misbehaving miners where miner L has a small pool and miner H has a big pool. By size comparison, we simply mean that L has less mining power than H. Obviously, BL∗ ≤ BH∗ . A third entity M represents the rest of the Bitcoin mining market and behaves heuristically, using the default block size B.

A. Peaceful Equilibria

First, we are interested in ﬁnding peaceful equilibria which

refrain both L and H from deviating from B. On these

conditions, both BL∗ and BH∗ must be no less than B so that if L and H want to maximize their expected payoffs, they have

to ﬁll up their blocks. The payoff functions of L and H under

the condition of B ≤ BL ≤ BH are listed in Eq.(15):

PL

=

(R

+

αBL)

hL hM +

hL

×

e − h e −hM β(BL−B)/T

H −hM β(BH −B)/T −hLβ(BH −BL)/T

(15)

PH

=

(R + αB )h e . −hM β(BH −B)/T −hLβ(BH −BL)/T
HH

We can calculate BL∗ and BH∗ by solving the equations

∂PL/∂BL = 0 and ∂PH /∂BH = 0 if R, α, and β are

all given. Again, we use numerical analysis here and the

corresponding results are present in Fig. 7 and Fig. 8.

In Fig. 7, we ﬁx R while vary α and β and the red shaded

areas are peaceful equilibria given different values of α and β.

Comparing Fig. 7 with Fig. 5, we ﬁnd the peaceful equilibria

are reduced. This is because more misbehaved miners leads to

Block propagation delay )

80

80

Block propagation delay )

70

70

60

60

50

50

40

40

30

30

20

20

10

10

0

0

0

1.5

3

4.5

6

7.5

0

1.5

3

4.5

6

7.5

Transaction fee density

Transaction fee density

(a) R = 12.5

(b) R = 0

Fig. 7: Existence of the peaceful equilibrium when R is ﬁxed.

50

50

Block reward R

Block reward R

25

25

12.5

12.5

6.25

6.25

3.125

3.125

0

0

0

1.5

3

4.5

6

7.5

0

1.5

3

4.5

6

7.5

Transaction fee density

Transaction fee density

(a) β = 8.2

(b) β = 82

Fig. 8: Existence of the peaceful equilibrium when β is ﬁxed.

a more unstable and unpredictable mining environment. When R = 12.5, Fig. 7(a) shows that a peaceful equilibrium appears if α is high and β is low. That is, if transaction fee density is high enough and network delay is within a low range, both BL∗ and BH∗ are over 1 MB, thereby they have to choose the default block size to obtain a maximized payoff in expectation. In Fig. 7(b), we assume the block reward runs dry, i.e., R = 0, we ﬁnd that a peaceful equilibrium comes as long as the network delay β falls into a reasonable range since transaction fees are the only income source. In Fig. 8, we ﬁx β while vary R and α. These ﬁgures show that, if R is low and α is high, then a peaceful equilibrium is possible; however, if either of these parameters is deviant, then there can be no peace. Thus, when transaction fees dominate, L and H with any mining power have the motivation to choose larger block sizes. Fig. 8 also shows the red shaded area obviously shrinks as the number of misbehaved players increases. Thus, the more misbehaved players, the less stable Bitcoin mining will be.

B. One-Sided Misbehaviors

We also want to know when only L is deviant from the default block size, which means BL∗ < B and BH∗ ≥ B. Below are the payoff functions under the assumption BL < B
and BH = B. The equation given below is the corresponding
payoff functions when only L misbehaves.

PL = (R + αBL)×

1−

hM

e − h h e −hLβ(B−BL)/T

LH

−hL β (B−BL )/T

hL + hM

hM + hL

= (R + αBL)

1

−

(1

−

H )e−hLβ(B−BL)/T
L

PH = (R + αB)hH e−hLβ(B−BL)/T .

(16)

Again, we conduct numerical analysis to ﬁnd Nash equilib-

rium and see how parameters affect the achieved equilibria.

The red shade in Fig. 10 shows all possible equilibria when

L’s mining power varies given some ﬁxed parameter(s). We can see with a low transaction rate and a high network delay, a miner with lower mining power cannot achieve more payoff even by choosing a smaller block size than the default block size. Thus, we can conclude that, the manipulation on the block size doesn’t work here. In practice, however, the transaction rate is high and the network delay is usually controlled at a reasonable level. In those cases, we ﬁnd that there exists an upper bound for L’s mining power. See the example in Fig. 10(a) given the parameters: R = 12.5, α = 6, β = 8.2, the upper bound is around 8%. Once exceeding this bound, there is no existence of equilibria, which means, if L holds more than 8% mining power, then his optimal block size is deﬁnitely smaller than B. As a misbehaved player, L could choose a BL∗ instead of B. Thus, the current default block size 1 MB can never ensure any player would behave well, since a misbehaved player with over 8% mining power can manipulate his block size by setting it smaller than the default to gain more than his fair reward share.

C. Two-Sided Misbehaviors

We now analyze when both sides want to misbehave, which means BL∗ < B and BH∗ < B. Given these assumptions, we start our analysis on the two-sided-misbehavior scenario by

expressing the utilities of both parties.

According to our previous analysis, we know that the player

with higher mining power always performs better if its block

size is bigger than that of a miner with lower mining power,

i.e., BH ≥ BL given hH ≥ hL. Below are the payoff functions

under the assumption BL ≤ BH < B:

PL =(R + αBL)

1−

hH

e−hLβ(BH −BL)/T

hL + hH

− h h e L M

−hLβ(B−BL/T )−−hH β(B−BH )/T

hL + hH

PH =(R + αBH )

hH

e−hLβ(BH −BL)/T

hL + hH

(17)

− h h e . H M −hLβ(B−BL)/T −−hH β(B−BH )/T hL + hH

According to the numerical analysis, we found the anticipated equilibrium is hardly to be found in the current Bitcoin network. This means, even in such a simpliﬁed scenario, the default block size 1 MB cannot refrain players from manipulating block sizes to gain more. Thus, we need to reconsider how the Bitcoin network designs the default block size B. An important design protocol is that, B should be smaller the optimal block size of every player with any mining power. In the next part, we will use the current information of the Bitcoin network to recommend a suitable default block size according to the previously-mentioned design protocol.

D. Extension on Real Bitcion Mining Network
We now make an educated estimation on the real Bitcion network. In Bitcoin today, there are 7 mining pools [11] controlling about 85% of the mining power, while the rest is divided among many smaller mining pools. Although they

0.3

0.3

0.3

H's mining power: hH

H's mining power: h
H

H's mining power: hH

0.25

0.25

0.25

0.2

0.2

0.2

0.15

0.15

0.15

0.1

0.1

0.1

0.05

0.05

0.05

0

0

0.05 0.1 0.15 0.2 0.25 0.3

L's mining power: hL

(a) β = 8.2

0

0

0.05 0.1 0.15 0.2 0.25 0.3

L's mining power: hL

(b) β = 82

0

0

0.05 0.1 0.15 0.2 0.25 0.3

L's mining power: hL

(c) β = 82

Fig. 9: Existence of the peaceful equilibrium when β is ﬁxed. Red shaded areas represent parameter combinations where the peaceful equilibrium exists.

H's mining power: hH

0.3 0.25 0.2 0.15 0.1 0.05
0 0

0.05 0.1 0.15 0.2 0.25 0.3 L's mining power: hL
(a) β = 8.2

H's mining power: hH

0.3 0.25
0.2 0.15
0.1 0.05
0 0

0.05 0.1 0.15 0.2 0.25 0.3 L's mining power: hL
(b) β = 82

Fig. 10: Existence of the peaceful equilibrium when β is ﬁxed.

vary in size, we approximate that situation by assuming 8 equal-size miners.
Currently, the rewards from minting and fees are 12.5 BTC and about 1 BTC, respectively. We extend from previous analysis and try to ﬁnd peaceful equilibrium among eight mining pools. With the help of Matlab, we ﬁnd the default block size, which is suggested to be 4 MB.

IX. CONCLUSION
We deﬁne and analyze the block size game exploring how block sizes form as a function of block subsidy and transaction fees. We show that once fees become signiﬁcant, then manipulation on the block size appears. However, it does not happen uniformly as previously believed, while it has a signiﬁcant effect on blockchain security. This means that base rewards are critical for system security, and should be achieved either by subsidies, fee backlogs, or alternative fee schemes [22, 23]. We show that the default block size 4 MB is sufﬁcient to avoid deviant mining behavior of the block sizes in presented scenarios; we expect Bitcoin to drop below this threshold within a decade.

X. ACKNOWLEDGMENT
This research was supported in part by NSF grants CNS 1824440, CNS 1828363, CNS 1757533, CNS 1629746, CNS1651947, and CNS 1564128.

REFERENCES
[1] M. Carlsten, H. Kalodner, S. Matthew Weinberg, and A. Narayanan. On the Instability of Bitcoin Without the Block Reward, In CCS, 154167, 2016.
[2] S. Nakamoto. Bitcoin: A Peer-to-Peer Electronic Cash System. https://bitcoin:org/bitcoin:pdf, 2008
[3] N. Houy. The Bitcoin Mining Game. In SSRN Electronic Journal, 2014.

[4] I. Eyal and E. G. Sirer. Majority is not enough: Bitcoin mining is vulnerable. In Financial Cryptography, 2014.
[5] N. T. Courtois and L. Bahack. On subversive miner strategies and block withholding attack in bitcoin digital currency. arXiv preprint arXiv:1402.1718, 2014.
[6] A. Sapirshtein, Y. Sompolinsky, and A. Zohar. Optimal selﬁsh mining strategies in bitcoin. arXiv preprint arXiv:1507.06183, 2015.
[7] A. Miller, J. Litton, A. Pachulski, N. Gupta, D. Levin, N. Spring, and B. Bhattacharjee, Discovering bitcoins public topology and inﬂuential nodes. Tech. Rep., [Online]. Available: https://cs.umd.edu/ projects/coinscope/coinscope.pdf, 2015.
[8] A. Biryukov and I. Pustogarov. Bitcoin over Tor isnt a good idea. arXiv preprint arXiv:1410.6079, 2014.
[9] E. Heilman, A. Kendler, A. Zohar, and S. Goldberg. Eclipse attacks on bitcoins peer-to-peer network. In USENIX Security, 2015.
[10] I.Eyal. The miners dilemma. arXiv 1411.7099, 2014. [11] Y. Lewenberg, Y. Bachrach, Y. Sompolinsky, A. Zohar, and
J. Rosenschein. Bitcoin mining pools: A cooperative game theoretic analysis. In AAMAS, 2015. [12] J. A. Kroll, I. C. Davey, and E. W. Felten. The economics of bitcoin mining, or bitcoin in the presence of adversaries. 2013 [13] Y. Yorozu, M. Hirano, K. Oka, and Y. Tagawa. Electron spectroscopy studies on magneto-optical media and plastic substrate interface. In IEEE Transl. J. Magn. Japan, 1987. [14] J. Garay, A. Kiayias, and N. Leonardos. The bitcoin backbone protocol: Analysis and applications. In TACT, 2015. [15] M. Babaioff, S. Dobzinski, S. Oren, and A. Zohar. On bitcoin and red balloons. In EC, pages 5673. ACM, 2012. [16] C. Decker and R. Wattenhofer. Information propagation in the bitcoin network. In IEEE P2P, pages 110, 2013. [17] S. L. Reed. Bitcoin Cooperative Proof of Stake. In Computing Research Repository. Tech, 2014. [18] M. Malte and R. Bhme. Trends, tips, tolls: A longitudinal study of Bitcoin transaction fees. International Conference on Financial Cryptography and Data Security. Springer, Berlin, Heidelberg, 2015. [19] I. Tsabary and I. Eyal. The Gap Game. In CCS. ACM, 2018. [20] G. Juan, A. Kiayias, and N. Leonardos. ”The bitcoin backbone protocol: Analysis and applications.” In Annual International Conference on the Theory and Applications of Cryptographic Techniques, 2015. [21] G. Arthur, G. O. Karame, K. Wst, V. Glykantzis, H. Ritzdorf, and S. Capkun. ”On the security and performance of proof of work blockchains.” In Proceedings of the 2016 ACM SIGSAC conference on computer and communications security, [22] L. Ron, O. Sattath, and A, Zohar. ”Redesigning Bitcoin’s fee market.” arXiv preprint arXiv:1709.08881 (2017). [23] P. Rafael and E. Shi. ”Fruitchains: A fair blockchain.” In PODC, ACM, 2017.

