PURPLE IOT
PROJECT PRESENTATION

Jeljeli Hamza jeljelihamza@gmail.com

INDEX
1. What is Purple IoT ? 2. Architecture 3. Exploring Purple IoT 4. Concepts 5. Used Technologies

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

2

WHAT IS PURPLE IOT ?

❖Purple IoT is a Software as a service (SaaS) who provides a set of tools for Internet of things (IoT) data exchange through MQTT/HTTP.
❖Purple IoT offers :
❖ Connectivity interfaces : to collect data from devices (sensors, actuators .. ) through MQTT & HTTP protocols.
❖ Projects, Gateways & Devices Management ❖ Data monitoring : to monitor data collected from devices in real time. ❖ Data storage and viewing : Webservices with authentication OR using API keys.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

3

ARCHITECTURE
LOGICAL ARCHITECTURE

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

4

ARCHITECTURE
PHYSICAL ARCHITECTURE

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

5

EXPLORING PURPLE IOT

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

6

EXPLORING PURPLE IOT

User Projects

User Profile Link

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

7

EXPLORING PURPLE IOT

Devices Management

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

8

EXPLORING PURPLE IOT

Data Acquisition visualisation

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

9

CONCEPTS

❖A User account is the main key in the whole application. It enables the user to log in to the administration dashboard, authenticate to the MQTT or MQTTS Broker, to view data acquired from the devices through the Web service or to publish data through the MQTT over HTTP bridge.
❖A User account is identified by :
❖Username ❖Profile Type (Can be promoted as administrator by a SuperUser) ❖Password (The SHA-256 Fingerprint of the password is stored in the database not the password in
plain itself for security purposes) ❖Account Status : Blocked/Not Blocked ❖Set of additional User Informations : Name, Email Address, Phone Number, etc …

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

10

CONCEPTS

❖A User account may have one or many Projects.
❖A project is created by a User which contains the declarations of a set of gateways (theoretically) but in the implementation it is only limited in one gateway.
❖After the expiration of the project, every request received from the gateways will be rejected.
❖A Project is identified by:
❖Name ❖Project Type : IT Field for example, Agriculture, etc .. ❖Begin Date ❖End Date

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

11

CONCEPTS

❖A Gateway contains the configuration settings of a physical entity. Such settings could be IP Address, Port, Tags, etc …
❖A Gateway contains the declaration of a set of devices (Sensors, Actuators).
❖A Gateway is essentially identified by:
❖Tag ❖Contained Entity : for managing Entities inside each other ❖Used data exchange protocol : MQTT, MQTTS or HTTP
❖Other informations might be :
❖isClient : To indicate that this gateway is declared to listen to another broker. ❖IP Address & Port : Settings used for listening to another broker (In Base64). ❖MQTT Authentication : Settings used for listening to another broker. ❖MQTT Topic : Settings used for listening to another broker and Used for HTTP over MQTT Publishing (In Base64).

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

12

CONCEPTS
❖The Data sent through the gateway must be in JSON format.
❖GID : GatewayID (the broker can add this field if it wasn’t found in the message).
❖SID : The Device ID (required) ❖TD: TimeDate (the broker can add this field if
it wasn’t found in the message). ❖VAL : The value sent by the Device (required)
Note : Keys must be written in UPPERCASE.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

13

CONCEPTS

❖A Device is the declaration of a Physical Device sending data through a gateway to the software.
❖A Device is identified by :
❖Device ID : Unique ❖Minimum Value ❖Maximum Value ❖Device Position : Using X,Y,Z and also T (Time) Axis ❖Position Type : Static or Relative to the Gateway

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

14

CONCEPTS

❖Data are organized in two databases :
❖A Relational Database : Which contains user, projects, gateways and devices declarations and informations.
❖A Non Relational Database : Which contains Data received from devices. Data are stored in collections. Each collection is named by a Username.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

15

CONCEPTS
❖Viewing the Data* acquired from the devices or gateways is guaranteed using Webservices :

* : Requires authentication using the administration dashboard credentials. ** : Gateway that listen to an External Broker.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

16

CONCEPTS
❖Viewing the Data using generated API keys is also made possible through the Webservices :

* : Gateway that listen to an External Broker.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

17

CONCEPTS

❖ The response from the Webservice is in JSON format and it contains the following fields :
❖UUID : Unique identifier for the message.
❖GID : The Gateway ID
❖VAL : The Value sent by the device
❖SID : The Device ID
❖MQTT_TOPIC : MQTT Topic which the value arrived from.
❖TD: Time and Date of when the value was captured/Saved.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

18

USED TECHNOLOGIES
❖The application was mainly built using Java programming language.
❖Hibernate framework was used for persistance. ❖Vert.x framework was used for building a custom implementation of an MQTT Broker.
❖External brokers listeners are using the Paho MQTT Client framework.
❖Webservices are developped using Spring Boot and Spring Security Frameworks. ❖MySQL was for user, projects, gateways and devices declarations and informations.
❖MongoDB was used for storing data received from devices.

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

19

USED TECHNOLOGIES
❖There was also some frameworks developped specially for this project :
❖Captcha.js : is a simple captcha verification that works on the client side. It simply generates an image from a random string. The random string is never stored in the browser’s cache but it’s SHA-2 fingerprint is stored.
Source : https://github.com/hamzajeljeli95/Captcha.js

JELJELI HAMZA (JELJELIHAMZA@GMAIL.COM)

20

