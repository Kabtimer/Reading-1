sensors
Review
Software Deﬁned Networking for Improved Wireless Sensor Network Management: A Survey
Musa Ndiaye 1,*, Gerhard P. Hancke 1,2 and Adnan M. Abu-Mahfouz 3 1 Department of Electrical, Electronic and Computer Engineering, University of Pretoria, Pretoria 0028, South Africa; ghancke@ieee.org 2 Department of Computer Science, City University of Hong Kong, Hong Kong, China 3 CSIR Meraka Institute, Pretoria 0184, South Africa; a.abumahfouz@ieee.org * Correspondence: musandiaye@gmail.com; Tel.: +27-81-092-7695
Academic Editor: Kemal Akkaya Received: 3 March 2017; Accepted: 25 April 2017; Published: 4 May 2017
Abstract: Wireless sensor networks (WSNs) are becoming increasingly popular with the advent of the Internet of things (IoT). Various real-world applications of WSNs such as in smart grids, smart farming and smart health would require a potential deployment of thousands or maybe hundreds of thousands of sensor nodes/actuators. To ensure proper working order and network efﬁciency of such a network of sensor nodes, an effective WSN management system has to be integrated. However, the inherent challenges of WSNs such as sensor/actuator heterogeneity, application dependency and resource constraints have led to challenges in implementing effective traditional WSN management. This difﬁculty in management increases as the WSN becomes larger. Software Deﬁned Networking (SDN) provides a promising solution in ﬂexible management WSNs by allowing the separation of the control logic from the sensor nodes/actuators. The advantage with this SDN-based management in WSNs is that it enables centralized control of the entire WSN making it simpler to deploy network-wide management protocols and applications on demand. This paper highlights some of the recent work on traditional WSN management in brief and reviews SDN-based management techniques for WSNs in greater detail while drawing attention to the advantages that SDN brings to traditional WSN management. This paper also investigates open research challenges in coming up with mechanisms for ﬂexible and easier SDN-based WSN conﬁguration and management.
Keywords: wireless sensor networks; SDN-based Wireless Sensor Networks; software deﬁned networks for sensor nodes; network management architecture; network management abstractions

1. Introduction
Wireless sensor networks (WSNs) consist of individual nodes that interact with the environment by sensing and controlling physical parameters such as temperature, pressure and volume [1,2]. The nodes also have to interact with each other through wireless communication to achieve the sensing task [3], and are autonomous although some user-driven data collection is also possible [4]. These nodes contain computation, sensing, actuation and wireless communication functions [5,6]. Therefore, WSNs are continuously becoming important especially with the advent of Internet of Things (IoT) essential for monitoring several objects in applications such as smart cities, smart health care, smart water networks, smart power grids, smart farming and intelligent transport systems [7–13]. Furthermore, wireless sensor nodes are usually not tethered to a power source as they require a minimum amount of energy which is usually supplied by integrated batteries. WSNs are very ﬂexible in their applications but also pose a research challenge due to their resource constrained and application speciﬁc architecture. With increased demand in the application of WSNs, the extent

Sensors 2017, 17, 1031; doi:10.3390/s17051031

www.mdpi.com/journal/sensors

Sensors 2017, 17, 1031

2 of 32

to which the technology can be applied is limited by their resource constrained nature. The main weakness of wireless sensor networks is related to the resource limitations of the sensor hardware namely processing, memory, energy and communication capabilities [14], although they are widely used due to the increased number of embedded devices available making deployment easier [15]. However, other issues associated with management of large-scale WSNs arise with the increased node deployment such as meeting the necessary Quality of Service (QoS) for satisfactory operation even as nodes scale up to very large numbers. This is an important factor to consider especially in medical and industrial applications where quality and reliability are critical [16–19].
In addition, these nodes will not only need to process data but they would also need to be ﬂexible on variations in their tasks. Therefore, the nodes must be reprogrammable during operations when other tasks need priority. The current vendor speciﬁc sensor nodes being used in WSNs are difﬁcult to re-task when a new parameter is required to be sensed. Hu et al. [20] give an example of 100 sensor nodes deployed in a lake WSN to measure a pollution parameter. Obviously with application speciﬁc sensor nodes being used in WSNs, task reprogramming would require each sensor to be taken out of the water and the embedded software reprogrammed in the sensor hardware. Given the need for large-scale WSNs this method would not be realistic. Some vendors have integrated Over The Air Programming (OTAP) techniques; however, the data sensing and packet forwarding protocols are still speciﬁc to the vendor. The programmer would need to study and get familiar with the particular API functions which could pose a challenge [20] and is also counter-productive as using unique programs and protocols would prevent reuse of common functionalities which if possible would expedite prototyping and development of WSNs [21].
As part of the management of a large-scale WSN, mechanisms need to be employed to allow for maintainability and system self-healing. The system should be able to change parameters based on the conditions for example reducing service quality when the energy resource becomes scarce [5]. This is a challenge with the current conﬁguration of WSNs where the control packets and data packets are all routed through an already constrained network band. Developing a network management system for such a distributed WSN especially on a large-scale is a demanding task and is usually considered as a second phase in project planning.
The above problems are inherent to WSNs simply because each node is made to have all the functionalities from the physical layer to the application layer behaving like an autonomous system that performs both the data forwarding and network control [21]. Much as this works well especially with small-scale short range WSNs due to well-developed algorithms,it lacks simplicity and ﬂexibility making it hard to manage when trying to implement a long range and low power WSN at a large-scale.
In order to solve this problem in management of WSNs several techniques have been researched and developed and some of these methods revolve around the concept of Software Deﬁned Networking (SDN). SDN is a new leading architecture for networking [22,23]. It is based on the principle of dividing and separating the network into two separate planes; the control plane which determines the trafﬁc routes and the data plane which forwards the trafﬁc packets [24]. SDN was initially designed for traditional wired and wireless networks therefore using it for WSNs would pose a challenge due to limited node resources and other constraints inherent in the WSN architecture.
There have been some efforts to apply SDN to wireless sensor networking to enable management versatility and ﬂexibility [21] in what are referred to as Software Deﬁned Wireless Networks (SDWSNs). Integration of SDN would enable building of a Network Management System (NMS) to be no different from adding another application to the control plane. It would also allow for a centralized network view which is preferred by network administrators. As a result of the advantages that SDN introduces to ordinary WSNs, applications in SDN-based WSNs are being constantly developed and researched. While several management schemes for WSNs have been proposed and discussed in the past decade [25,26] and for the general SDN concept in recent years [27], there has been little emphasis on how SDN might improve management of WSNs or on the need for integration of

Sensors 2017, 17, 1031

3 of 32

SDN-based management architectures in WSNs. In any network that is expected to scale up to thousands of nodes and greater for use in various applications it is critical that management solutions be considered and developed [25]. There have been survey papers on general SDWSN aspects [28,29]; however, issues related to WSN management based on SDN which are crucial to the requirements of an efﬁcient WSN are yet to be adequately addressed.
Therefore, this paper brieﬂy reviews contributions in management of WSNs and presents a survey of the management techniques in which SDN has been implemented to improve the management of wireless sensor networks. In brief, this paper makes the following contributions.
(a) We provide an updated overview of management in WSNs as we review various contributions in network, topology, energy, security, maintenance and monitoring management of WSNs.
(b) We review SDN in general while focusing on the adoption of SDN-based management in real-world WSN applications.
(c) The general overview of the WSN management architecture based on SDN is presented and we review several contributions in the management entities of the architecture.
(d) We identify the requirements for improved and effective management of WSNs leveraging SDN thereby also highlighting available open challenges in SDN-based management for WSNs.
The approach for the rest of the paper is as follows: Section 2 presents a background on managing a WSN and Section 3 addresses general network management based on the SDN paradigm. Section 4 reviews real-world WSN applications and the beneﬁts of SDN-based management to these applications. Next, Section 5 focuses on reviewing SDN-based management of WSNs where SDN techniques and proposed architectures for managing the network topology, energy utilization, QoS, enabling software/hardware technologies and security for WSNs based on SDN are presented. Section 6 discusses the overview for SDN-based management in WSNs. In Section 7 several open challenges in management WSNs based on SDN are identiﬁed. Finally, we conclude in Section 8.
2. WSN Management
Management of WSN should allow for deﬁnition of a set of functions that promote productivity and integration in an organized manner of the conﬁguration, maintenance, operation and administration of the components and services of the WSN [25]. Several management methods have been proposed to manage functionality in the architecture of WSNs [30]. These methods take into account WSN metrics such as energy consumption, system lifespan, data latency, system tolerance to faults, accuracy in data acquisition or the Quality of Service and security.
WSN management should be simple and adhere to network dynamic behaviour, as well as provide efﬁciency in use of resources as proposed by Ruiz et al. [25] in the MANNA (A management architecture for wireless sensor networks) architecture. The MANNA architecture considers management policies for WSN services, functions and models by looking at management of WSNs in three dimensions deﬁning functionality abstractions:
• WSN functionalities which include maintenance, conﬁguration, sensor node operation (Sensing, processing, communication)
• Management levels which include application services and management of network elements (node clusters, data aggregation, network connectivity).
• Management of functional areas such as security, fault monitoring, performance and conﬁguration.
In this paper the structure of WSN management schemes presented is based on the above protocols [30] and abstraction entities [25] however we re-categorise them according to functional relationships as follows:

Sensors 2017, 17, 1031

4 of 32

(a) Network conﬁguration management: All issues associated with network conﬁguration and operation are categorised here. This includes protocol implementation, conﬁguration of data acquisition, network service, network level programming issues.
(b) Topology management: This management category handles issues related to the layout of the WSN. Management of sensor node location and distribution, network activity distribution, node to node communication including gateway elements fall under topology management.
(c) QoS management: Data latency, system performance, fault tolerance, data acquisition accuracy are among the issues managed under this category to ensure an optimum WSN quality of service.
(d) Energy management: All parameters regarding energy consumption in the network are categorised here including energy sources, energy consumption minimization and system lifespan in relation to available energy resources.
(e) Security management: Considering the popularity of WSNs, more sensitive information is being transmitted over such networks thus it is necessary the network is protected from malicious attacks. This would most involve management of network security functionalities such as encryption (key distribution techniques), threat detection and recovery which are categorised here.
(f) Maintenance management: Wireless sensor network aspects related to maintaining correct operation of the network are classiﬁed under this management category. Monitoring of network performance, energy levels and faults deﬁne some of these aspects.
As shall be discussed depending on the availability of the management techniques for the categories above, WSNs can be tailored to meet at least one or more of the following design criteria:
(a) Energy Efﬁciency- This takes into account the ability of a system to conserve energy or allow operation on limited power for long periods resulting in improved network lifetime.
(b) Robustness- This criteria ensures that a system performs as expected regardless of varying environmental conditions or design requirements [24]. A robust system should produce desirable performance despite network variations such as node failure, power outages and instabilities resulting from node mobility. An important characteristic of a robust management system is network reconﬁguration [31].
(c) Scalability- WSN nodes are expected to scale up very large numbers therefore a scalable management system should function efﬁciently at any network scale. Distributed management plays an important role here while reducing trafﬁc overhead which may otherwise be all directed to a centralized activity manager.
(d) Adaptability- This criteria refers to a system’s ability to meet network variations and task demands. The system should be able to work efﬁciently in varying network conditions such as energy ﬂuctuations, topology changes and task variation. The ability to reconﬁgure and re-task also plays an important role in meeting this criteria.
2.1. Network Conﬁguration Management
Wireless sensor network conﬁguration management integrates network conﬁguration, performance management and maintenance management of the sensor nodes. To ensure correct network operation, the network has to be conﬁgured taking into account events and problems likely to occur in the ﬁeld. Ruiz et al. [25] deﬁne some requirements for conﬁguration management at network level such as environmental variation data, operational environment speciﬁcation, topology discovery, synchronisation, node programming, node self test and node deployment. When the network is correctly conﬁgured and managed, information on the node location, administration state, usage state and energy level can easily be acquired.

Sensors 2017, 17, 1031

5 of 32

2.2. Topology Management
Apart from MANNA, Bridge of the SenSors (BOSS) has been presented as a network management framework creating a bridge and the resource demanding UPnP(Universal Plug and Play) protocol [32]. This enables the resource constrained sensor network to deploy its services to devices based on the UPnP protocol with zero conﬁguration. The architecture based on UPnP is composed of three parts: BOSS which forms the base node, UPnP control point and the non-UPnP nodes in the WSN. BOSS also provides the user with sensor network management services based on UPnP. It is worth noting that both MANNA and BOSS are based on the central management approach. A distributed management scheme allows for management tasks to be shared across nodes in the WSN also called Management by Delegation (MdB). This kind of setup reduces task loading on the central manager however the delegation process requires the use of intelligent nodes or mobile agents. Mobile agents are simply code sections required to distribute management tasks for execution locally on nodes while returning the resulting data to the central management node [25]. Lee at al. [31] discuss protocol functions based on MbD such as Agilla, sectoral sweepers, intelligent based power management and mobile agent based policy management.
2.3. QoS Management
Coupled with conﬁguration management is performance management. The two main objectives of performance management of a WSN are the Quality of Service (QoS) and the quality of the information obtained [25]. However, there is usually a trade-off between QoS, energy consumption and network lifetime [5,25]. Depending on the environmental conditions, resource constraints, service demand; the management protocols can permit lower QoS when energy is scarce and thus extending network lifetime. Several network management protocols have been proposed in QoS management of the WSN architecture including the hybrid data dissemination framework protocol RRP, Sensor Network Management System (SNMS), Simple Network Management Protocol (SNMP) and Wireless sensor network Management System (WinMS) [31]. SNMP is a widely used management protocol that provides good management for TCP/IP based networks and is supported by several vendors in managing both wired and wireless networks. It allows management of network performance and enables fault identiﬁcation. WSNManagement [33] based on SNMP protocols has been proposed as an efﬁcient network conﬁguration, fault and performance management system. The performance of WSNManagement showed efﬁciency in WSN management with a 5 petcent reduced packet loss and a 0.2 s reduced delay time while improving the lifetime of the overall sensor node system. Delay-related QoS is critical for WSNs, especially for real-time applications. Apart from WSNManagement, Zhao et al. [34] propose an optimized resource allocation solution for delay constrained Wireless Regional Area Networks (WRANs) to improve delay-related QoS management.
2.4. Energy Management
Energy management through software has been proposed [35] which minimises energy consumption of each sensor node by introducing a duty cycle to periodically turn on and then send the radio portion of a node to sleep. Implementing energy management schemes and energy efﬁcient protocols maximizes the network lifetime [36]. Power management protocols providing the WSN with control over energy consumption resulting in energy efﬁciency have been presented severally including SenOS, Appsleep and energy level management [31]. Intelligent energy management through a prediction based dynamic method has also been proposed [37]. This technique uses a particle ﬁlter that estimates non-Gaussian processes and non-linear processes to obtain information about a target state required for optimized node sleep and sensing scheduling. This results in more energy efﬁciency for extended network lifetime, in addition further optimization can be performed using distributed node computing.

Sensors 2017, 17, 1031

6 of 32

Similar contributions to energy management based on software duty cycling have been made by others [38,39], protocols such as Sparse Topology and Energy Management (STEM) [40] and SPAN [41,42] enable sensor nodes to go to sleep when not forwarding data. To support such energy management techniques a WSN also requires a working network management scheme in place. Lopez et al. [35] mention the need for node synchronisation when using the duty cycle method to manage energy. Works on network synchronisation have facilitated the need for node synchronisation [35]. Other energy management schemes such as energy provisioning using batteries and energy harvesting have been been presented in the past years [43]. Algorithms are being developed to further enhance the energy harvest method resulting in network self-sustainability and one such algorithm is the Energy Aware Adaptive Sampling Algorithm (EASA) proposed by Srbinovski et al. [44]. This energy management technique is suitable for power hungry nodes with the capacity to harvest energy and given the required power to process the algorithm, it can be implemented on any WSN.
2.5. Security Management
Management of security is difﬁcult to provide as WSNs are mainly made up of ad-hoc wireless networks with intermittent connectivity and resource limitations [25,45]. This leads to vulnerability to threats that could be internal, external, malicious or even accidental. Data and resources can thus be stolen or modiﬁed and a denial of service attack is also possible. Security management for example has been approached through the use of key management schemes [26]. Reegan et al. [26] mention various requirements in managing security such as authentication, conﬁdentiality, integrity, availability and authorisation. A network with high security features should be developed to meet these requirements however, the challenge here is the limited resource in bandwidth and energy inherent to WSNs [46,47]. Management of security therefore has to be based on effective key distribution [26] taking into account features such as bandwidth, sensor memory, transmission range and the necessary know-how [48]. Several key management schemes have also been discussed by Reegan et al. [26]. Much more recently Key management based on the dynamic clustering and optimal routing choice of the Mobile Sink has been proposed [49]. The scheme extends static key management to dynamic key management with an improved ﬂexibility while satisfying storage efﬁciency and connectivity. A further contribution has been made by proposing a hybrid key management scheme which takes advantage of both the Polynomial Pool and Basic Random (PPBR) key pre-distribution techniques to improve the difﬁculty in cracking the key system [50]. To tackle issues related with link connectivity in key management, the tree base path key establishment method is used.
2.6. Maintenance Management
Maintenance management as part of network management would enable higher QoS and an extended network lifetime. Faults in WSN occur frequently due to interruptions in connectivity, energy shortages, changes in the environmental conditions and other network events expected and unexpected. The network therefore, should be conﬁgured, managed and maintained in a manner that allows for self-healing and fault tolerance resulting in a robust characteristic enabling the WSN to provide useful information even when some nodes fall out of the network. Dayal and Kumar [51] have presented various fault mitigation techniques through management of the network topology.
An important aspect of maintenance management and fault mitigation is network monitoring required to collect information on the state of the network (e.g., node energy levels, bandwidth and link states). Thus, interfaces and tools have been developed to provide a visual representation of the network state such as Mote-view [52], SNAMP [53], spy-glass [54], tinyviz [55], nanomon [56] among others. Lee et al. [31] mention that systems such as the mote-view and others that have a central management scheme with all analysis data being sent collectively to a central server have the disadvantage of being passive and lack ﬂexibility in conﬁguration in an event of fault occurrence. This can be seen as a leverage for SDN in solving this lack of ﬂexibility, an aspect that becomes visible as management of WSNs based on SDN is explored in this paper. An Energy-efﬁcient Passive MOnitoring

Sensors 2017, 17, 1031

7 of 32

SysTem (EPMOSt) has been proposed taking into account the need for energy efﬁciency in WSNs [57]. Similar to WSNManagement [33] EPMOSt uses an SNMP agent to provide monitoring information with reduced energy consumption. This energy efﬁciency ensures longer network monitoring lifetime.
2.7. Comparison of WSN Management Systems
Notable WSN management systems discussed above are summarised in Table 1 and evaluated against the WSN design criteria. From the table we see that BOSS, Mobile Agent Based Power Management, WinMS, AppSleep and EpMOSt are promising management schemes meeting atleast three of the criteria required for an efﬁcient management system with WinMs being most efﬁcient.

Table 1. Available WSN management systems evaluation against the design criteria.

Management Scheme

Functionality

MANNA [25]
BOSS [32] Agilla [31] Sectoral Sweeper [31] Intelligent Agent- Based Power Management [31] Mobile Agent Based Power Management [31] RRP [31] SNMS [31]
SNMP [31]
WSNManagement [33]
WinMS [31] SenOS [31] AppSleep [31] Energy level management [31] EASA [44]
MOTE-VIEW [52]
EPMOSt [57]

Policy based framework, fault detection
Network state retrieval, power management Event detection
Switching node on/off
low power management
Policy based management Data aggregation
Health and event data collection
Network function deﬁnition and monitoring
Performance and fault management
Synchronisation, local repair and state retrieval Triggering node on/off
Power Management
Power management
Self-sustaining energy management
Network state and visualisation
Passive network monitoring

Energy Efﬁciency
NA Yes Yes Yes Yes Yes Yes Yes
No
No Yes Yes Yes Yes Yes Yes Yes

Robustness
NA
Yes No No No
Yes No Yes

Scalability
NA
No No No No
No No No

Adaptability
NA
Yes Yes No Yes
Yes No No

Yes

No

Yes

Yes

No

Yes

Yes

Yes

Yes

No

No

No

Yes

Yes

No

Yes

No

No

Yes

No

No

No

Yes

No

Yes

No

Yes

3. Network Management Based on SDN
The principle concept behind Software Deﬁned Networking (SDN) is based on the separation of the control plane from the data plane in the architecture of WSNs. This new paradigm allows for a logically centralized controller which is a central program acting as the Network Operating System (NOS) thus controlling and managing the overall behaviour of the network. The network devices such as sensor nodes and switches exist in the data plane and simply forward data based on ﬂow instructions provided by the controller. This approach to network management allows network conﬁguration to be performed globally as opposed to a distributed management scheme which may

Sensors 2017, 17, 1031

8 of 32

require individual conﬁguration of network devices to change network behaviour. The overall basic architecture is shown in Figure 1.

Application Plane ( Network applications)

Northbound API Control Plane ( Controllers / NOS)

East - West API

Southbound API

Data Plane ( Network of switches, sensor nodes, management nodes)

Figure 1. SDN overall architecture.
The SDN architecture integrates Application Programming Interfaces (APIs) which provide a working interface between the application, control and data planes. Between the application plane and the control plane are the northbound APIs and between the controller and the data plane exist the southbound APIs. The Southbound APIs facilitate for the ﬂow of control trafﬁc from the controller to the devices in the data plane. OpenFlow [20,21,58] is standard commonly used as a southbound interface [27] and most vendors are producing more OpenFlow capable network infrastructure. East-West APIs enable controllers that are in the same domain or neighbouring domains to communicate with each other [59]. It is important to mention here that SDN is not about improving the performance of the network but rather SDN has been seen to have the potential to simplify network management and allow for innovation through network programmability. Updates to network control and management are made as easy as installing new applications on a computer [60]. SDN changes the network administration problem into a programming problem increasing ﬂexibility, other potential beneﬁts of SDN in WSNs [14] include:
(a) Energy management: WSN nodes are energy constrained and thus need energy-efﬁcient protocols to be employed in sensor networks. SDN can provide an energy efﬁcient way for network management of WSNs. This is possible as having a logically centralized control plane maintains a complete view of the entire WSN and thus can reduce the power consumed by nodes in maintaining that view locally. Control plane functions can manage all the routing protocols saving nodes from following application speciﬁc protocols which might drain energy depending on trafﬁc. Alternative energy management techniques can also be employed at the control plane.
(b) Conﬁguration management: The complexity of network management can be simpliﬁed with due to the increased ﬂexibility of SDN, new routing protocols can be employed easily without reconﬁguring the nodes and also it reduces the need for compiling different versions for the same network applications for different sensor nodes. Thus, if a new management and control method becomes available, it can easily be deployed resulting in efﬁciency of operation.
Network management with different vendor speciﬁc network hardware can be challenging [27]. Network operators need to adjust to low-level vendor speciﬁc hardware conﬁgurations to implement complex high-level network management policies. Network management schemes such as those discussed in the previous section encounter difﬁculties in changing the policies embedded in the underlying network infrastructure. The direct result is the existence of application speciﬁc networks with few possibilities for improvement and innovation. New possibilities in management of a network and conﬁguration can be introduced by SDN. SDN helps solve some of the problems of network management by enabling easy and frequent changes to the network function and state,

Sensors 2017, 17, 1031

9 of 32

allowing conﬁguration of the network in high-level languages and providing visibility and control over the entire network making it easier to troubleshoot problems in the network.
In traditional wired/wireless networks, network operators have to implement and configure networks using a set of low-level device commands in the command line interface [27]. This is especially a problem with constantly varying network conditions. Operators have to manually adjust conﬁgurations frequently to meet these changes leaving room for misconﬁguration and mistakes in implementing changes [61]. With SDN it is much easier to integrate new protocols and ideas into the network through the use of a centralized controller. SDN introduces a global approach to management of network conﬁguration rather than local management which would require conﬁguration for each of the network devices to implement changes or integrate new services. Several work has been researched and proposed on the potential beneﬁts of implementing SDN in both wired and wireless networks [14,21,24,28,62]. Kim and Feamster [27] have designed and implemented Procera which is an event driven control framework for a network based on SDN. Procera focuses on network management by allowing operators to implement high-level policies which are translated into a set of forwarding rules. These rules are then used to enforce policies on the network hardware using OpenFlow [20,21,58,63]. This management process takes place at the policy layer of SDN which exits as part of the northbound API. There have been numerous prior researches on applying SDN in management of computer networks leaving room for study on how SDN can facilitate and enhance management of IoT. An SDN-based management architecture for IoT with a focus on Machine to Machine (M2M) infrastructure has been proposed by Huang et al. [64]. The proposed framework consists of a centralized controller, M2M nodes, a gateway linking non-M2M protocol general nodes to the controller. The framework was tested successfully for routing reconﬁguration without the need to deploy new infrastructure.
4. WSN Applications and the Need for SDN-Based Management
Wireless sensor networks are able to integrate various sensing capabilities thus providing support for various real-world applications. This ﬂexibility is accompanied by several research challenges in providing effective management for the application considering the resource constrained nature of WSNs. The various beneﬁts that SDN introduces to these management challenges allows it to be utilized in several applications such as in environmental applications, health care, military and in home networks. We shall brieﬂy discuss these application scenarios and bring to light the beneﬁts of SDN-based management in these areas.
4.1. Environmental Applications
A popular environmental application of WSNs is based on the measurement of physical parameters such as temperature, vibration, sound, chemicals and gases. This has led to application in scenarios such as the agriculture industry for irrigation or animal monitoring, water industry for development of smart water grids to enable efﬁcient distribution and control of potable water [11] and in disaster relief applications for monitoring and ﬁghting forest ﬁres and also in earthquake detection and rescue operations. Other applications include environmental control of pollutants and marine monitoring requiring long term unmanned WSN operations. However, such applications may require deployment of sensors over very large areas, harsh environments or even hard to reach regions which may result in dependence on sensor energy supply which affects network lifetime and the ability to alternate tasks upon change of sensing requirement or upon node failure [65]. There is therefore a need for effective topology, energy and maintenance management of which integration of SDN introduces to the application scenarios. SDN-based management would allow for a centralized network view of essential parameters suitable for large-scale applications, where energy is crucial SDN techniques provide effective resource allocation through software duty-cycling and by enabling easier use of trafﬁc engineering, congestion control, load balancing [66] and mobility management. SDN also

Sensors 2017, 17, 1031

10 of 32

provides an effective interface for sensor re-programmability necessary for function alternation without requiring additional hardware such as FPGAs [9].
4.2. Medicine and Health Care
WSN application in heath care has been considered to have the potential of being beneﬁcial to the quality of health especially for the chronically ill and elderly patients. WSNs can also be used for tracking of patients and doctors in hospitals which can prove useful in saving lives. A controversial application of WSNs in health care is the use of implantable sensor systems to monitor patient activities resulting in Wireless body Area Networks (WBANs). Darwish et al. [67] identify challenges to implementing WBANs among which are sensor maintenance once body-worn, energy management for sensor batteries considering that charging would be pose a challenge especially for the elderly as they have to remember to charge multiple sensors, insufﬁcient bandwidth resource to allow for transmission of large amounts of medical diagnostic data, meeting the QoS requirements of health monitoring hindered by WSN resource constraints, reliability of critical medical data packets being delivered, security and privacy of medical data, scalability and sensor mobility challenges as patients move about in their daily life. SDN-based management would provide a solution to several of these highlighted challenges based on the ability to provide energy and maintenance management from a central location which could be a task of hospital administration for instance. Furthermore, SDN techniques are being developed to reduce trafﬁc overhead data to mitigate bandwidth problems [68,69] and also to ensure accuracy of data and fault monitoring more efﬁciently. Considering the possibility of implanting multiple body sensors in close proximity which may result in interference affecting the QoS and application performance, SDN provides a solution based on separation of destructive interfering nodes. Security and privacy is a key issue in health applications and SDN provides several encryption algorithms that can be delivered on demand, the encryption techniques available are discussed later in this paper.
4.3. Military Applications
In military applications WSNs can be used to detect presence of enemy or friendly forces, assessment of terrain and chemical sensing of weapons. Recently Fraga-Lamas et al. [70] reviewed the possibility of applying IoT to warfare to increase efﬁciency. Uses of WSNs for defence IoT highlighted included application in ﬁre control, inventory tracking, ﬂeet monitoring, energy management and management of the health and safety of troops. However, to be suitable for use in defense and security WSNs need to meet operational requirements such as robustness, ease of deployment, interoperability/adaptability and most importantly security. SDN can be leveraged to better achieve these requirements as it maintains a global control of the network infrastructure in the ﬁeld which better manages system security and issuance of new task protocols during operation. SDN-based management also provides an opportunity to easier deploy mobility algorithms to handle constant movement of troops as these algorithms can be conﬁgured and managed in a more resource capable global controller.
4.4. Wireless Home Networks
WSNs for home use have seen increasing demands with arising smart homes and buildings in general. Homes are now composed of a network of light, motion and temperature sensor nodes that can be integrated in appliances to introduce smart capabilities in a home. This network can also be linked to the Internet to allow users to remotely control these home appliances. However, in addition to a network of smart devices is a network of other communication technologies such as WiFi, ethanet, cellular and power-line communications. The challenge with such a heterogeneous network is the lack of an automated system to enable network optimization by selecting the best communication technology to use, this decision is usually made by the user manually. Soetens et al. [71] have proposed an SDN-based management technique to improve management of such heterogeneous

Sensors 2017, 17, 1031

11 of 32

home networks by using OpenFlow-enabled link switches. SDN techniques have also been proposed to enhance the development and management of smart homes [72]. Smart device use is increasing in homes and this creates difﬁculty in management especially with the advent of video streaming services such as Youtube and Netﬂix. User demand and control becomes an important management factor leading to the need for smart home network management based on SDN. In addition, these user applications such as voice, video, gaming and others have to compete for bandwidth resulting in poor quality of service. Kumar et al. [73] have proposed and experimented on an SDN-based solution that allows users some control over the service quality for their devices enabled by ISPs. Other bandwidth allocation techniques for managing home applications like video and voice have been proposed based on SDN to improve quality of service including home slice [74], Network Assisted Video Streaming (NAVS) [75] and SDN@home [76].
5. Management of WSNs Based on SDN
WSNs are composed of a network of sensors that are deployed to measure parameters such as temperature, pressure and air quality. The sensor network may exist as hundreds or even thousands of resource constrained nodes. Also taking into account the inherent challenges of WSNs in terms of energy requirement which is directly linked to network lifetime, the application speciﬁc nature with vertical integration [27] where manufacturers and vendors control the end products of the devices as well as the software and hardware of their infrastructure . Another challenge introduced as the nodes are deployed in the ﬁeld is the management of the network topology [77] where we have to consider the coverage of the network and Quality of Service in an environment with varying conditions at a limited energy supply. Integration of SDN in WSN has been proposed [14,21,24] to mitigate these challenges. Integration of SDN would require consideration of how the network will be managed to ensure efﬁcient performance and resource allocation. The WSN architecture based on SDN can be divided into managerial entities similar to the management functionality abstractions as mentioned by Ruiz et al. [25]. Figure 2 shows this architecture [28] adapted with a further focus on the management entities we will consider in our review and evaluation of SDN-based management for WSNs. The architecture shown depicts an SDN-based WSN with a centralized controller thus providing a global view of the entire network resulting in efﬁcient management. Management of the network topology, energy, conﬁguration, QoS and security are done centrally in the control plane while management of enabling technologies can be implemented at all levels of the architecture. In the data plane enabling hardware such as SDN-enabled sensor nodes with multiple sensing capabilities and hardware capabilities can be installed while programming of the nodes for various applications can be done and managed centrally in the control plane.
5.1. Network Conﬁguration Management
Network conﬁguration management is a functional area that will allow the sensor network to meet its required speciﬁcation. In an SDN-based WSN architecture, the ﬁrst challenge with meeting the requirements has to do with SDN support for the WSN architecture [28]. SDN was designed for conventional networks which are different from WSNs and therefore it is necessary to conﬁgure the network to enable SDN support efﬁciently. This is particularly important in harnessing existing network management protocols and architectures which can provide the SDN-based WSN with a proper network management model [29]. Several proposals have been made towards conﬁguring and extending SDN functionality for wireless sensor applications. Sensor OpenFlow (SOF) [20,21] is one such proposal which serves as a standard communication protocol between the data plane and control plane and is a core component of WSNs based on SDN. The idea is based on the data plane that is composed of sensors performing ﬂow-based packet forwarding and the control plane consisting of a controller handling all the network intelligence at a central place (Centralized Control). This allows the data plane to be fully programmable by customizing the ﬂow table of each sensor. The challenge with this concept is that it is built on the fundamental OpenFlow assumption that the underlying

Sensors 2017, 17, 1031

12 of 32

network is made of Ethanet switches and IP routers which are wired protocols useful in cellular and enterprise backbones and data centers; and not so much in WSNs. Moreover, using the centralized controller would raise questions on the management of security in an event of attacks directed towards the controller [14]. Thus, adequate network security management has to be in place.

Application Plane Control Plane

Energy Management

Network Monitoring Management

Northbound API

Network Configuration Management

Topology Management Security Management

QoS Management

Southbound API

Data Plane

Sensor Node

Management of Enabling
Technologies

Figure 2. An SDN-based wireless sensor network management architecture, adapted from [28] (Republished with permission of IEEE, from Wireless Software Deﬁned Networking: a Survey and Taxonomy, I. T. Haque and N. Abu-Ghazaleh,18, 2731–2737, 2017 Copyright).
Software Deﬁned Wireless Network (SDWN) is yet another solution that has been prototyped to extend SDN functionality in wireless and mobile communications speciﬁcally providing support for SDN in Low Rate Wireless Personal Area Networks (LR-WPANs) [60]. SDWN uses energy management techniques such as duty cycling, in-network data aggregation and cross layer optimization to reduce energy usage. However, adapting the SDWN architecture to integrate and conﬁgure SDN for WSNs to enable efﬁcient energy use needs further investigation as the SDWN requires messages to be passed between control and data layers which may strain the already resource constrained WSN.
Galluccio et al. [78] have proposed SDN-WISE (SDN-WIreless SEnsor network), a technique which makes sensor nodes programmable as ﬁnite state machines so as to enable them to run applications that cannot be supported by stateless solutions. It provides an API which allows developers to program the SDN controller in a language of their choice enabling simplicity and ﬂexibility in the management of network programming. This is especially useful when managing a large-scale and long range wireless sensor network.
Conﬁguration of SDN-based WSNs should allow the SDN protocols which are address-centric to address the inherently data-centric WSN. A solution [21] to this would be integrating the use of IP stacks such as uIP, uIPv6 [79,80] based on Contiki OS [81], Berkley Low power IP (BLIP) based on Tiny OS [82,83] for low power networks. As a result of this integration IPv6 based low-power wireless Personal Area Networks (6LowPAN) have been realised. Management architectures based on the 6LowPAN protocol have thus been proposed including the LowPAN Network Management Protocol (LNMP) [84], 6LowPAN-SNMP [85] which is an extension of the existing SNMP [31] protocol and a further network management architecture based on SNMP for 6LowPANs proposed by Feng et al. [86]. These management architectures although used for various wireless networks provide a model for developing a proper network management architecture for the WSNs based on SDN [29].

Sensors 2017, 17, 1031

13 of 32

Another aspect of network conﬁguration includes management of the ﬂow of control and data trafﬁc which use the same network path (in band) in WSNs unlike in wired SDN applications where a dedicated control channel exists for communication between the controller and the data plane. This would pose a challenge for WSN control data if not managed due to variations in connectivity from link and node failures, mobility, routing and other similar network parameter variations. In line with this, proposals have been made to reduce control trafﬁc as a management solution, Luo et al. [21] for instance propose a method of only sending a single packet meant for a ﬂow setup request to the controller when a table mismatch occurs and suppressing the proceeding packet requests with the associated packet having the same destination address as the ﬁrst packet until a corresponding request is received from the controller or when a set expiry time is reached.
5.2. Topology Management
WSNs are different from the conventional networks that SDN was initially designed for. WSNs have limited resources and use the same channel for node to node communication and data processing (in-network processing). SDN allows for decoupling of control plane and data plane however, for WSNs the control and data packets will still use the already resource constrained and dynamic WSN topology. In management of the network topology, the technique employed should be able to support node mobility which results in topology changes including dealing with unreliable wireless links. These functions should be in tandem with management of QoS which ensures that the network is robust. WSN topology management based on SDN can be divided into management of the following:
5.2.1. Scalability and Localization Management
The architectures reviewed so far are based on a centralized controller in a ﬂat topology which is easy to deploy and manage. Gante et al. [14] for instance introduce smart management of SDWSNs to improve efﬁciency and overcome inherent difﬁculties of ordinary WSNs. The management scheme is based on a proposed base station architecture for WSNs with an integrated controller. The controller creates forwarding rules that are placed in ﬂow tables from location data obtained through localization techniques processed in the application layer of the architecture. However, ﬂat topologies like this are limited to short range and small scale applications and as networks scale up to very large numbers of nodes there is need to integrate topologies that are hierarchical or provide a virtual overlay of the physical network [87] to support efﬁcient scalability and localization. A few architectures are available for network management designed towards improving SDN-based WSN management efﬁciency by using distributed multiple controllers rather than a single centralized controller. This also enables efﬁcient scalability and a reduction in overhead control data as it is not necessary to communicate all control data centrally. Distributed controllers also allow for effective security and QoS management as the WSN is not solely dependent on one controller, making the system more reliable during attacks or failures in the link to the central controller.
A hierarchical architecture called Software Deﬁned Clustered Sensor Networks (SDCSN) has been proposed [88] to use multiple base stations as controllers that also play the role of cluster heads. A large-scale group of nodes is divided into clusters and there is a cluster head for each. The cluster head controls and coordinates the sensor nodes in each cluster and all the information processed in each cluster is routed to the cluster head. Management of such an architecture requires enabling the sensor nodes to function as controllers effectively enabling multiple controllers in the network. Oliveira et al. [69] design and implement an architecture based on multiple controllers within a WSN in a framework called TinySDN based on Tiny-OS with a design structure that consists of SDN-enabled sensor nodes and an SDN controller node. This addresses issues such as in-band control, higher communication latency, and limited energy supply. The downside to this management approach is that the cluster head can also become vulnerable to attack posing a network security risk [87] however self-stabilisation techniques for re-selecting a new cluster head upon such an event

Sensors 2017, 17, 1031

14 of 32

have been proposed [89]. To manage the network with more ﬂexibility for integration of various functions an architecture based on network virtualisation has been proposed [59,87,90]. Basically, a virtual overlay topology can be built to certain speciﬁcations based on an actual physical WSN based on SDN [87] as shown in Figure 3.

Overlay Network

Virtual Node

Physical Network
Physical node
Figure 3. Topology based on virtual overlay [87] (Republished with permission of IEEE, from SDN-Based Application Framework for Wireless Sensor and Actor Networks, Zhou, J.; Jiang, H.; Wu, J.; Wu, L.; Zhu, C.; Li, W., 4, 1583–1594, 2017 Copyright).
Another hierarchical architecture proposed to manage scalability is context based logical clustering [91,92]. This is based on logically clustering sensors according to context (gathered data type) regardless of their physical distribution based on HyperFlow [93] unlike other clustering methods proposed which allow clustering of adjacent nodes. Clustering sensors according to context would allow for data and resource sharing regardless of network expansion. Each cluster has a local controller which maybe physically distributed but logically synchronised hence referred to as logical sink in the virtual network overlay. The performance study shows that this technique improves network stability effectively [92].
Sensor data without location information is not useful especially in large-scale applications with hundreds to thousands of nodes. SDN in WSNs provides the possibility of obtaining location information with a good level of accuracy by implementing proposed localization algorithms [94–99]. The localization algorithm to be implemented and managed can either be centralized or distributed depending on the mapping information and level of accuracy provided by the algorithm. More recently a localization node selection algorithm based on the SDN and the Cramer-Rao Lower Bound (CRLB) metric has been investigated and proposed [100]. The algorithm makes use of the global network view that the SDN controller has while satisfying the need for energy conservation and the simulation results presented a signiﬁcant improvement in the localization performance.
5.2.2. Mobility Management
Sensor nodes in an SDN-based WSN are susceptible to movement and this can cause variation in packet transmission and execution of tasks making it necessary to monitor and manage the movement of nodes in the network. The challenges to consider when integrating a mobility management scheme includes handling the effect of nodes entering the network and the nodes leaving the network on QoS, execution of functions and other network attributes. A few solutions and processing steps that the SDN controller can provide to prevent problems associated with nodes entering and leaving the WSN have been outlined by Zhou et al. [87]. Considering IP support for nodes in SDN-based WSNs [79,82] research has been conducted on mobility management in IP based

Sensors 2017, 17, 1031

15 of 32

WSNs based on TinyOS implemented and tested on a 6LoWPAN [101]. A mechanism based on IEEE 802.15.4 [102] standard has been investigated and implemented to manage mobility in a distributed network architecture with promising implementation capacity in a real system [103]. There has been several contributions on mobility management in Wireless Cellular Networks (WCNs) based on SDN [104–107], whether or not these management mechanisms can be applied and integrated in SDN-based WSNs is a worthwhile research area.
5.2.3. Communication Management
Integrating SDN in the WSN topology enables management and operation of a network with sensors of different architectures and manufacturers with little or no challenge with compatibility issues. These nodes can be densely located with neighbouring sensor nodes appearing very close to each other and hence the need for an efﬁcient communication scheme to be deployed. The communication scheme should take into account energy consumption and signal quality however, the primary focus should be on conservation of energy to improve network lifetime. Multi-hop techniques based on short range radio communication such Meshlogic and ZigBee [46] have been proposed [108] for dense WSNs enabling consumption of less energy compared to direct communication. In SDN applications employing clustered hierarchical topologies, long range radio can be used for node to cluster head communication. This would allow for continuity in network operation even when a few nodes in a cluster fall out due to the direct communication between the cluster head (SDN local controller) and each node. The proposed radio technology to be implemented in such scenarios should also require less power such as the LoRa technology intended for Low Power Wide Area Networks (LPWAN) [109,110]. A hybrid of multi-hop techniques and long range radio can be used to manage a large low power WSN based on SDN where multi-hop communication is implemented between nodes in a cluster and long range radio is used between cluster heads and the global controller as shown in Figure 4.

Long Range Radio

Global Controller

Cluster Head

Multi-hop Links

Cluster Head

Sensor Node
Figure 4. Hybrid radio management.
5.2.4. Network Monitoring To improve manageability and ease of implementing a WSN based on SDN, network monitoring
is essential as it enables the display of all necessary sensor information such as details of the sensor node hardware, software, and battery level at the management station [111]. In SDN, network monitoring applications have been developed based on the Openﬂow capabability to provide a mechanism for collection of ﬂow level information and statistics. These applications through the controller

Sensors 2017, 17, 1031

16 of 32

are able to query nodes from time to time. The accuracy of the monitored information is dependent on the frequency of these queries. Techniques such as Payless [112] have been proposed to improve the efﬁciency of this query process on monitoring accuracy and network overhead. Other proposed network monitoring tools based on this concept for traditional software deﬁned IP networks include OpenSketch [113], OpenTM [114], FlowSense [115] and OpenNetMon [116]. There has been little effort in investigating these techniques or new techniques for monitoring SDN-based WSNs and is still an open research area. Recently however, work has been presented on a network measurement architecture based on SDN for monitoring of WSN information such as routing path per-packet, the loss ratio for each link and the delay resulting from each hop in a multi-hop conﬁguration. TinySDM [117] a software deﬁned measurement architecture built on the TinyOS [83] platform enables easy customisation and execution of various measurement metrics and allows for quick and efﬁcient implementation of measurement tasks.
5.2.5. SDN-Based Network and Topology Management Classiﬁcation for WSNs
Classiﬁcation criteria is an important factor to consider when integrating a management system into a network. Choice of the management system would depend on the management function, controller conﬁguration to which the architecture is suited and control trafﬁc channel used. Table 2 summarises and compares the architectures available in network and topology management of WSNs based on SDN against classiﬁcation criteria.

Table 2. SDN-based network and topology management architectures.

Management Architecture
Sensor OpenFlow
[20,21]
SDWN [60]
SDN-WISE [78]
Smart [14]
SDCSN [88]
TinySDN [69,118] Virtual Overlay [59,87,90]
Context-based [91,92]
CRLB [100]
multi-hop [108]
TinySDM [117]

Management Feature
SDN support protocol
Duty cycling, aggregation and routing
programming simplicity, aggregation
Efﬁciency in resource allocation
Network reliability and
QoS
in-band trafﬁc control
network ﬂexibility
network scalability and performance
node localization
trafﬁc and energy control
network task measurement

Controller Conﬁguration
Distributed and
Centralized Distributed
Distributed
Centralized
Distributed
Distributed
Distributed
Distributed
Centralized Distributed
and Centralized
-

Control Trafﬁc Channel in-band
and out-band in-band
in-band
in-band
in-band
in-band
in-band
in-band
in-band
in-band
in-band

Conﬁguration and
Monitoring

Scalability and
Localization

Communication Management

Sensors 2017, 17, 1031

17 of 32

5.3. Energy Management
Energy management focuses on the several techniques available to leverage SDN in ensuring that energy utilization is minimized in an already energy resource constrained WSN. Several proposals for adopting energy management in the SDN controller for the global balance of energy utilized in the WSN have been made. Integration SDN in WSNs allows for energy consuming tasks such as data trafﬁc routing decisions to be handled in the controller leaving the energy constrained sensor only with the task of forwarding data trafﬁc inherently reducing the amount of energy used. Part of the topology management of WSNs based on SDN is focused on using SDN for resource allocation control. To enhance resource allocation architectures and topologies likewise have been proposed such as the SDWN [60] and Smart [14] both executing controller functions on the sink node freeing remaining sensor nodes from functions like localization, QoS and mobility management resulting in energy efﬁcient operation. Similarly, a general framework for has been been proposed that places the controller at the base station with centre nodes in each cluster integrating switching and communication functions with the controller based on OpenFlow [119].
Management of energy has also been demonstrated by establishing control through software in a method referred to as duty cycling, focusing on reducing the amount of energy consumed by the sensor nodes through control of the sleep and wake up states. This technique has been proposed severally for managing WSNs [35,120,121] however SDN-based architectures rely on cross layer communication between the decoupled control and data planes which may require a robust link for the control trafﬁc ﬂow to be optimized in addition to the need for energy saving through data aggregation; using techniques that switch nodes on and off may result in unreliability in the communication links. Multi-tasking of WSNs has been proposed as an architecture based on SDN to minimize energy utilization in [122]. Multi-tasking is possible through the ability of the sensor node to carry out multiple tasks at the same time achieving different sensing outputs and to achieve a desired Quality of Sensing (QoSen) a task is carried out collectively by multiple nodes. Zeng et al. [122] present an architecture allowing for energy efﬁciency in sensor scheduling and management while producing the required QoSen. A Mixed Integer Linear Program (MILP) is formulated to take into account three objectives: sensor activation, task mapping and sensing scheduling. Further work is also done on developing an on-line algorithm to handle the dynamics associated with nodes entering the network (mobility) or leaving the network (mobility or node failure) with simulation results showing equal energy efﬁciency as a global optimized network with the advantage of having a lower rescheduling time and overhead control data.
Inherent in the SDN-based management is a high control trafﬁc overhead to maintain the global view of the logically centralized controller; a process that requires more energy for operation and thus affecting the energy efﬁciency of the network. Huang et al. [123] propose a prototype based on reinforcement learning to improve energy efﬁciency of SDN-based WSNs. The technique reduces overhead control trafﬁc by ﬁltering redundancy and performing a load-balancing routing mechanism in accordance to data ﬂow distribution with the required QoS. Experiments on the proposed SDN-based WSN prototype showed an improved energy efﬁciency performance.
Energy management techniques such as data aggregation and information fusion [124] coupled with multi-hop communication used in WSNs [125] can be extended and applied to within each cluster. Multi-hop links can take advantage of the densely located sensor nodes to transmit data at low power [108]. More recently, an efﬁcient energy harvesting management technique based on wireless power transfer for SDN-based WSNs has been proposed [126]. The mechanism uses dedicated wireless power transmitters to transmit energy to sensor nodes in the network thus increasing the network lifetime. A utility function is deﬁned to manage the energy distribution and the maximum energy required to charge the nodes to enable maximum optimization while meeting the minimum energy required by each sensor node. Ejaz et al. [126] also propose an accompanying energy efﬁcient scheduling system for the energy transmitters during each charge process. Table 3 compares the energy management schemes available for SDN-based WSNs .

Sensors 2017, 17, 1031

18 of 32

Table 3. SDN-based Energy management schemes for WSNs.

Scheme SDWN [60]

Features Duty cycling, data aggregation

Controller Architecture
Distributed

Smart [14]

Resource allocation

Multi-task [122]
SDWSN-RL [123]
Wireless power transfer [126]

Resource allocation, QoSen, scheduling Load balancing, trafﬁc control
Energy harvest, Optimization, efﬁciency

Centralized Centralized Distributed Centralized

Enabling Technology
Software, Hardware
Software and Hardware
Software
Software
Software, hardware

5.4. QoS Management
The Quality of Service management covers all aspects of ensuring an acceptable delivery of service in a network. This includes management of system tolerance and reliability, packet latency, event detection, robustness and maintenance. The SDN architecture allows for the QoS management tasks to take place in the controller by virtue of being logically centralized. The SDN-based WSN environment varies due to factors such as topology changes, node failure, bandwidth availability and energy ﬂuctuations therefore, there is need to integrate a mechanism for reliability of the network. Lu et al. [127] study the reliability of the WSN architecture based on SDN through the use of models based on continuous time Markov chain and continuous stochastic logic techniques. The results show that network reliability is affected by the number of controllers and sensors and their respective failure rates. From the results a proposal to integrate more than one reliable controller as a reliability management strategy is made.
Management of reliability has been classiﬁed into the reliability of communication systems and reliability of tasks [87]. Management of communication reliability can done through methods such as providing back up nodes and redundant links [87]. Function alternation has been proposed to manage reliability of sensor tasks by enabling neighbouring sensor nodes to take over damaged sensor node tasks automatically providing a self healing mechanism [65]. The SDN controller can also provide a back-up for sensing tasks and information to improve the reliability of tasks [87]. The back-up information can be used for re-tasking neighbouring sensor nodes to take up the task of damaged or unreliable nodes in SDN-based WSNs. The SDN OpenFlow concept has been demonstrated and exploited to address issues of performance reliability in WSNs [128]. The idea presented is based on the inherent characteristic of OpenFlow to control and monitor sensor trafﬁc enabling a reliable routing and load balancing mechanism. In ordinary WSNs the reliability of multi-hop and end to end communications is still an unsolved and difﬁcult issue to manage and hence Flow-sensor has been proposed to produce better reliability as compared to typical sensors by generating a lower amount of packets reducing the trafﬁc overhead in constrained networks [128]. Another QoS parameter is robustness which is a characteristic that deﬁnes a system’s ability to meet its expected performance [24] under unreliable environmental conditions. To manage system robustness it is necessary to consider factors affecting and interfering with the system and monitor the interference patterns in a proposed statistical machine learning technique [24]. This technique would allow for the prevention of possible interference based on previous behavioural patterns of interference. In managing latency TinySDN [69,118] has been proposed however, there is need for further research on managing latency and event detection.
5.5. Security Management
The architecture of WSNs based on SDN is such that a logically centralized controller poses a security risk as any compromise in the controller, cluster-head in clustered topologies or even the link to the controller can affect the system QoS. A malicious attacker can introduce false data and parameters

Sensors 2017, 17, 1031

19 of 32

in the network or a Denial of Service resulting in system unreliability. A few contributions have been made in managing security for SDN-based WSNs, Flauzac et al. [129] for example describe the need for security management in both wired and wireless networks based on SDN for Internet of Things (IoT) and propose a security model for IoT SDN architecture. An extension of the proposed architecture for IoT is made to include sensors integrating the aspect of guaranteeing the security of the network based on the grid of security concept embedded in each controller. The grid of security concept has been presented previously as an approach to securing networks by ensuring that communication takes place between trustworthy devices regardless of system policy control supported by a communication model to help structure the service distribution of security among nodes [130]. The overall concept is to decentralize the management of security of the network to ensure continuity in security during failure.
Another security management contribution has been the integration of Secure Multiparty Computation (SMC) to secure private sensory data in SDN-based WSNs [131]. The focus is the application of SMC in securely processing sensory data between the SDN-based WSN and the web server. Sun et al. [131] present a security model based on the SMC protocol allowing clients in the SDN-based WSN to connect and disconnect to the web server arbitrarily. A lottery SMC protocol is constructed for the performing selection in SDN-based WSNs with an encryption based on the layered homophobic function.
5.6. Management of Enabling Technologies
5.6.1. Enabling Software
A major part of WSNs based on SDN is software, which enables the management and control of sensor nodes and also forms the basis for sensor operations. The SDN-based architecture allows for the management and control of enabling software taking place at the application, control and data planes in a particular manner that enables application programmers to adjust the sensor functionalities by invoking different programs making the sensor node behave like a tiny computer. This also calls for the sensor nodes in the data plane to have an operating system however, a less complex one compared to personal computers because sensor nodes have limited processing power and memory [62]. There are several sensor operating systems that enable the integration of sensors into the architecture of an SDN-based WSN. Choice of operating system affects the memory management and protection of sensor nodes with memory management being classiﬁed into either static or dynamic memory management. Static memory management is ﬁxed and simple hence useful for constrained memory nodes but is not ﬂexible due to the unavailability of allocating memory at run-time. Dynamic memory management on the other hand is ﬂexible as it provides for allocation and de-allocation of memory at run-time [132]. SDN-based WSNs provide for multiple execution of functions thus the need for memory protection to prevent the mix up of process address spaces. TinyOS [83,133] written in nesC has been structured for low-power wireless sensors and embedded systems that have limited resources. TinyOS provides for static memory management with memory protection. The use of TinyOS in WSNs based on SDN has been demonstrated in [69,101,117]. Contiki [81,134] has been presented as a lightweight operating system with support for dynamic network loading and redeﬁnition of node programs. Feasibility of dynamic loading and ofﬂoading of programs in a resource constrained network is demonstrated [81] based on Contiki. Contiki supports dynamic memory management and memory block functions but does not provide a management mechanism for memory protection between function executions [132]. Other available operating systems include MultimodAl system for NeTworks of In situ wireless Sensors (MANTIS), Nano-RK and LiteOS [132] however there is little or no implementation of these operating systems in SDN-based management of WSNs but rather for ordinary WSNs. Table 4 compares the available sensor node operating systems for integration in SDN-based management of WSNs.

Sensors 2017, 17, 1031

20 of 32

Table 4. Enabling node operating systems for SDN-based management of WSNs: A comparison.

OS
TinyOS Contiki MANTIS Nano-RK LiteOS

Language
NesC C C C
Lite C++

Memory Management
Static Dynamic Dynamic
Static Dynamic

Implementation for
TinySDN [69,118], TinySDM [117], mobility [101] SDN-WISE [135] -

An important feature of SDN in WSNs is to provide a global view of sensor nodes allowing for efﬁcient program delivery when forwarding control data or updating node software for a new task. The architecture hence allows for this program delivery through Over The Air Programming (OTAP) Techniques which contribute to the efﬁcient management of enabling software. Use of OTAP in downloading of roles to nodes via a multi-hop wireless link in a reconﬁgurable SDWSN has been demonstrated in [136]. Efﬁciency in OTAP has been further demonstrated by the use of SDN-WISE, an SDN solution for WSNs. A hands-on demonstration has been done using SDN-WISE to reprogramme WSNs allowing for various logical sensor networks to exist together while using the same node hardware [137].
5.6.2. Enabling Hardware
Enabling hardware forms part of the infrastructure of WSNs based on SDN and an important component for managing and enabling the SDN integration into WSNs is the SDN-enabled sensor node. The design and management of the nodes needs to meet the requirements of SDN and a major part of the design is that the node should be reconﬁgurable even after deployment via wireless communications. Examples of reconﬁgurable nodes presented for WSNs include a sensor node based on modularity [138] using the Field Programmable Gate Array (FPGA) as the node control unit [139] due to the re-conﬁgurable property of FPGA hardware unlike micro-controllers. This enables the remote reconﬁguration of sensor hardware over wireless networks which is essential for SDN-based management of WSNs. To reduce the energy consumption of FPGAs, state of the art designs have been developed to operate in ultra low power modes [62]. Another implementation of sensor re-conﬁgurability is a node design with a soft core processor and the capacity to be reconﬁgured remotely via OTAP techniques post deployment based on the FPGA as the control unit [140]. The systems proposed in [139,140] use a micro-controller to re-conﬁgure the FPGA as a minimisation technique for power consumption.
Further efforts in proposing implementations of reconﬁgurable nodes (SDN-enabled nodes) in SDN-based WSNs have been made in recent years. TinySDN [69,118] uses an SDN-enabled node structured into three parts namely the TinySdnP which performs a ﬂow table update upon receiving a ﬂow setup resonse, TinyOS application which creates data packets and places them on the network and ActiveMessageC which is a component of TinyOS managing and providing a programming interface with radio hardware on the sensor. Miyazaki et al. [136] propose a SDWSN based on role generation and delivery to and from a reconﬁgurable node. The node makes use of a modular combination of FPGA and micro-controller for an energy efﬁcient node that can be reprogrammed via OTAP to perform various roles. The micro-controller is used to alter the network behaviour while the FPGA handles heavier data processing tasks. Other enabling hardware such as computer servers for role or task generation and communication modules for the multi-hop wireless link have been presented for implementation in SDN-based management for WSNs [65,136].
6. Discussion
In this review, several contributions to management of WSNs based on SDN have been made. It can generally be concluded that the overall SDN-based management of WSNs be looked at as being developed around the north bound, east-west bound and south bound abstractions of the SDN

Sensors 2017, 17, 1031

21 of 32

architecture. These are classiﬁed based on the location of the management control referred to as the manager. Figure 5 below illustrates this management view.
North Bound Management Network Monitoring Management Stations Monitoring Tools
Monitoring Applications

East - West Bound Management Network Management Topology Management Energy Management QoS Management Security Management

South Bound Management SDN-enabled hardware and software management
Sensor OpenFlow Management
Figure 5. SDN-based management abstractions for WSNs.
East-West bound management can further be looked at as central management, several proposals have been made towards improving management of control plane functions. Core to the function of SDN-based management of WSNs is the network conﬁguration and topology management. Managing how the network operates efﬁciently and how nodes in the data plane communicate with the controller nodes and peripherals is the goal of developing a network conﬁguration and topology management architecture. Soft-WSN an architecture based on East-West management has been proposed and tested by Bera et al. [9]. Soft-WSN is a software deﬁned WSN management system for IoT providing an application-aware service consisting of an application, control and data layers. The architecture is based on centralized device (enabling hardware) and network conﬁguration policies provisioned on the controller design. Experimental results on Soft-WSN show an enhanced energy efﬁciency, trafﬁc overhead and data delivery ratio in a network [9].
To ensure SDN integration in WSNs, proposals such as Sensor OpenFlow, SDWN and SDN-WISE techniques which provide solutions to designing and managing WSNs based on SDN in terms of ﬂow setup, in-network data processing and trafﬁc management and general management of ﬂow rules have been made. In managing the topology Smart, SDCSN and TinySDN provide an efﬁcient high-level architecture resulting in efﬁcient resource allocation. However, Smart does not provide for distributed controllers compared to SDCSN and TinySDN posing a greater risk in system security and reliability once the base station controller in Smart comes under attack. The network virtualisation demonstrated in the virtual overlay topology introduces greater ﬂexibility in managing and monitoring networks. In managing localization of nodes, localization algorithms have been proposed to improve the accuracy of locating nodes. Zhu et al. [100] for example present a localization algorithm that does not only improve the performance of the localization but also conserve energy which is a vital component when designing and managing WSNs based on SDN. In tandem with management of node localization is mobility management which takes into account the movement of nodes into and out of the network. An attempt at managing mobility has been made by Zhou et al. [87] outlining the steps for handling node mobility in and out of a SDWSN however, there is room for research in SDN-based management of node mobility.

Sensors 2017, 17, 1031

22 of 32

In terms on communication management, the importance of using multi-hop techniques in an energy constrained network has been emphasised. As data is carried and passed on from node to node, less energy is required and it also allows for data aggregation which reduces redundancy in the network. The challenge with this for enabling SDN-based management is the requirement for communication between the global controller and the nodes on the network as it may happen that a link may break once any of the nodes acting as repeaters falls out of the network. A more reliable communication scheme would integrate long range radio between each of the nodes and the controller although it may be argued that such a system would be less energy efﬁcient. One solution would be investigating the possibility of using low power long range radio schemes such as LoRa [109]. In addition, to reduce rigidity in choice of design or communication scheme due to energy constraints for WSNs based on SDN, there is need for integration of energy harvesting mechanisms in the network. Methods to reduce the overhead on control data such as the proposed reinforcement learning technique [123] or a promising energy harvest method that uses wireless power transfer from a transmitting generator to the nodes in the ﬁeld [126] can be further developed and investigated to reduce the energy bottleneck that exists in WSNs. In SDN-based energy management of WSNs, implementing a mix of proposed schemes to reduce and monitor energy consumed in the network such as duty cycling, data aggregation, smart [14] and multi-task methods [122] with energy harvesting techniques would result in higher energy efﬁciency of the network. It is also worthwhile to mention here that sensor node design is also focused on minimizing the energy consumed by use of low power devices in the electronic design while meeting the required QoS. In Table 5 various SDN-based management schemes and techniques for WSNs discussed in this paper are evaluated against the design criteria required for improved management.

Table 5. SDWSN management scheme evaluation against design criteria.

Management Scheme
Sensor OpenFlow [20,21] SDWN [60] Smart [14]
SDN-WISE [78] SDCSN [88]
TinySDN [69,118] Virtual Overlay [59,87,90]
Multi-task [122] SDWSN-RL [123] Wireless power transfer [126] Function alternation [65] Statistical machine learning [24] Context-based [91,92]
Soft-WSN [9]

Energy Efﬁciency
Yes Yes Yes Yes Yes
Yes Yes Yes Yes
Yes

Robustness
Yes Yes No Yes Yes Yes Yes
Yes Yes Yes Yes Yes Yes

Scalability
Yes -
No Yes Yes Yes Yes
Yes Yes Yes
Yes
-

Adaptability
Yes Yes Yes Yes Yes Yes Yes Yes Yes
Yes
Yes Yes

7. Open Challenges
Generally, there is signiﬁcant and on going contributions in investigating SDN-based management of networks, topologies, energy, QoS and enabling technologies for WSNs. However, a number of open challenges still exist:
7.1. East West Bound Management
With increase in sensor nodes to hundreds or thousands, use of a single controller becomes inefﬁcient in terms of maintaining a global network view and data collection therefore proposals have been made towards using multiple controllers to solve this issue [28]. SDN-based management of communication protocols between distributed controllers in the control plane while maintaining a logically centralized and global view of the entire wireless sensor network remains an open challenge. This includes development of East-West bound APIs for efﬁcient control of data ﬂow in the data plane.

Sensors 2017, 17, 1031

23 of 32

7.2. Network and Topology Management
Most resource management techniques available such as Smart and SDWN have the problem of not addressing overhead in control trafﬁc which is costly for resource constrained WSNs. Therefore, further investigation on how to reduce in-band control trafﬁc between the control and data planes is required. Efﬁcient techniques for in-band communication of control and data trafﬁc can be proposed and implemented.
Context based clustering can be studied further using other techniques other than HyperFlow to efﬁciently implement the logical controller concept while making use of its improved performance metrics such as improved scalability and reduced latency. Aspects of network decomposition hierarchies can be looked into to minimize control trafﬁc and improve energy efﬁciency. Further investigation is also required to determine the number of controllers needed and their placement given an SDN-based WSN topology similar to the analysis done in [141] for WANs.
SDN-based network monitoring for WSNs is an essential part of network management that still remains largely unexplored. There is need for more quick and efﬁcient network monitoring techniques for WSNs based on SDN. Node localisation is another issue that has the potential to be improved by SDN, conventional WSNs may require nodes to determine their geographical location based on information from other nodes [5] thus expending more energy. This task can be moved to the controller by virtue of its global position reducing the energy consumption on the nodes. In addition, novel localization techniques can be developed harnessing the potential of SDN.
7.3. Security Management
The existence of a logically centralized controller and cluster heads in the SDN-based architecture for WSNs calls for efﬁcient management of security. This includes investigation and development of support for securing the controller in both distributed and centralized architectures in addition to counter measures whenever a cluster head or controller is attacked. There is also an open challenge in development of SDN-based key management systems and other encryption techniques for WSNs.
7.4. QoS and Mobility Management
Performance metrics such as latency, reachability and mobility remain open areas of research in SDN-based management of WSN QoS. There is need for more investigations in the controller placement problems to improve these performance metrics. Wang et al. [142] for example, have proposed a K-means algorithm to optimize controller placement thus minimizing network latency. Statistical analysis and artiﬁcial intelligence to predict fault occurrence in the network are also being investigated [24] for management of a robust SDN-based WSN. Investigation on the feasibility of mobility management techniques implemented in cellular networks being used in node mobility management of WSNs based on SDN is also a worthwhile area of research. Back up techniques upon node failure such as function alternation [65] can be investigated further based on leveraging SDN to enable efﬁcient and simpler function alternation. To ensure QoS control and monitoring in the benchmarks and Key Performance Indicators(KPIs) need to integrated in the management framework developed.
7.5. Energy Management
Energy is a scarce resource in WSNs and constant research in this area is necessary to ensure efﬁcient energy use in WSNs. A common technique to minimize the energy use is by control of sleep and wake states of sensor nodes however SDN-based management of WSNs requires a robust link between the control and data planes for effective management and thus should be investigated further to reduce unreliability in communication between the planes as a result. A paradigm shift is required to move away from data aggregation and further develop efﬁcient long range low power radio techniques such as LoRa. Low power single hop communication techniques like this can also save

Sensors 2017, 17, 1031

24 of 32

energy by shifting in-network processing to the controller leaving the energy deprived sensor nodes with the task of only forwarding data to the controller and going back to sleep. Other improvements of energy efﬁciency based on reduction of overhead control trafﬁc and redundancy in routing tasks are also a promising area of research. While new methods of extending network lifetime through wireless power transfer [126] have been proposed, the feasibility of implementing such a technique in a large-scale WSN based on SDN has to be addressed in terms of the scalability-cost ratio.
7.6. Enabling Technologies
Advances in microelectronic design and manufacture has allowed for miniaturisation of node hardware and at a lower production cost a factor which is useful in large-scale applications and allows for placement of redundant nodes in a network. However, there is need for continuous research in developing increased energy efﬁciency while keeping these nodes small and at a reduced cost. The energy harvest mechanisms is one such area of development, there is room for developing batteries that support quick and efﬁcient charging at lower currents. A characteristic like this would be useful in harvesting solar energy for example. Integration of these nodes into the SDN architecture will also require further development of software and hardware to enable the SDN functionality and also provide support for multiple retasking, inter-plane data exchange via APIs and communication protocols (Flow-Sensor [128], FlowVisor [143], HyperFlow [93]. etc.). There is also need to develop some form of modularity in both software and hardware to allow for use in multiple applications and enable easy system maintenance. In terms of choice of using FPGA, micro-controller or a hybrid of both in SDN sensor node design, it can be argued that it vastly depends on energy efﬁciency, cost and nature of application. There are still possibilities of integrating low power FPGAs however the cost impact for application in large-scale networks also needs to be accounted for. Generally, novel hardware and software needs to be developed to improve support for the measurement, analysis and decision making process for IoT applications such as smart water grids while allowing compatibility with the integrated management framework.
7.7. WSN Management Framework
In the future, a development trend of more than just concepts and ideas of proposed management techniques is required; more work is needed for proof of concept and actual deployments to allow for a deeper understanding of the necessary architectures and tools for SDN-based management of WSNs. There have been attempts for actual deployment of proposed management mechanisms such as the case of SDN-WISE, the attempt by Miyazaki et al. [136] to build a reprogrammable WSN based on SDN and more recently Soft-WSN but there is still room for many such implementations. Areas such as distributed management based on distributed controllers, low power and long range SDN-based management of WSNs need investigation. As regards to network management, there is need for development of a WSN management framework leveraging SDN to ensure sensors/actuators are operating correctly and the heterogeneous SDN-based WSN is properly conﬁgured and managed. The management framework can be broken down to manage various aspects of the WSN and it should also be dynamic enough to be used for various applications. Just like MANNA and BOSS network management systems were presented for ordinary WSNs exploring how SDN can improve the performance of these NMSs would prove useful.
8. Conclusions
This paper reviewed the various contributions to managing WSNs and techniques available for SDN-based management of WSNs. The SDN paradigm has introduced ﬂexibility and simplicity in managing wireless sensor networks, despite having different vendor speciﬁc hardware in the network. A highlight of the main real-world WSN applications and how SDN would improve the management of the applications was presented. However, the inherent properties of WSNs do not permit the easy integration of SDN as it was initially meant for traditional wired/wireless

Sensors 2017, 17, 1031

25 of 32

address-centric networks which are different from the data-centric WSNs. This paper also focused on the generic architecture of SDN-based WSNs and reviewed the management schemes available to ensure efﬁcient functionality of the network. A review of the management classiﬁcations, namely management of the network conﬁguration, topology, QoS, energy, security, network monitoring and enabling technologies with a further focus on SDN-enabled node hardware and software, was made. Furthermore, an attempt to deﬁne the overall management of WSNs based on SDN as abstractions of the north, south, east-west bound architecture of SDN had been presented. A discussion and summary was presented for the various proposals and work done necessary for management of WSNs based on SDN. However, there still exists a mix of open challenges available for effective SDN-based management of WSNs and they have been discussed in this paper with an emphasis on the need for actual implementations and test beds for effective evaluation of proposals and concepts. For a future leading to improved management of WSNs based on the Software Deﬁned Networking paradigm; novel sdn-enabled sensor hardware, development of efﬁcient SDN techniques for WSN implementation, novel contributions to SDN-based power management and improved performance assessment of SDN-based management architectures for WSNs are expected.
Author Contributions: All the authors have equally contributed to this article.
Conﬂicts of Interest: The authors declare no conﬂict of interest.
References
1. Dludla, A.G.; Abu-Mahfouz, A.M.; Kruger, C.P.; Isaac, J.S. Wireless sensor networks testbed: ASNTbed. In Proceedings of the 2013 IEEE IST-Africa Conference and Exhibition (IST-Africa), Nairobi, Kenya, 29–31 May 2013; pp. 1–10.
2. Abu-Mahfouz, A.M.; Steyn, L.P.; Isaac, S.J.; Hancke, G.P. Multi-Level Infrastructure of Interconnected Testbeds of Large-Scale Wireless Sensor Networks (MI2T-WSN). In Proceedings of the International Conference on Wireless Networks (ICWN), Athens, Greece, 1–7 January 2012; p. 1.
3. Potter, C.H.; Hancke, G.P.; Silva, B.J. Machine-to-Machine: Possible applications in industrial networks. In Proceedings of the 2013 IEEE International Conference on Industrial Technology (ICIT), Cape Town, South Africa, 25–28 February 2013; pp. 1321–1326.
4. Opperman, C.A.; Hancke, G.P. Using NFC-enabled phones for remote data acquisition and digital control. In Proceedings of the 2011 AFRICON, Livingstone, Zambia, 13–15 September 2011; pp. 1–6.
5. Karl, H.; Willig, A. Protocols and Architectures for Wireless Sensor Networks; John Wiley & Sons: Chichester, UK, 2007.
6. Kruger, C.P.; Abu-Mahfouz, A.M.; Isaac, S.J. Modulo: A modular sensor network node optimised for research and product development. In Proceedings of the 2013 IEEE IST-Africa Conference and Exhibition (IST-Africa), Nairobi, Kenya, 29–31 May 2013; pp. 1–9.
7. Wu, F.; Rüdiger, C.; Yuce, M.R. Real-Time Performance of a Self-Powered Environmental IoT Sensor Network System. Sensors 2017, 17, 282.
8. Capella, J.V.; Campelo, J.C.; Bonastre, A.; Ors, R. A Reference Model for Monitoring IoT WSN-Based Applications. Sensors 2016, 16, 1816.
9. Bera, S.; Misra, S.; Roy, S.K.; Obaidat, M.S. Soft-WSN: Software-Deﬁned WSN Management System for IoT Applications. IEEE Syst. J. 2016, PP, 1–8.
10. Jayaraman, P.P.; Yavari, A.; Georgakopoulos, D.; Morshed, A.; Zaslavsky, A. Internet of Things Platform for Smart Farming: Experiences and Lessons Learnt. Sensors 2016, 16, 1884.
11. Abu-Mahfouz, A.M.; Hamam, Y.; Page, P.R.; Djouani, K.; Kurien, A. Real-time dynamic hydraulic model for potable water loss reduction. Procedia Eng. 2016, 154, 99–106.
12. Abu-Mahfouz, A.M.; Olwal, T.; Kurien, A.; Munda, J.; Djouani, K. Toward developing a distributed autonomous energy management system (DAEMS). In Proceedings of the 2015 IEEE AFRICON, Addis Ababa, Ethiopia, 14–17 September 2015; pp. 1–6.
13. Mudumbe, M.J.; Abu-Mahfouz, A.M. Smart water meter system for user-centric consumption measurement. In Proceedings of the 2015 IEEE 13th International Conference on Industrial Informatics (INDIN), Cambridge, UK, 22–24 July 2015; pp. 993–998.

Sensors 2017, 17, 1031

26 of 32

14. Gante, A.D.; Aslan, M.; Matrawy, A. Smart wireless sensor network management based on software-deﬁned networking. In Proceedings of the 2014 27th Biennial Symposium on Communications (QBSC), Kingston, ON, Canada, 1–4 June 2014; pp. 71–75.
15. Kruger, C.P.; Abu-Mahfouz, A.M.; Hancke, G.P. Rapid prototyping of a wireless sensor network gateway for the internet of things using off-the-shelf components. In Proceedings of the 2015 IEEE International Conference on Industrial Technology (ICIT), Seville, Spain, 17–19 March 2015; pp. 1926–1931.
16. Silva, B.; Fisher, R.M.; Kumar, A.; Hancke, G.P. Experimental Link Quality Characterization of Wireless Sensor Networks for Underground Monitoring. IEEE Trans. Ind. Inform. 2015, 11, 1099–1110.
17. Phala, K.S.E.; Kumar, A.; Hancke, G.P. Air Quality Monitoring System Based on ISO/IEC/IEEE 21451 Standards. IEEE Sens. J. 2016, 16, 5037–5045.
18. Cheng, B.; Cui, L.; Jia, W.; Zhao, W.; Hancke, G.P. Multiple Region of Interest Coverage in Camera Sensor Networks for Tele-Intensive Care Units. IEEE Trans. Ind. Inform. 2016, 12, 2331–2341.
19. Kumar, A.; Hancke, G.P. A Zigbee-Based Animal Health Monitoring System. IEEE Sens. J. 2015, 15, 610–617. 20. Hu, F.; Hao, Q.; Bao, K. A Survey on Software-Deﬁned Network and OpenFlow: From Concept to
Implementation. IEEE Commun. Surv. Tutor. 2014, 16, 2181–2206. 21. Luo, T.; Tan, H.P.; Quek, T.Q.S. Sensor OpenFlow: Enabling Software-Deﬁned Wireless Sensor Networks.
IEEE Commun. Lett. 2012, 16, 1896–1899. 22. Jararweh, Y.; Al-Ayyoub, M.; Darabseh, A.; Benkhelifa, E.; Vouk, M.; Rindos, A. Software deﬁned cloud:
Survey, system and evaluation. Futur. Gener. Comput. Syst. 2016, 58, 56–74. 23. Gao, S.; Zeng, Y.; Luo, H.; Zhang, H. Scalable control plane for intra-domain communication in software
deﬁned information centric networking. Futur. Gener. Comput. Syst. 2016, 56, 110 – 120. 24. Orfanidis, C. Ph.D. Forum Abstract: Increasing Robustness in WSN Using Software Deﬁned Network
Architecture. In Proceedings of the 2016 15th ACM/IEEE International Conference on Information Processing in Sensor Networks (IPSN), Vienna, Austria, 11–14 April 2016; pp. 1–2. 25. Ruiz, L.B.; Nogueira, J.M.; Loureiro, A.A. Manna: A management architecture for wireless sensor networks. IEEE Commun. Mag. 2003, 41, 116–125. 26. Reegan, A.S.; Baburaj, E. Key management schemes in Wireless Sensor Networks: A survey. In Proceedings of the 2013 International Conference on Circuits, Power and Computing Technologies (ICCPCT), Nagercoil, India, 20–21 March 2013; pp. 813–820. 27. Kim, H.; Feamster, N. Improving network management with software deﬁned networking. IEEE Commun. Mag. 2013, 51, 114–119. 28. Haque, I.T.; Abu-Ghazaleh, N. Wireless Software Deﬁned Networking: A Survey and Taxonomy. IEEE Commun. Surv. Tutor. 2016, 18, 2731–2737. 29. Kobo, H.I.; Abu-Mahfouz, A.M.; Hancke, G.P. A Survey on Software-Deﬁned Wireless Sensor Networks: Challenges and Design Requirements. IEEE Access 2017, 5, 1872–1899. 30. Zhang, B.; Li, G. Survey of Network Management Protocols in Wireless Sensor Network. In Proceedings of the 2009 International Conference on E-Business and Information System Security, Wuhan, China, 23–24 May 2009; pp. 1–5. 31. Lee, W.L.; Datta, A.; Cardell-Oliver, R. Network management in wireless sensor networks. In Handbook of Mobile Ad Hoc and Pervasive Communications; American Scientiﬁc Publishers: Valencia, CA, USA, 2006. 32. Song, H.; Kim, D.; Lee, K.; Sung, J. UPnP-based sensor network management architecture. In Proceedings of the International Conference on Mobile Computing and Ubiquitous Networking, Osaka, Japan, 13–15 April 2005. 33. Ma, Y.W.; Chen, J.L.; Huang, Y.M.; Lee, M.Y. An Efﬁcient Management System for Wireless Sensor Networks. Sensors 2010, 10, 11400–11413. 34. Zhao, Y.; Anjum, M.N.; Song, M.; Xu, X.; Wang, G. Optimal Resource Allocation for Delay Constrained Users in Self-Coexistence WRAN. In Proceedings of the 2015 IEEE Global Communications Conference (GLOBECOM), San Diego, CA, USA, 6–10 December 2015; pp. 1–6. 35. Lopez, M.; Sabater, J.M.; Daemitabalvandani, M.; Gomez, J.M.; Carmona, M.; Herms, A. Software management of power consumption in WSN based on duty cycle algorithms. In Proceedings of the 2013 IEEE EUROCON, Zagreb, Croatia, 1–4 July 2013; pp. 399–406. 36. Culler, D.E.; Mulder, H. Smart sensors to network the world. Sci. Am. 2004, 290, 84–91.

Sensors 2017, 17, 1031

27 of 32

37. Wang, X.; Ma, J.J.; Wang, S.; Bi, D.W. Prediction-based dynamic energy management in wireless sensor networks. Sensors 2007, 7, 251–266.
38. Hsu, T.H.; Wu, J.S. An application-speciﬁc duty cycle adjustment MAC protocol for energy conserving over wireless sensor networks. Comput. Commun. 2008, 31, 4081–4088.
39. Donmez, M.Y.; Isik, S.; Ersoy, C. Combined analysis of contention window size and duty cycle for throughput and energy optimization in wireless sensor networks. Comput. Netw. 2013, 57, 1101–1112.
40. Schurgers, C.; Tsiatsis, V.; Srivastava, M.B. STEM: Topology management for energy efﬁcient sensor networks. In Proceedings of the 2002 IEEE Aerospace Conference, Big Sky, MT, USA, 9–16 March 2002; Volume 3, pp. 1099–1108.
41. Chen, B.; Jamieson, K.; Balakrishnan, H.; Morris, R. Span: An energy-efﬁcient coordination algorithm for topology maintenance in ad hoc wireless networks. Wirel. Netw. 2002, 8, 481–494.
42. Cardei, M.; Wu, J. Energy-efﬁcient coverage problems in wireless ad-hoc sensor networks. Comput. Commun. 2006, 29, 413–420.
43. Khan, J.A.; Qureshi, H.K.; Iqbal, A. Energy management in wireless sensor networks: A survey. Comput. Electr. Eng. 2015, 41, 159–176.
44. Srbinovski, B.; Magno, M.; Edwards-Murphy, F.; Pakrashi, V.; Popovici, E. An Energy Aware Adaptive Sampling Algorithm for Energy Harvesting WSN with Energy Hungry Sensors. Sensors 2016, 16, 448.
45. Louw, J.; Niezen, G.; Ramotsoela, T.; Abu-Mahfouz, A. A key distribution scheme using elliptic curve cryptography in wireless sensor networks. In Proceedings of the 2016 IEEE 14th International Conference on Industrial Informatics (INDIN), Poitiers, France, 19–21 July 2016; pp. 1166–1170.
46. Akyildiz, I.F.; Su, W.; Sankarasubramaniam, Y.; Cayirci, E. Wireless sensor networks: A survey. Comput. Netw. 2002, 38, 393–422.
47. Ntuli, N.; Abu-Mahfouz, A. A Simple Security Architecture for Smart Water Management System. Procedia Comput. Sci. 2016, 83, 1164–1169.
48. Yu, Z.; Guan, Y. A key management scheme using deployment knowledge for wireless sensor networks. IEEE Trans. Parallel Distrib. Syst. 2008, 19, 1411–1425.
49. Zhang, Y.; Liang, J.; Zheng, B.; Jiang, S.; Chen, W. Key Management Scheme Based on Route Planning of Mobile Sink in Wireless Sensor Networks. Sensors 2016, 16, 170.
50. Zhang, Y.; Liang, J.; Zheng, B.; Chen, W. A Hybrid Key Management Scheme for WSNs Based on PPBR and a Tree-Based Path Key Establishment Method. Sensors 2016, 16, 509.
51. Dayal, P.; Kumar, P. Fault mitigation by topology management in WSN: A survey. In Proceedings of the 2015 International Conference on Communications and Signal Processing (ICCSP), Melmaruvathur, India, 2–4 April 2015; pp. 0836–0840.
52. Turon, M. Mote-view: A sensor network monitoring and management tool. In Proceedings of the Second IEEE Workshop on Embedded Networked Sensors (EmNetS-II 2005), Sydney, Queensland, Australia, 31 May 2005; pp. 11–17.
53. Yang, Y.; Xia, P.; Huang, L.; Zhou, Q.; Xu, Y.; Li, X. SNAMP: A Multi-sniffer and Multi-view Visualization Platform for Wireless Sensor Networks. In Proceedings of the 2006 1st IEEE Conference on Industrial Electronics and Applications, Singapore, 24–26 May 2006; pp. 1–4.
54. Buschmann, C.; Pﬁsterer, D.; Fischer, S.; Fekete, S.P.; Kröller, A. Spyglass: A wireless sensor network visualizer. ACM SIGBED Rev. 2005, 2, 1–6.
55. Levis, P.; Lee, N.; Welsh, M.; Culler, D. TOSSIM: Accurate and scalable simulation of entire TinyOS applications. In Proceedings of the ACM 1st International Conference on Embedded Networked Sensor Systems, Los Angeles, CA, USA, 5–7 November 2003; pp. 126–137.
56. Yu, M.; Song, J.; Kim, J.; Shin, K.Y.; Mah, P.S. NanoMon: A Flexible Sensor Network Monitoring Software. In Proceedings of the 9th International Conference on Advanced Communication Technology, Okamoto, Kobe, Japan, 12–14 February 2007; Volume 2, pp. 1423–1426.
57. Garcia, F.P.; Andrade, R.; Oliveira, C.T.; de Souza, J.N. EPMOSt: An energy-efﬁcient passive monitoring system for wireless sensor networks. Sensors 2014, 14, 10804–10828.
58. Nguyen, X.N.; Saucez, D.; Barakat, C.; Turletti, T. Rules Placement Problem in OpenFlow Networks: A Survey. IEEE Commun. Surv. Tutor. 2016, 18, 1273–1286.
59. Jain, R.; Paul, S. Network virtualization and software deﬁned networking for cloud computing: A survey. IEEE Commun. Mag. 2013, 51, 24–31.

Sensors 2017, 17, 1031

28 of 32

60. Costanzo, S.; Galluccio, L.; Morabito, G.; Palazzo, S. Software Deﬁned Wireless Networks: Unbridling SDNs. In Proceedings of the 2012 European Workshop on Software Deﬁned Networking, Darmstadt, Germany, 25–26 October 2012; pp. 1–6.
61. Kim, H.; Benson, T.; Akella, A.; Feamster, N. The evolution of network conﬁguration: A tale of two campuses. In Proceedings of the 2011 ACM SIGCOMM Conference on Internet Measurement Conference, Berlin, Germany, 2–4 November 2011; pp. 499–514.
62. Zeng, D.; Miyazaki, T.; Guo, S.; Tsukahara, T.; Kitamichi, J.; Hayashi, T. Evolution of Software-Deﬁned Sensor Networks. In Proceedings of the 2013 IEEE Ninth International Conference on Mobile Ad-hoc and Sensor Networks (MSN), Dalian, China, 11–13 December 2013; pp. 410–413.
63. McKeown, N.; Anderson, T.; Balakrishnan, H.; Parulkar, G.; Peterson, L.; Rexford, J.; Shenker, S.; Turner, J. OpenFlow: Enabling Innovation in Campus Networks. SIGCOMM Comput. Commun. Rev. 2008, 38, 69–74.
64. Huang, H.; Zhu, J.; Zhang, L. An SDN based management framework for IoT devices. In Proceedings of the 25th IET Irish Signals Systems Conference 2014 and 2014 China-Ireland International Conference on Information and Communications Technologies (ISSC 2014/CIICT 2014), Limerick, Ireland, 26–27 June 2014; pp. 175–179.
65. Miyazaki, T.; Shitara, D.; Kawano, R.; Endo, Y.; Tanno, Y.; Igari, H. Robust Wireless Sensor Network Featuring Automatic Function Alternation. In Proceedings of the 2011 20th International Conference onComputer Communications and Networks (ICCCN), Maui, HI, USA, 31 July–4 August 2011; pp. 1–6.
66. Li, J.; Chang, X.; Ren, Y.; Zhang, Z.; Wang, G. An effective path load balancing mechanism based on SDN. In Proceedings of the 2014 IEEE 13th International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom), Beijing, China, 24–26 September 2014; pp. 527–533.
67. Darwish, A.; Hassanien, A.E. Wearable and implantable wireless sensor network solutions for healthcare monitoring. Sensors 2011, 11, 5561–5595.
68. Chang, X.; Li, J.; Wang, G.; Zhang, Z.; Li, L.; Niu, Y. Software deﬁned backpressure mechanism for edge router. In Proceedings of the 2015 IEEE 23rd International Symposium on Quality of Service (IWQoS), Portland, OR, USA, 15–16 June 2015; pp. 171–176.
69. De Oliveira, B.T.; Margi, C.B.; Gabriel, L.B. TinySDN: Enabling multiple controllers for software-deﬁned wireless sensor networks. IEEE Lat. Am. Trans. 2015, 13, 3690–3696.
70. Fraga-Lamas, P.; Fernández-Caramés, T.M.; Suárez-Albela, M.; Castedo, L.; González-López, M. A review on internet of things for defense and public safety. Sensors 2016, 16, 1644.
71. Soetens, N.; Famaey, J.; Verstappen, M.; Latré, S. SDN-based management of heterogeneous home networks. In Proceedings of the 2015 11th International Conference on Network and Service Management (CNSM), Barcelona, Spain, 9–13 November 2015; pp. 402–405.
72. Xu, K.; Wang, X.; Wei, W.; Song, H.; Mao, B. Toward software deﬁned smart home. IEEE Commun. Mag. 2016, 54, 116–122.
73. Kumar, H.; Gharakheili, H.H.; Sivaraman, V. User control of quality of experience in home networks using SDN. In Proceedings of the 2013 IEEE International Conference on Advanced Networks and Telecommunications Systems (ANTS), Kattankulathur, India, 15–18 December 2013; pp. 1–6.
74. Yiakoumis, Y.; Yap, K.K.; Katti, S.; Parulkar, G.; McKeown, N. Slicing Home Networks. In Proceedings of the 2nd ACM SIGCOMM Workshop on Home Networks (HomeNets ’11), Toronto, ON, Canada, 15 August 2011; ACM: New York, NY, USA, 2011; pp. 1–6.
75. Abuteir, R.M.; Fladenmuller, A.; Fourmaux, O. SDN Based Architecture to Improve Video Streaming in Home Networks. In Proceedings of the 2016 IEEE 30th International Conference on Advanced Information Networking and Applications (AINA), Crans-Montana, Switzerland, 23–25 March 2016; pp. 220–226.
76. Gallo, P.; Kosek-Szott, K.; Szott, S.; Tinnirello, I. SDN@home: A method for controlling future wireless home networks. IEEE Commun. Mag. 2016, 54, 123–131.
77. Akpakwu, G.A.; Hancke, G.P.; Abu-Mahfouz, A.M. Packets distribution in a tree-based topology Wireless Sensor Networks. In Proceedings of the 2016 IEEE 14th International Conference on Industrial Informatics (INDIN), Poitiers, France, 19–21 July 2016; pp. 1181–1184.
78. Galluccio, L.; Milardo, S.; Morabito, G.; Palazzo, S. SDN-WISE: Design, prototyping and experimentation of a stateful SDN solution for WIreless SEnsor networks. In Proceedings of the 2015 IEEE Conference on Computer Communications (INFOCOM), Kowloon, Hong Kong, 26 April–1 May 2015; pp. 513–521.

Sensors 2017, 17, 1031

29 of 32

79. Dunkels, A. Full TCP/IP for 8-bit Architectures. In Proceedings of the 1st International Conference on Mobile Systems, Applications and Services (MobiSys ’03), San Francisco, CA, USA, 5–8 May 2003; ACM: New York, NY, USA, 2003; pp. 85–98.
80. Durvy, M.; Abeillé, J.; Wetterwald, P.; O’Flynn, C.; Leverett, B.; Gnoske, E.; Vidales, M.; Mulligan, G.; Tsiftes, N.; Finne, N.; Dunkels, A. Making Sensor Networks IPv6 Ready. In Proceedings of the 6th ACM Conference on Embedded Network Sensor Systems (SenSys ’08), Raleigh, NC, USA, 5–7 November 2008; ACM: New York, NY, USA, 2008; pp. 421–422.
81. Dunkels, A.; Gronvall, B.; Voigt, T. Contiki—A lightweight and ﬂexible operating system for tiny networked sensors. In Proceedings of the 29th Annual IEEE International Conference on Local Computer Networks, Tampa, FL, USA, 16–18 November 2004; pp. 455–462.
82. Fuchs, C. IP-based Communication in Wireless Sensor Network. Sens. Nodes Oper. Netw. Appl. 2011, 67, 9. 83. TinyOS Documentation Wiki - TinyOS Wiki. Available online: http://tinyos.stanford.edu/tinyos-wiki/
index.php/TinyOS_Overview. (accessed on 22 July 2016). 84. Mukhtar, H.; Kang-Myo, K.; Chaudhry, S.A.; Akbar, A.H.; Ki-Hyung, K.; Yoo, S.W. LNMP- Management
architecture for IPv6 based low-power wireless Personal Area Networks (6LoWPAN). In Proceedings of the 2008 IEEE Network Operations and Management Symposium (NOMS 2008), Salvador, Bahia, Brazil, 7–11 April 2008; pp. 417–424. 85. Choi, H.; Kim, N.; Cha, H. 6LoWPAN-SNMP: Simple Network Management Protocol for 6LoWPAN. In Proceedings of the 2009 11th IEEE International Conference on High Performance Computing and Communications, Seoul, Korea, 25–27 June 2009; pp. 305–313. 86. Feng, K.; Huang, X.; Su, Z. A network management architecture for 6LoWPAN network. In Proceedings of the 2011 4th IEEE International Conference on Broadband Network and Multimedia Technology, Shenzhen, China, 28–30 October 2011; pp. 430–434. 87. Zhou, J.; Jiang, H.; Wu, J.; Wu, L.; Zhu, C.; Li, W. SDN-Based Application Framework for Wireless Sensor and Actor Networks. IEEE Access 2016, 4, 1583–1594. 88. Olivier, F.; Carlos, G.; Florent, N. SDN Based Architecture for Clustered WSN. In Proceedings of the 2015 9th International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing (IMIS), Blumenau, Brazil, 8–10 July 2015; pp. 342–347. 89. Ba, M.; Flauzac, O.; Haggar, B.S.; Nolot, F.; Niang, I. Self-stabilizing k-hops clustering algorithm for wireless ad hoc networks. In Proceedings of the 7th ACM International Conference on Ubiquitous Information Management and Communication, Kota Kinabalu, Malaysia, 17–19 January 2013; p. 38. 90. Capelle, M.; Abdellatif, S.; Huguet, M.J.; Berthou, P. Online virtual links resource allocation in Software-Deﬁned Networks. In Proceedings of the 2015 IFIP Networking Conference (IFIP Networking), Toulouse, France, 20–22 May 2015; pp. 1–9. 91. Rahmani, R.; Rahman, H.; Kanter, T. Context-Based Logical Clustering of Flow-Sensors-Exploiting HyperFlow and Hierarchical DHTs. In Proceedings of the 4th International Conference on Next Generation Information Technology, Jeju Island, Korea, 18–20 June 2013; Elsevier: Atlanta, GA, USA, 2013. 92. Rahmani, R.; Rahman, H.; Kanter, T. On Performance of Logical-Clustering of Flow-Sensors. arXiv 2014, arXiv:1401.7436. 93. Tootoonchian, A.; Ganjali, Y. HyperFlow: A distributed control plane for OpenFlow. In Proceedings of the 2010 Internet Network Management Conference On Research on Enterprise Networking, San Jose, CA, USA, 27 April 2010; p. 3. 94. Stojkoska, B.R.; Kirandziska, V. Improved MDS-based algorithm for nodes localization in wireless sensor networks. In Proceedings of the 2013 IEEE EUROCON, Zagreb, Croatia, 1–4 July 2013; pp. 608–613. 95. Su, F.; Ren, W.; Jin, H. Localization Algorithm Based on Difference Estimation for Wireless Sensor Networks. In Proceedings of the International Conference on Communication Software and Networks (ICCSN ’09), Chengdu, China, 27–28 February 2009; pp. 499–503. 96. Abu-Mahfouz, A.M.; Hancke, G.P. An efﬁcient distributed localisation algorithm for wireless sensor networks: Based on smart reference-selection method. Int. J. Sens. Netw. 2013, 13, 94–111. 97. Abu-Mahfouz, A.M.; Hancke, G.P. Evaluating ALWadHA for providing secure localisation for wireless sensor networks. In Proceedings of the 2013 IEEE AFRICON, Pointe-Aux-Piments, Mauritius, 9–12 September 2013; pp. 1–5.

Sensors 2017, 17, 1031

30 of 32

98. Abu-Mahfouz, A.M.; Hancke, G.P.; Isaac, S.J. Positioning system in wireless sensor networks using NS-2. Softw. Eng. 2012, 2, 91–100.
99. Abu-Mahfouz, A.M.; Hancke, G.P. ALWadHA Localisation Algorithm: Yet More Energy Efﬁcient. Int. J. Sens. Netw. 2017, in press.
100. Zhu, Y.; Zhang, Y.; Xia, W.; Shen, L. A Software-Deﬁned Network Based Node Selection Algorithm in WSN Localization. In Proceedings of the 2016 IEEE 83rd Vehicular Technology Conference (VTC Spring), Nanjing, China, 15–18 May 2016; pp. 1–5.
101. Bhunia, S.S.; Das, S.K.; Roy, S.; Mukherjee, N. Mobility management in IP based Wireless Sensor Network using TinyOS. In Proceedings of the 2012 Sixth International Conference on Sensing Technology (ICST), Kolkata, India, 18–21 December 2012; pp. 759–764.
102. IEEE. IEEE Standard for Information technology–Telecommunications and information Exchange between Systems—Local and Metropolitan Area Networks—Speciﬁc Requirements Part 11: Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) Speciﬁcations Amendment 1: Prioritization of Management Frames; IEEE Std 802.11ae-2012 (Amendment to IEEE Std 802.11-2012); IEEE Computer Society: Los Alamitos, CA, USA, 2012; pp. 1–52.
103. Li, Y.; Pan, Y.; Wang, P. Research and implementation of a mobility management mechanism for Wireless Sensor Networks based on IEEE 802.15.4. In Proceedings of the 2011 IEEE International Conference on Cyber Technology in Automation, Control, and Intelligent Systems (CYBER), Kunming, China, 20–23 March 2011; pp. 260–264.
104. Yang, H.; Kim, Y. SDN-based distributed mobility management. In Proceedings of the 2016 International Conference on Information Networking (ICOIN), Kota Kinabalu, Malaysia, 13–15 January 2016; pp. 337–342.
105. Meneses, F.; Corujo, D.; Guimarães, C.; Aguiar, R.L. Multiple Flow in Extended SDN Wireless Mobility. In Proceedings of the 2015 Fourth European Workshop on Software Deﬁned Networks, Bilbao, Spain, 30 September–2 October 2015; pp. 1–6.
106. Ali-Ahmad, H.; Cicconetti, C.; de la Oliva, A.; Mancuso, V.; Sama, M.R.; Seite, P.; Shanmugalingam, S. An SDN-Based Network Architecture for Extremely Dense Wireless Networks. In Proceedings of the 2013 IEEE SDN for Future Networks and Services (SDN4FNS), Trento, Italy, 11–13 November 2013; pp. 1–7.
107. Kuklin´ ski, S.; Li, Y.; Dinh, K.T. Handover management in SDN-based mobile networks. In Proceedings of the 2014 IEEE Globecom Workshops (GC Wkshps), Austin, TX, USA, 8–12 December 2014; pp. 194–200.
108. Aleksander, M.B.; Dubchak, L.; Chyzh, V.; Naglik, A.; Yavorski, A.; Yavorska, N.; Karpinski, M. Implementation technology software-deﬁned networking in Wireless Sensor Networks. In Proceedings of the 2015 IEEE 8th International Conference on Intelligent Data Acquisition and Advanced Computing Systems: Technology and Applications (IDAACS), Warsaw, Poland, 24–26 September 2015; Volume 1, pp. 448–452.
109. LoRa Technology. Available online: https://www.lora-alliance.org/What-Is-LoRa/Technology (accessed on 7 August 2016).
110. Mikhaylov, K.; Petaejaejaervi, .J.; Haenninen, T. Analysis of Capacity and Scalability of the LoRa Low Power Wide Area Network Technology. In Proceedings of the 22th European Wireless Conference on European Wireless, Oulu, Finland, 18–20 May 2016; pp. 1–6.
111. Anwander, M.; Wagenknecht, G.; Staub, T.; Braun, T. Management of Heterogeneous Wireless Sensor Networks. In 6. Fachgespräch Sensornetzwerke; RWTH Aachen: Aachen, Germany, 2007; pp. 63–66.
112. Chowdhury, S.R.; Bari, M.F.; Ahmed, R.; Boutaba, R. PayLess: A low cost network monitoring framework for Software Deﬁned Networks. In Proceedings of the 2014 IEEE Network Operations and Management Symposium (NOMS), Krakow, Poland, 5–9 May 2014; pp. 1–9.
113. Yu, M.; Jose, L.; Miao, R. Software Deﬁned Trafﬁc Measurement with OpenSketch. In Proceedings of the 10th USENIX Symposium on Networked Systems Design and Implementation (NSDI 13), Lombard, IL, USA, 2–5 April 2013; USENIX: Lombard, IL, USA, 2013; pp. 29–42.
114. Tootoonchian, A.; Ghobadi, M.; Ganjali, Y. OpenTM: Trafﬁc matrix estimator for OpenFlow networks. In Proceedings of the International Conference on Passive and Active Network Measurement, Zurich, Switzerland, 7–9 April 2010; Springer: Berlin, Germany, 2010; pp. 201–210.

Sensors 2017, 17, 1031

31 of 32

115. Yu, C.; Lumezanu, C.; Zhang, Y.; Singh, V.; Jiang, G.; Madhyastha, H.V. Flowsense: Monitoring network utilization with zero measurement cost. In Proceedings of the International Conference on Passive and Active Network Measurement, Hong Kong, China, 18–19 March 2013; Springer: Wiesbaden, Germany, 2013; pp. 31–41.
116. Van Adrichem, N.L.M.; Doerr, C.; Kuipers, F.A. OpenNetMon: Network monitoring in OpenFlow Software-Deﬁned Networks. In Proceedings of the 2014 IEEE Network Operations and Management Symposium (NOMS), Krakow, Poland, 5–9 May 2014;pp. 1–8.
117. Cao, C.; Luo, L.; Gao, Y.; Dong, W.; Chen, C. TinySDM: Software Deﬁned Measurement in Wireless Sensor Networks. In Proceedings of the 2016 15th ACM/IEEE International Conference on Information Processing in Sensor Networks (IPSN), Vienna, Austria, 11–14 April 2016; pp. 1–12.
118. De Oliveira, B.T.; Margi, C.B.; Gabriel, L.B. TinySDN: Enabling multiple controllers for software-deﬁned wireless sensor networks. In Proceedings of the 2014 IEEE Latin-America Conference on Communications (LATINCOM), Cartagena de Indias, Colombia, 5–7 November 2014; pp. 1–6.
119. Jayashree, P.; Princy, F.I. Leveraging SDN to conserve energy in WSN-An analysis. In Proceedings of the 2015 3rd International Conference on Signal Processing, Communication and Networking (ICSCN), Chennai, India, 26–28 March 2015; pp. 1–6.
120. Zhu, C.; Yang, L.T.; Shu, L.; Duong, T.Q.; Nishio, S. Secured energy-aware sleep scheduling algorithm in duty-cycled sensor networks. In Proceedings of the 2012 IEEE International Conference on Communications (ICC), Ottawa, ON, Canada, 10–15 June 2012; pp. 1953–1957.
121. Ozen, S.; Oktug, S. Forwarder set based dynamic duty cycling in asynchronous wireless sensor networks. In Proceedings of the 2014 IEEE Wireless Communications and Networking Conference (WCNC), Istanbul, Turkey, 6–9 Apri 2014; pp. 2432–2437.
122. Zeng, D.; Li, P.; Guo, S.; Miyazaki, T.; Hu, J.; Xiang, Y. Energy Minimization in Multi-Task Software-Deﬁned Sensor Networks. IEEE Trans. Comput. 2015, 64, 3128–3139.
123. Huang, R.; Chu, X.; Zhang, J.; Hu, Y.H. Energy-efﬁcient monitoring in software deﬁned wireless sensor networks using reinforcement learning: A prototype. Int. J. Distrib. Sens. Netw. 2015, 2015, 1.
124. Abu-Mahfouz, A.M.; Hancke, G.P. Localised Information Fusion Techniques for Location Discovery in Wireless Sensor Networks. Int. J. Sens. Netw. 2017, in press.
125. Dhasian, H.R.; Balasubramanian, P. Survey of data aggregation techniques using soft computing in wireless sensor networks. IET Inf. Secur. 2013, 7, 336–342.
126. Ejaz, W.; Naeem, M.; Basharat, M.; Anpalagan, A.; Sithamparanathan, K. Efﬁcient Wireless Power Transfer in Software-Deﬁned Wireless Sensor Networks. IEEE Sens. J. 2016, 16, 7409–7420.
127. Lu, Y.; Huang, X.; Huang, B.; Xu, W.; Zhang, Q.; Xu, R.; Liu, D. A Study on the Reliability of Software Deﬁned Wireless Sensor Network. In Proceedings of the 2015 IEEE International Conference on Smart City/SocialCom/SustainCom (SmartCity), Chengdu, China, 19–21 December 2015; pp. 129–134.
128. Mahmud, A.; Rahmani, R. Exploitation of OpenFlow in wireless sensor networks. In Proceedings of the 2011 International Conference on Computer Science and Network Technology (ICCSNT), Harbin, China, 24–26 December 2011; Volume 1, pp. 594–600.
129. Flauzac, O.; González, C.; Hachani, A.; Nolot, F. SDN Based Architecture for IoT and Improvement of the Security. In Proceedings of the 2015 IEEE 29th International Conference on Advanced Information Networking and Applications Workshops (WAINA), Gwangiu, Korea, 24–27 March 2015; pp. 688–693.
130. Flauzac, O.; Nolot, F.; Rabat, C.; Steffenel, L.A. Grid of Security: A New Approach of the Network Security. In Proceedings of the 2009 Third International Conference on Network and System Security (NSS ’09), Gold Coast, Queensland, Australia, 19-21 October 2009; pp. 67–72.
131. Sun, Y.; Lin, Z.; Ma, Y. A Lottery SMC Protocol for the Selection Function in Software Deﬁned Wireless Sensor Networks. IEEE Sens. J. 2016, 16, 7325–7331.
132. Farooq, M.O.; Kunz, T. Operating systems for wireless sensor networks: A survey. Sensors 2011, 11, 5900–5930.
133. Levis, P.; Madden, S.; Polastre, J.; Szewczyk, R.; Whitehouse, K.; Woo, A.; Gay, D.; Hill, J.; Welsh, M.; Brewer, E.; et al. Tinyos: An operating system for sensor networks. In Ambient Intelligence; Springer: New York, NY, USA, 2005; pp. 115–148.
134. Contiki: The Open Source Operating System for the Internet of Things. Available online: http://www. contiki-os.org/ (accessed on 21 July 2016).

Sensors 2017, 17, 1031

32 of 32

135. Get Started with SDN-WISE. Available online: http://sdn-wise.dieei.unict.it/docs/guides/GetStarted.html (accessed on 30 July 2016).
136. Miyazaki, T.; Yamaguchi, S.; Kobayashi, K.; Kitamichi, J.; Guo, S.; Tsukahara, T.; Hayashi, T. A software deﬁned wireless sensor network. In Proceedings of 2014 International Conference on Computing, Networking and Communications (ICNC), Honolulu, HI, USA, 3–6 February 2014; pp. 847–852.
137. Galluccio, L.; Milardo, S.; Morabito, G.; Palazzo, S. Reprogramming Wireless Sensor Networks by using SDN-WISE: A hands-on demo. In Proceedings of the 2015 IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Hong Kong, China, 26 April–1 May 2015; pp. 19–20.
138. Portilla, J.; De Castro, A.; De La Torre, E.; Riesgo, T. A Modular Architecture for Nodes in Wireless Sensor Networks. J. UCS 2006, 12, 328–339.
139. Krasteva, Y.E.; Portilla, J.; Carnicer, J.M.; de la Torre, E.; Riesgo, T. Remote HW-SW reconﬁgurable Wireless Sensor nodes. In Proceedings of the 2008 IEEE 34th Annual Conference of Industrial Electronics (IECON 2008), Orlando, FL, USA, 10–13 November 2008; pp. 2483–2488.
140. Natheswaran, S.; Athisha, G. Remote reconﬁgurable wireless sensor node design for Wireless Sensor Network. In Proceedings of the 2014 International Conference on Communications and Signal Processing (ICCSP), Melmaruvathur, India, 3–5 April 2014; pp. 649–652.
141. Heller, B.; Sherwood, R.; McKeown, N. The controller placement problem. In Proceedings of the ACM First Workshop on Hot Topics in Software Deﬁned Networks, Helsinki, Finland, 13 August 2012; pp. 7–12.
142. Wang, G.; Zhao, Y.; Huang, J.; Duan, Q.; Li, J. A K-means-based network partition algorithm for controller placement in software deﬁned network. In Proceedings of the 2016 IEEE International Conference on IEEE Communications (ICC), Kuala Lumpur, Malaysia, 22–27 May 2016; pp. 1–6.
143. Sherwood, R.; Gibb, G.; Yap, K.K.; Appenzeller, G.; Casado, M.; McKeown, N.; Parulkar, G. Flowvisor: A network virtualization layer. OpenFlow Switch Consort. Technol. Rep. 2009, 1, 1–13.
c 2017 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (http://creativecommons.org/licenses/by/4.0/).

