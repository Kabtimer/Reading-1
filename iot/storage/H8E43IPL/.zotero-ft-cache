à l’Université Pierre et Marie Curie, le 28 septembre 2004
M2 Informatique Réseaux
Multimédia et Qualité de Service Cours 1 : RTP
Timur FRIEDMAN
1

A propos du module
I Cinq cour s
I RTP I mult icast I TCP Fr iendly I signalisat ion I I nt Ser v, Dif f Ser v, MPLS, et RSVP
2

Evaluation
I Not e
I 60 % écr it I 40 % cont r ôle cont inu
I Ecr it
I examen (document s non aut or isés)
I Cont r ôle cont inu
I quest ions en cour s : 10 % I TDs : 30 % I papier s, nor mes – discussion : 30 % I cont r ibut ion au wiki : 30 %
3

Pour la semaine prochaine
I pr épar er les exer cices du TD
I sur le sit e www-r p.lip6.f r / ~f r iedman à par t ir de demain
I lir e le papier
I Timer Reconsider at ion f or Enhanced RTP Scalabilit y
I par J onat han Rosenber g Henning Schulzr inne I Pr oc. I nf ocom 1998
I lir e le RFC 3550 I visit er le Wiki
I disponible à par t ir de demain
I pr épar er le pr ochain cour s sur le mult icast
4

Survol du module
I Basé sur des connaissances r éseau I en par t iculier : int er net I Revisit er les couches OSI suivant es : I Applicat ion I Tr anspor t I Réseau I Les voir sous l’opt ique du mult imédia
5

Motivation

I I nt er net : pas conçu pour mult imédia

I

un r éseau pour t ext e, données

I Depuis …

I

Web :images

I

lect ur e en t r ansit (st r eaming)

audio et vidéo

I

j eux int er act if s

I

voix sur I P (VoI P) : voix en t emps r éelle

I

visioconf ér ence

6

Problématique

I I nt er net : un r éseau dit de « moindr e ef f or t » (best ef f or t )

I

délais

I

per t es

I

déséquencement

I

duplicat as

I Applicat ions mult imédia : besoin de gar ant ies

I

e.g. VoI P avec t r op de délai ne f onct ionne pas

I Est -ce qu’un seul r éseau peut t out f our nir ?

7

Couche application

I Le signalisat ion

I

RTSP, SDP, H.323, SI P

8

Couche transport

I Conf r ont er le congest ion dans le r éseau

I l’appr oche TCP-Amical (TCP-Fr iendly)

I

DCCP/ TFRC

I l’appr oche Qualit é de ser vice (QoS)

I

I nt Ser v, Dif f Ser v, RSVP, MPLS

I

(sur plusieur s couches, mais on en par le ici)

I Four nir les f onct ionnalit és t emps r éelle I RTP/ RTCP

9

Couche réseau
I Dif f usion à gr ande échelle : le mult icast I I GMP (pr ot ocole de bor dur e) I DVMRP et PI M (pr ot ocoles de r out age) I RMT (couche t r anspor t )
I
10

Plan du cours
I Introduction I Communication en temps réel I RTP I Limitation de débit RTCP I RTP et le temps réel
11

Introduction
I RTP est un protocole de transport dans l’Internet
I Dans la couche 4, comme TCP, mais implémenté sur UDP I RFCs 3550 et 3551 (juillet 2003 – RFCs originaux de 1996)
I RTP est pour les applications « temps réel »
I Par exemple la téléphonie, le visioconférence I TCP n’est pas adapté pour ces applications
I RTP est conçu pour la communication multipoint
I RTP marche sur le multicast
I RTP fournit un cadre aux applications
I Il laisse beaucoup de fonctionnalité aux applications I Il fournit les outils nécessaires (e.g. estampilles temporelles)
12

Plan
I Introduction I Communication en temps réel
I Applications I Caractéristiques I Besoins
I RTP I Limitation de débit RTCP I RTP et le temps réel
13

Communications en temps réel
I Avertissement : une certaine idée du temps réel
I Orientée audio et vidéo interactive I Pas le temps réel dans le sens technique
I Pas « systèmes durs temps réel »
I Mieux compris en fonction d’exemples...
14

Applications typiques
I Voix sur IP (« VoIP »)
I Téléphonie
I Visioconférence
I Voix I Vidéo I Transparents
I Jeux interactives
I Mises à jour de mouvement I Communication entre participants
15

Applications moins typiques
I Diffusion d’actualités
I Données (par exemple à propos de la bourse)
I Moniteur à distance
I Collection de données
I Control télémétrique
I Données I Commandes
I RTP à été conçu plutôt pour audio et vidéo
I (Mais pas exclusivement)
16

Caractéristiques
I Interactivité
I Exemple : téléphonie I Communication dans deux sens
I Exemple moins typique : vidéo sur demande I Seulement marche/arrêt, reculer, avancer, recherche
I Intolérance pour les délais
I Exemple : vidéo I Une trame arrive > 500 ms en retard I Mieux jeter que d’utiliser
17

Caractéristiques bis
I Tolérance pour les pertes
I Exemple : voix en paquets G.711 (sans redondance) I Perte de 1 % de trames négligeable en termes de qualité
I Exemple : vidéo codé en MPEG I Perte de trames B est permis I Au moins que les trames I et P arrivent
I Exemple moins typique : données de la bourse
I Communications multipoint
I Exemple : visioconférence I Communications bidirectionnels sont un cas particulier
18

Besoins
I Horodatage des données I Synchronisation des flux I Résistance contre les pertes, duplicatas, mauvais ordre I Identification de participants I Surveillance de l’état de la connexion I Contrôle de flux I Contrôle de congestion I Besoins avancés :
I Support pour le transcodage de données I Sécurité de données
19

Horodatage des données
I l’Internet est un réseau « moindre effort »
I Pas de garanties de délai I A la différence avec X.25, par exemple
I X.25 garde les intervalles d’origine
I Contraintes temporelles pour la lecture
I Chaque trame audio ou vidéo doit être lu à un moment précis I On jette les trames qui arrivent en retard
I Technique : mise en mémoire
I Avec l’horodatage on récupère les intervalles d’origine
20

Horodatage exemple
Ila norme G.729 : trames de voix à 62,5 Hz

Iespacement régulier Iespacement irrégulier mémoire Iespacement régulier

rréésseeaauu
21

Synchronisation des flux
I Une applications peut avoir plusieurs flux
I Audio I Vidéo I Transparents
I La lecture des flux doit être synchronisée
I Si, par exemple, la voix n’est pas codée dans le vidéo
I Besoin d’établir l’équivalence entre :
I L’horodatage de chaque flux I (Il peut être artificiellement régulier)
I Le « temps de l’horloge murale »
22

Synchronisation exemple d’après H. Schulzrinne

estampilles temporelles audio : 160 320 480 640 800
460
estampilles temporelles vidéo : ... 0
1900
temps de l’horloge murale : 8:45:17.23

960 1120 ... 9000
23

Résistance contre les pertes, etc.
I L’Internet est un réseau « moindre effort », donc :
I Pertes des paquets I Duplicatas des paquets I Paquets qui arrivent dans le mauvais ordre
I Pour faire face aux pertes : la redondance
I L’émetteur doit connaître le taux de pertes I Plus il y a de pertes, plus on ajoute de la redondance
I Pour faire face aux duplicatas, mauvais ordre :
I Numéros de séquence
I Retransmissions ?
I Pas systématiquement (problème de délais)
24

Identification des participants
I Communications multipoint : plusieurs participants
I Identification aux autres participants I Démultiplexage des flux
I Destinés vers le même adresse, même numéro de port
I Moyens d’identification
I Nom : M Dupont I Adresse courriel : m.dupont@online.fr I Nom logique de machine : dhcp-51.online.fr I Adresse IP / numéro de port : 135.227.61.57/24882 I Autres ?
25

Surveillance de l’état de la connexion
I Paramètres génériques :
I Le taux de pertes I La gigue (variance des délais)
I La connaissance de ces paramètres aide :
I Les applications adaptatives I Ajouter de la redondance en fonction des pertes I Augmenter la mise en mémoire en fonction de la gigue
I L’administrateur du réseau I Reconnaissance des failles
26

Contrôle de flux
I Chaque récepteur peut avoir plusieurs mémoires :
I Pour l’audio I Pour le vidéo
I Dans les communications multipoints :
I Le nombre peut être multiplié par le nombre d’émetteurs
I Comment signaler la mémoire disponible ?
I Dans le TCP : fenêtre avertie I Dans le multi flux, multipoint c’est plus compliqué
27

Contrôle de congestion
I Le contrôle de congestion dans l’Internet :
I TCP I Un contrôle de bout en bout
I Problèmes avec le TCP pour le temps réel :
I TCP est monolithique : I Contrôle de congestion I Fiabilité par retransmissions
I TCP existe exclusivement en version unicast
I Si on veut se dispenser de TCP
I Il est conseillé d’être amicale avec TCP (« TCP-friendly ») I On doit connaître les délais et les taux de pertes
28

Transcodage
I Des situations difficiles :
I Un récepteur derrière un lien à débit faible I Un récepteur qui ne peut pas décoder un format donné I Un récepteur derrière un pare-feux
I On peut transcoder l’audio, le vidéo :
I Éliminer le stéréo, diminuer la qualité I Rendre les images plus petites I Changer de formats
I On peut combiner les flux I On peut changer les numéros de port
29

Transcodage

débit faible

30

Sécurité
I Authentification des participants I Autorisation des participants I Intégrité de données I Confidentialité de données
31

Plan
I Introduction I Communication en temps réel I RTP
I Pourquoi un autre protocole de transport ? I Séparation données/contrôle I Profiles différentes pour applications différentes I Les paquets RTP I Les paquets RTCP
I Limitation de débit RTCP I RTP et le temps réel
32

Pourquoi un autre protocole de transport ?
I Pourquoi pas TCP ?
I TCP exige la fiabilité à 100% I TCP favorise la fiabilité au dépens des délais I TCP existe seulement en version unicast
I Pourquoi pas UDP ?
I UDP fournit peu d’outils : I Les numéros de port pour le démultiplexage I Un checksum
I RTP est adapté aux besoins du temps réel I RTP est léger et flexible
33

Séparation données/contrôle
I RTP consiste en deux protocoles :
I RTP pour l’acheminement de données I RTCP pour échanger les messages de contrôle
I Les différences avec TCP :
I Chaque paquet TCP contient des champs de contrôle : I Acquittements, taille de la fenêtre, etc. I Solution adapté pour une boucle de contrôle étroite
I RTP fonctionne en multipoint I RTP n’exige pas la fiabilité à 100%
I Deux numéros de ports voisins
I Par exemple : données port 12040, contrôle port 12041
34

Différentes profiles
I Un solution n’est pas adapté à toutes les applications
I Par exemple il existe plusieurs codecs audio I Chaque codec à son propre horodatage I Les codecs vidéo ont encore d’autres horodatages
I RTP (RFC 3550) fournit un cadre I Les « profiles » (RFC 3551) fournissent les détails
I Quelques profiles audio : I GSM, PCMA, G.722
I Quelques profiles vidéo : I JPEG, H.261, MPEG 1 et MPEG 2
35

Les paquets RTP

0

1

2

3

01234567890123456789012345678901

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|V=2|P|X| CC |M|

PT

|

sequence number

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

timestamp

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

synchronization source (SSRC) identifier

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

|

:

data

:

:

....

:

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

V : version P : padding (at end of data) X : extension (after the header) CC : CSRC count(additional sources) M : marker (profile specific) PT : packet type

36

A propos des paquets RTP
I Un format simple, principalement :
I Identificateur de source (SSRC) I Type de paquet (PT) I Numéro de séquence I Estampille temporelle I Données
I Longueur et numéro de port dans l’en-tête UDP I Peu de surcharge
I Douze octets d’en-tête (par rapport à 20 pour TCP) I Possibilité d’ajouter des extensions
37

SSRC : synchronization source identifier
I Identifiant d’un flux de paquets
I A chaque SSRC correspond : I Une espace de numéros de séquence I Une espace temporelle
I Une application peut avoir plusieurs SSRCs I Par exemple : un pour l’audio, un pour le vidéo
I Globalement unique
I 232 = 4,3 x 109 valeurs possibles I Choisi à l’aléatoire I Algorithme de détection de collisions
38

Indépendance de la couche inférieure
I Le SSRC est indépendant de l’adresse machine
I RTP fonctionne sur IPv4, IPv6, ou d’autres protocoles
I On sépare les couches réseau et transport
39

PT : packet type

PT

encoding media type clock rate channels

name

(Hz)

___________________________________________________

0

PCMU

A

8000

1

2

G726-32

A

8000

1

3

GSM

A

8000

1

5

DVI4

A

8000

1

6

DVI4

A

16000

1

7

LPC

A

8000

1

8

PCMA

A

8000

1

9

G722

A

8000

1

10

L16

A

44100

2

11

L16

A

44100

1

12

QCELP

A

8000

1

14

MPA

A

90000

?

15

G728

A

8000

1

16

DVI4

A

11025

1

17

DVI4

A

22050

1

18

G729

A

8000

1

25

CelB

V

90000

26

JPEG

V

90000

28

nv

V

90000

31

H261

V

90000

32

MPV

V

90000

96-127 dynamic

?

40

Numéro de séquence
I Permet de reconstruire l’ordre de paquets
I Mais aucun mécanisme de retransmission I Simplement un support pour l’application
I Deux octets : 216 = 65 536 numéros possibles
I Une espace de numéros par SSRC I Numéro initial choisi à l’aléatoire
I Facilite la confidentialité par l’encryption I Augmente par 1 même si l’horloge n’avance pas
41

Estampille temporelle
I Essentielle pour la lecture des paquets
I Sert aussi à calculer la gigue
I Les unités sont dépendants de l’application I Quatre octets : 232 = 4,3 x 109 valeurs possibles
I Une espace de valeurs par SSRC I Valeur initiale choisie à l’aléatoire
I Facilite la confidentialité par l’encryption I Augmente dans une manière régulière
I N’augmente pas s’il s’agit d’une même trame
42

Les paquets RTCP

0

1

2

3

01234567890123456789012345678901

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|V=2|P| SC = n |

PT

|

length

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

SSRC of receiver

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

:

information regarding SSRC 1

:

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

:

information regarding SSRC 2

:

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

:

:

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

:

information regarding SSRC n

:

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

V : version P : padding (at end of data) SC : source count PT : packet type

43

A propos des paquets RTCP
I Un cadre pour des rapports :
I Identificateur de récepteur (SSRC) I Type de paquet (PT) I Longueur de paquet
I Il peut y avoir plusieurs paquets par paquet UDP I Nombre de sources
I Un rapport par source
I Plusieurs genres de rapport possibles
I Receiver Report (RR), Sender Report (SR), autres
44

Les rapports RR : Receiver Report

0

1

2

3

01234567890123456789012345678901

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

SSRC of source

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

| fraction lost |

cumulative number of packets lost

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

extended highest sequence number received

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

interarrival jitter

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

last SR (LSR)

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

delay since last SR (DLSR)

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

PT : 201

45

A propos des rapports RR
I Information sur chaque source (SSRC) :
I Numéro de séquence I Pertes
I Depuis le dernier rapport (en pourcentage) I Depuis le début (en nombre brut) I Information concernant le RTT I RTT = « round trip time » I Temps aller-retour depuis la source I Ne demande pas de réponse immédiat I Gigue
46

Le calcul du RTT

source

récepteur

LSR WS1

SR

WR1

WS2

RR

RTT (WS2 ± LSR) ± DLSR

WR2 DLSR WR2 ± W R1
47

Le calcul de la gigue
source RTP1 WS1 RTP2 WS2
J’ J  (D ± J)/16 gigue : déviation moyen de D

récepteur
WR1
WR2 D _ (WR2 ± W S2)
± (WR1 ± W S1) |
48

Les rapports SR : Sender Report

0

1

2

3

01234567890123456789012345678901

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

NTP timestamp, most significant word

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

NTP timestamp, least significant word

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

RTP timestamp

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

sender’s packet count

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

sender’s octet count

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

PT : 200

Cet information va entre l’en-tête et les rapports RR
49

A propos des rapports SR
I Estampilles temporelles NTP
I Temps de l’horloge murale I NTP = « Network Time Protocol » I Secondes depuis 0h UTC le 1 janvier 1900
I 32 premiers bits indiquent le nombre de secondes I 32 derniers bits indiquent la portion d’une seconde
I Estampille temporelle RTP
I Le temps équivalent en unités de l’application
I Nombre de paquets, d’octets depuis le début
50

Les rapports SDES : Source Description

0

1

2

3

01234567890123456789012345678901

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

SSRC

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

|

SDES items

|

|

...

|

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

PT : 202
Information descriptif à propos de la source
51

Exemples des rapports SDES
I CNAME : doe@sleepy.megacor p.com
I Nom constant à travers des SSRCs
I NAME : J ohn Doe, Bit Recycler , Megacor p I EMAIL : J ohn.Doe@megacor p.com I PHONE : +1 908 555 1212 I LOC : Mur r ay Hill, New J er sey I TOOL : videot ool 1.2 I NOTE : « ligne occupée » I PRIV : usage privé
52

Autres rapports RTCP
I BYE
I Pour terminer une session RTP
I APP
I Spécifique à l’application
I XR (RFC 3611)
I Rapports détaillés de pertes et de délais I Métriques VoIP
I Proposé :
I Acquittements pour RTP en unicast
53

Plan
I Introduction I Communication en temps réel I RTP I Limitation de débit RTCP I RTP et le temps réel
54

Problème de résistance au facteur d’échelle

Débit RTP = 10 Kbps

Débit RTP = 10 Kbps

nn==33

nn==1155

Débit RTCP = 0,5 Kbps

X Débit RTCP = 2,5 Kbps ?
Débit RTCP = 0,5 Kbps
55

Un algorithme distribué
I Soit :
I G = débit RTP (connu par tout le monde) I G
 = débit RTCP = 0,05 G I G

 = débit RTCP des récepteurs = 0,75 G
 I Q = nombre de récepteurs (estimé) I 7 = taille moyenne des paquets RTCP (estimée) I I = fréquence cible d’émission = G

 / Q7
I Délai entre émission de paquets RTCP :
I Choisi à l’aléatoire entre 0,5/I et 1,5/I
56

Estimation du nombre de récepteurs
I Chaque participant compte les participants
I Arrivé d’un SR : compte une source I Arrivé d’un RR : compte un récepteur
I S’il s’agit d’un nouveau participant
I Il n’a pas encore eu le temps de compter I Il attend une intervalle minimale
57

Plan
I Introduction I Communication en temps réel I RTP I Limitation de débit RTCP I RTP et le temps réel
58

Rappel des besoins
I Horodatage des données I Synchronisation des flux I Résistance contre les pertes, duplicatas, mauvais ordre I Identification de participants I Surveillance de l’état de la connexion I Contrôle de flux I Contrôle de congestion I Besoins avancés :
I Support pour le transcodage de données I Sécurité de données
59

Horodatage
I Estampille temporelle RTP
I Spécifique à l’application I Pour la lecture des données
60

Synchronisation des flux
I Estampille temporelle NTP
I Temps de l’horloge murale I Coordination entre les estampilles d’applications
61

Résistance contre les pertes, etc.
I Récolte d’informations :
I Numéro de séquence RTP I Taux de pertes I Nombre de paquets perdus
I Pas de mécanisme intégré
I A l’application de réagir I Chaque application à ses propres besoins
I Exemple : redondance audio I Exemple : protection de trames I en MPEG
62

Identification de participants
I CNAME
I Exemple : doe@sleepy.megacor p.com I Unique et constant à travers les flux
I SSRC
I Numéro unique par participant par flux
I Informations SDES
I Informations supplémentaires
63

Surveillance de l’état de la connexion
I Les RR
I Pertes depuis le dernier rapport I Pertes depuis le début I Information concernant le RTT I Gigue
I D’autres rapports
I Les XR : information détaillé sur pertes, délais, métriques VoIP
64

Contrôle de flux
I Données RTP
I Pas de mécanismes de contrôle de flux
I Rapports RTCP
I Mécanisme de limitation du débit des rapports I Typiquement à 5% du débit des données RTP
65

Contrôle de congestion
I Pas de mécanisme dans l’RTP I RTCP fourni des informations
I Taux de pertes, par exemple I Ils peuvent être utilisés par une application
66

Support pour le transcodage de données
I RTP permet de mélanger les flux
I Plusieurs SSRCs attachés à un flux mélangé
I Les détails dépendent de l’application
67

Sécurité de données
I RTP est compatible avec la sécurité
I Numéro de séquence initialisé à une valeur aléatoire I Pareil pour l’estampille temporel
I L’encryption n’est pas encore dans le norme
I Un sujet de travail actuel
68

