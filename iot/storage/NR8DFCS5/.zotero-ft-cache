Adaptive MAC layer for interference limited WSN
Viktor Toldov
To cite this version:
Viktor Toldov. Adaptive MAC layer for interference limited WSN. Networking and Internet Architecture [cs.NI]. Université Lille 1 Sciences et technologies, 2017. English. ￿tel-01493094￿

HAL Id: tel-01493094 https://hal.inria.fr/tel-01493094
Submitted on 20 Mar 2017

HAL is a multi-disciplinary open access archive for the deposit and dissemination of scientific research documents, whether they are published or not. The documents may come from teaching and research institutions in France or abroad, or from public or private research centers.

L’archive ouverte pluridisciplinaire HAL, est destinée au dépôt et à la diffusion de documents scientifiques de niveau recherche, publiés ou non, émanant des établissements d’enseignement et de recherche français ou étrangers, des laboratoires publics ou privés.

UNIVERSITÉ LILLE 1 - SCIENCES ET TECHNOLOGIES
ÉCOLE DOCTORALE ED RÉGIONALE SPI 72 IEMN - UMR CNRS 8520

Adaptive MAC layer for interference limited WSN

Author : Viktor TOLDOV
Présentée et soutenue publiquement le 24/01/2017 pour l’obtention du titre de Docteur
de l’Université Lille 1 - Sciences et Technologies Spécialité Micro et nano technologies, acoustique et
télécommunications Numéro d’ordre : 42262

Composition du jury : Rapporteurs : Examinateurs :
Directeur de thèse : Co-directeur de thèse :

Yannis POUSSET
Prof. Univ. of Poitiers, France
Hervé RIVANO
CR Inria, France
Chiara BURATTI
Research Associate Univ. of Bologna, Italy
Antoine GALLAIS
MCF Univ. of Strasbourg, France
Gilles GRIMAUD
Prof. Univ. Lille 1, France
Martine LIENARD
Prof. Univ. Lille 1, France
Laurent CLAVIER
Prof. IMT, Télécom Lille, France
Nathalie MITTON
DR Inria, France

iii
À la mémoire de mon grand-père.

v

“Oh so many wonderful discoveries the Enlightenment Spirit brings to us, together with the Experience — the child of hard mistakes, and the Genius — the friend of paradoxes, and the Chance — the Lord of inventions ”

A.S. Pushkin

vii
Remerciements
Tout d’abord, je voudrais remercier mes directeurs de thèse : Mme Nathalie MITTON et M. Laurent CLAVIER, pour leur encadrement durant ma thèse et mon stage de ﬁn d’études. Merci pour votre expérience que vous avez partagée avec moi, vos conseils et vos encouragements. Merci pour le temps que vous m’avez consacré.
J’ai eu la chance de travailler dans un environnement pluridisciplinaire des laboratoires IRCICA, Inria et IEMN. Je tiens à remercier tous les membres du groupe CSAM de l’IEMN et de l’équipe-projet FUN d’Inria qui étaient toujours prêts à m’aider, pour leur soutien et l’ambiance agréable de travail. Plus particulièrement je voudrais remercier Román IGUAL PEREZ pour son apport technique et théorique et pour une collaboration enrichissante qui a donné lieu à de très bons résultats. Je remercie également Arash MASKOOKI, Mohamed El Amine SEDDIK et Rahul VYAS pour leur contribution importante.
Je remercie vivement Roudy DAGHER, Abdoul Aziz MBACKE, Simon DUQUENNOY, Tahiry RAZAFINDRALAMBO, Cristina CANO et Valeria LOSCRI pour les échanges intéressants et leurs conseils.
J’adresse également mes remerciements à Rédha KASSI, Bernard VERBEKE, Julien VANDAELE et Lamine KONE pour leurs conseils techniques et la mise à disposition de matériel.
Je remercie aussi Anne REJL, Peggy STANKOWSKI, Nora BENBAHLOULI, Malika HABBAS, Ahmed BEN ABDESELAM et Michel SOULAGE qui m’ont aidé à résoudre des problèmes administratifs et logistiques.
Je voudrais également remercier mes collègues de l’Université de Stellenbosch en Afrique du Sud avec qui j’ai eu l’opportunité de travailler, notamment Dr. Riaan WOLHUTER, JP MEIJERS, SP LE ROUX, Sajid SHEIKH et Willie PRETORIUS.
Finalement, je voudrais exprimer ma gratitude à tous mes proches, ma famille et mes amis. Merci à Albina pour le support aux moments difﬁciles. Merci à ma mère, ma grand-mère, mon oncle, ma tante et mes cousins pour leur aide et les encouragements. Un grand merci à mon père et mon grandpère qui ont été des exemples pour moi et m’ont motivé à me lancer dans cette aventure scientiﬁque particulièrement enrichissante.

ix
Abstract
Title: Adaptive MAC layer for interference limited WSN
In the era of the Internet of Things (IoT), the number of connected devices is growing dramatically. Often, connected objects use Industrial, Scientiﬁc and Medical (ISM) radio bands for communication. These kind of bands are available without license, which facilitates development and implementation of new connected objects. However, it also leads to an increased level of interference in these bands. Interference not only negatively affect the Quality of Service, but also causes energy losses, which is especially unfavorable for the energy constrained Wireless Sensor Networks (WSN). In the present thesis the impact of the interference on the energy consumption of the WSN nodes is studied experimentally. The experimental results were used to estimate the lifetime of WSN nodes under conditions of different levels of interference. Then, a Thompson sampling based Cognitive Radio adaptive solution is proposed and evaluated via both, simulation and hardware implementation. Results show that this approach ﬁnds the best channel quicker than other state of the art solutions. An extension for multihop WSN was proposed for this Cognitive Radio solution and evaluated by hardware implementation in the framework of EWSN Dependability Competition. Finally, an adaptive WildMAC MAC layer protocol is proposed for the usecase of the LIRIMA PREDNET wildlife animal tracking project. Obtained ﬁeld range test data were used to theoretically estimate cell densities and deployment zone coverage in this Low Power Widea Area Network (LPWAN). Then performance of the protocol was evaluated in WSNet simulation. The results show performance that allows to respect PREDNET project requirements with the given coverage.

xi
Résumé
Titre: Couche MAC adaptative pour réseaux de capteurs limités par l’interférence
A l’époque de l’Internet des Objets, le nombre de dispositifs communicants ne cesse d’augmenter. Souvent, les objets connectés utilisent des bandes de fréquences « industriel, scientiﬁque et médical (ISM) » pour effectuer les communications. Ces bandes sont disponibles sans licence, ce qui facilite le développement et le déploiement de nouveaux objets connectés. Cependant, cela mène aussi au fait que le niveau d’interférences augmente dans les bandes ISM. Les interférences ont non seulement un impact négatif sur la qualité de service, mais aussi elles causent des pertes de messages couteuses en énergie, ce qui est particulièrement nocif pour les nœuds capteurs souvent limités en énergie. Dans cette thèse, l’impact des interférences sur la consommation énergétique des nœuds capteurs est étudié expérimentalement. Les résultats de ces expérimentations sont utilisés pour estimer la durée de vie des nœuds capteurs en fonction de différents niveaux d’interférence subis. Puis, un algorithme de Radio Cognitive basé sur la technique d’ échantillonnage de Thompson est proposé et évalué par la simulation et implémentation. Les résultats montrent que l’approche proposée trouve le meilleur canal plus vite que les autres techniques de l’état de l’art. De plus, une extension multi sauts est proposée pour cette technique de la Radio Cognitive. Cette extension est évaluée par expérimentation lors d’une compétition EWSN Dependability Competition. Finalement, le protocole adaptatif WildMAC est proposé pour le cas d’usage du projet LIRIMA PREDNET qui consiste à surveiller des animaux sauvages. Les résultats de tests de portée sur le terrain sont utilisés pour estimer théoriquement les densités des cellules du réseau ainsi que la couverture de ce réseau de type LPWAN. Puis, les performances sont évaluées par simulation avec le simulateur WSNet. Les résultats montrent que la solution proposée respecte les contraintes imposées par le projet PREDNET dans la zone ciblée.

xiii

Contents

Remerciements

vii

Abstract

ix

Résumé

xi

Contents

xiii

List of Figures

xvii

List of Tables

xxi

List of Abbreviations

xxiii

1 Global introduction

1

1.1 Context . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2

1.1.1 Internet of Things (IoT) . . . . . . . . . . . . . . . . . 2

1.1.2 Wireless Sensor Networks (WSN) . . . . . . . . . . . 4

1.1.3 Wireless Sensor Node structure . . . . . . . . . . . . . 6

1.1.4 Particularities of RF communications which can im-

pact the energy consumption . . . . . . . . . . . . . . 8

Interference . . . . . . . . . . . . . . . . . . . . . . . . 8

Collisions . . . . . . . . . . . . . . . . . . . . . . . . . 8

Fading . . . . . . . . . . . . . . . . . . . . . . . . . . . 8

Other factors . . . . . . . . . . . . . . . . . . . . . . . 9

1.2 WSN communication stack . . . . . . . . . . . . . . . . . . . 9

1.2.1 Physical layer . . . . . . . . . . . . . . . . . . . . . . . 10

1.2.2 Data Link Layer . . . . . . . . . . . . . . . . . . . . . . 11

1.2.3 Network Layer . . . . . . . . . . . . . . . . . . . . . . 11

1.2.4 Transport Layer . . . . . . . . . . . . . . . . . . . . . . 12

1.2.5 Applicatoin Layer . . . . . . . . . . . . . . . . . . . . 12

1.3 Particular WSN application usecase: LIRIMA PREDNET

project . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13

1.3.1 Functional requirements . . . . . . . . . . . . . . . . . 13

1.3.2 Other wildlife tracking projects . . . . . . . . . . . . . 14

1.4 LPWAN networks . . . . . . . . . . . . . . . . . . . . . . . . . 15

1.4.1 Sigfox . . . . . . . . . . . . . . . . . . . . . . . . . . . 16

1.4.2 Ingenu (ex. RPMA) . . . . . . . . . . . . . . . . . . . . 16

1.4.3 LoRa . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17

xiv

1.5 Contributions of this thesis . . . . . . . . . . . . . . . . . . . 18 1.6 Structure of the thesis . . . . . . . . . . . . . . . . . . . . . . . 19

2 Experimental study of interference impact on the energy con-

sumption in WSN

21

2.1 Chapter introduction . . . . . . . . . . . . . . . . . . . . . . . 21

2.2 Motivation and Related works . . . . . . . . . . . . . . . . . 22

2.3 Description of the platform . . . . . . . . . . . . . . . . . . . 24

2.4 Experimental setup . . . . . . . . . . . . . . . . . . . . . . . . 25

2.4.1 Ideal case scenario . . . . . . . . . . . . . . . . . . . . 27

2.4.2 Real case scenario . . . . . . . . . . . . . . . . . . . . . 28

2.5 Measurement results . . . . . . . . . . . . . . . . . . . . . . . 28

2.5.1 Measurement approach . . . . . . . . . . . . . . . . . 28

2.5.2 Ideal case . . . . . . . . . . . . . . . . . . . . . . . . . 30

2.5.3 Real case . . . . . . . . . . . . . . . . . . . . . . . . . . 32

2.5.4 Measurement analysis . . . . . . . . . . . . . . . . . . 32

TX side . . . . . . . . . . . . . . . . . . . . . . . . . . . 32

RX side . . . . . . . . . . . . . . . . . . . . . . . . . . . 34

2.5.5 Lifetime evaluation depending on RSSI . . . . . . . . 35

Ideal case . . . . . . . . . . . . . . . . . . . . . . . . . 35

Real case . . . . . . . . . . . . . . . . . . . . . . . . . . 37

2.5.6 Using Wi-Fi as a interfering network . . . . . . . . . . 39

2.6 Long term distributed interference measurements . . . . . . 41

Description of the platform . . . . . . . . . . . . . . . 41

Experimental setup . . . . . . . . . . . . . . . . . . . . 42

Results . . . . . . . . . . . . . . . . . . . . . . . . . . . 43

2.6.1 Discussion . . . . . . . . . . . . . . . . . . . . . . . . . 45

2.7 Chapter conclusion . . . . . . . . . . . . . . . . . . . . . . . . 47

3 Thompson Sampling based Cognitive ratio solution for Multihop

WSN

49

3.1 Chapter introduction . . . . . . . . . . . . . . . . . . . . . . . 49

3.2 Related works . . . . . . . . . . . . . . . . . . . . . . . . . . . 54

3.3 Optimal Algorithms for Multi-Armed Bandit . . . . . . . . . 56

3.3.1 Channel selection modeling . . . . . . . . . . . . . . . 56

3.3.2 Adaptation of UCB approach . . . . . . . . . . . . . . 57

3.3.3 Adaptation of -greedy . . . . . . . . . . . . . . . . . . 59

3.4 Thompson Sampling Based Learning Algorithm . . . . . . . 61

3.5 Performance evaluation . . . . . . . . . . . . . . . . . . . . . 64

3.5.1 Simulation based on generated channel samples . . . 64

3.5.2 Simulation over the real channel measurements . . . 65

3.5.3 Experimentation via real WSN hardware implemen-

tation . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66

3.5.4 Evaluation results . . . . . . . . . . . . . . . . . . . . . 68

xv

3.6 Multihop extension . . . . . . . . . . . . . . . . . . . . . . . . 70 3.6.1 Test application scenario: EWSN 2016 dependability competition . . . . . . . . . . . . . . . . . . . . . . . . 70 3.6.2 Proposed multihop solution based on Thompson sampling approach . . . . . . . . . . . . . . . . . . . . 73 3.6.3 Performance evaluation results and discussion . . . . 75
3.7 Chapter conclusion . . . . . . . . . . . . . . . . . . . . . . . . 75

4 Distributed adaptive MAC protocol for WSN-based wildlife pro-

tection

77

4.1 Chapter introduction . . . . . . . . . . . . . . . . . . . . . . . 77

4.1.1 Existing MAC protocols . . . . . . . . . . . . . . . . . 79

4.2 Our contribution : the WildMAC protocol . . . . . . . . . . . 80

4.2.1 General Time division structure . . . . . . . . . . . . 81

4.2.2 Timeslot structure . . . . . . . . . . . . . . . . . . . . 82

Control part . . . . . . . . . . . . . . . . . . . . . . . . 82

First and Second TX/RX parts . . . . . . . . . . . . . 86

4.2.3 Multichannel operation structure . . . . . . . . . . . . 86

4.2.4 Timeslot reservation and channel access . . . . . . . . 88

4.2.5 Communication example . . . . . . . . . . . . . . . . 92

4.3 Performance evaluation . . . . . . . . . . . . . . . . . . . . . 93

4.3.1 Chosen LoRa communication parameters . . . . . . . 93

4.3.2 Range test and coverage simulation . . . . . . . . . . 93

Range test . . . . . . . . . . . . . . . . . . . . . . . . . 93

Coverage simulation . . . . . . . . . . . . . . . . . . . 95

Obtained results . . . . . . . . . . . . . . . . . . . . . 95

4.3.3 Cell capacity estimation . . . . . . . . . . . . . . . . . 96

4.3.4 Kruger park coverage estimation . . . . . . . . . . . . 98

4.3.5 WSNet implementation and simulation results . . . . 98

One hop scenario . . . . . . . . . . . . . . . . . . . . . 99

Multihop scenario . . . . . . . . . . . . . . . . . . . . 100

4.4 Chapter conclusion . . . . . . . . . . . . . . . . . . . . . . . . 105

5 Conclusions and perspectives

107

5.1 Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . . . . 107

5.2 Impact of the thesis . . . . . . . . . . . . . . . . . . . . . . . . 109

5.3 Perspectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109

Bibliography

111

List of Publications

123

xvii
List of Figures
1.1 Examples of the licence-free bands in the world . . . . . . . . 2 1.2 WSN architecture. . . . . . . . . . . . . . . . . . . . . . . . . . 4 1.3 WSN node structure. . . . . . . . . . . . . . . . . . . . . . . . 6 1.4 WSN communication stack. . . . . . . . . . . . . . . . . . . . 10
2.1 Example of currents of CC2420 radio module (red curve) and MSP430 micro controller (blue curve) measured by Synergie platform. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22
2.2 Elements of the measurement platform. . . . . . . . . . . . . 24 2.3 Connection between the WSN430 node and Synergie platform 25 2.4 Scenarios of the experiment: a) in anechoic chamber, b) in
ofﬁce-type lab environment. . . . . . . . . . . . . . . . . . . . 26 2.5 Example of a successful X-MAC transmission. . . . . . . . . 27 2.6 Examples of combinations of type packets TX-RX. . . . . . . 30 2.7 Energy consumption vs RSSI per packet type in ideal case. . . . . 31 2.8 Energy consumption vs RSSI per packet type in real case. . . . . . 33 2.9 Avg. energy, total number of packets and total energy per packet
type on TX side. . . . . . . . . . . . . . . . . . . . . . . . . . . . 34 2.10 Energy statistics per type of packet on RX side: average en-
ergy, number of packets and total energy consumption. Ideal case. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35 2.11 Packet distribution per RSSI window on TX - Ideal case. . . . . . 36 2.12 Packet distribution per RSSI window on TX - Real case. . . . . . . 38 2.13 Energy consumption vs RSSI per packet type (Wi-Fi scenario). . . 40 2.14 End node . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42 2.15 IEEE 802.15.4 and IEEE 802.11 channels allocation in 2.4 GHz ISM band. Credits: NI . . . . . . . . . . . . . . . . . . . . . . 42 2.16 Node placement map . . . . . . . . . . . . . . . . . . . . . . . 43 2.17 One week interference measurement. . . . . . . . . . . . . . 43 2.18 Evolution of the percepted level of interference depending the used channel (IRCICA TELECOM Lab) . . . . . . . . . . . . . . 45 2.19 Evolution of the percepted level of interference depending the used channel (FIT IoT-LAB) . . . . . . . . . . . . . . . . . . . . 46
3.1 Dynamic spectrum access . . . . . . . . . . . . . . . . . . . . 50 3.2 A sample from one week interference measurements. The
node is situated in the middle of the lab. . . . . . . . . . . . . 54

xviii
3.3 Relative throughput comparison of different algorithms on 10 accessible channels (µ = 0.80). Oracle (The user that knows the best channel from the beginning) has relative throughput 1. . . . . . . . . . . . . . . . . . . . . . . . . . . . 65
3.4 Schematic of experiment setup. . . . . . . . . . . . . . . . . . 66 3.5 Spectrum measurements: a) No user activity. b) One user
browsing the web. c) One user downloading a large ﬁle. . . 67 3.6 Experimental setup: 3 pairs of laptops occupy 3 orthogonal
channels of Wi-Fi (1, 6, 11) . . . . . . . . . . . . . . . . . . . . 68 3.7 Relative throughput on three accessible channels using a)
Synthetically generated channel observations. b) Real-time measurements c) Empirical real-time test-bed. . . . . . . . . 69 3.8 Dependability competition scenario description. Credits: Carlo Alberto Boano . . . . . . . . . . . . . . . . . . . . . . . 71 3.9 TelosB node connected to the control platform. Credits: Carlo Alberto Boano . . . . . . . . . . . . . . . . . . . . . . . 72 3.10 Experimental area map at the Institute for Technical Informatics of the Graz University of Technology. The source and the sink nodes are represented by dark blue stars, whereas the intermediate nodes are represented as blue spots. Credits: Carlo Alberto Boano . . . . . . . . . . . . . . . . . . . . . 72 3.11 Proposed Multihop solution . . . . . . . . . . . . . . . . . . . 74
4.1 Slotted Aloha based algorithm with reservation. Global ﬂowchart . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82
4.2 General Timeslot structure . . . . . . . . . . . . . . . . . . . . 83 4.3 An example of rank discovery process . . . . . . . . . . . . . 84 4.4 Inter-layer interference. . . . . . . . . . . . . . . . . . . . . . . 86 4.5 Inter-rank frequency division structure . . . . . . . . . . . . 87 4.6 Combination of Time/frequency division techniques . . . . 88 4.7 Opposite time-division structure . . . . . . . . . . . . . . . . 89 4.8 Inter-rank frequency division structure with hopping . . . . 90 4.9 Long term timeslot reservation for Rank 1 nodes . . . . . . . 90 4.10 One-time on-demand timeslot reservation for Rank 1 nodes 91 4.11 Inter-rank frequency division structure with hopping . . . . 92 4.12 Fixed receiver side node . . . . . . . . . . . . . . . . . . . . . 94 4.13 Coverage map . . . . . . . . . . . . . . . . . . . . . . . . . . . 96 4.14 Example of rhinoceros distribution in a 13 km cell . . . . . . 97 4.15 Estimated coverage in the Kruger Park . . . . . . . . . . . . . 98 4.16 Number of reservation successes versus number of occupied
timeslots . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 99 4.17 PER versus number of occupied timeslots . . . . . . . . . . . 100 4.18 Example of rhinoceros distribution with reduced densities
for higher ranks . . . . . . . . . . . . . . . . . . . . . . . . . . 101

xix
4.19 Probability of the reception of a message before the expiration of a given number of superframes. Initial rank: a) 1 b) 2 c) 3 d) 4 e) 5. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103

xxi
List of Tables
1.1 Examples of ISM bands . . . . . . . . . . . . . . . . . . . . . . . 1 2.1 Number of transmissions per packet sent by TX and of received
duplicated packets on RX. . . . . . . . . . . . . . . . . . . . . . 28 2.2 Avg. energy, maximum number of transmitted packets and life-
time of the node per RSSI window - Ideal case. . . . . . . . . . . 37 2.3 Avg. energy, maximum number of transmitted packets and life-
time of the node per RSSI window - Real case. . . . . . . . . . . . 39 2.4 Results of energy, number of packets and total energy per
type of packet on TX side. Real case. . . . . . . . . . . . . . . 41 3.1 Evaluation results in multihop scenario . . . . . . . . . . . . . . 75 4.1 PER per rank . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102 4.2 Average number of physical transmissions per rank . . . . . . . . 104 4.3 Percentage of nodes estimated their rank as R per per zone of min-
imal transmissions. The used format is mean(SD); The values are given in % . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104

xxiii

List of Abbreviations

ACK ADC AP BTS BW CAD CCA CR CRC CRSN CR-WSN CSMA CSS CTF CTS DBPSK DSSS FEC FFT FHSS GNSS GPIO GPS GSM IEEE IoT ISM ITM LLC LPWAN LQI LTE MAC MCU NACK NB-IoT NIC

Acknowledgment Analog-to-Digital Converter Access Point Base Transceiver Station Bandwidth Channel Activity Detection Clear Channel Assessment Cognitive Radio Cyclic Redundancy Check Cognitive Radio Sensor Networks Cognitive Radio Wireless Sensor Networks Carrier Sence Multiple Access Chirp Spread Spectrum Clear To Forward Clear To Send Differential Binary Phase Shift Keying Direct Sequence Spread Spectrum Forward Error Correction Fast Fourier Transform Frequency Hopping Spread Spectrum General Purpose Input/Output General Purpose Input/Output Global Positioning System Global System for Mobile Communications Institute of Electrical and Electronics Engineers Internet of Things Industrial, Scientiﬁc and Medical Irregular Terrain Model Logical Link Control Low-Power Wide-Area Network Link Quality Indicator Long Term Evolution Medium Access Control Microcontroller Unit Negative Acknowledgment Narrowband IoT Network Interface Cards

xxiv

OFDM OS PER PN PPP PV QoS RDC RF RSSI RTF RTS RX SF SFD SFr SN SOC SSID TS TSCH TTL TX UCB UNB UWB Wi-Fi WSN

Orthogonal Frequency-Division Multiplexing Operating System Packet Error Rate Pseudo-Noise Poisson Point Process Photovoltaic Quality of Service Radio Duty Cycle Radio Frequency Received Signal Strength Indicator Request To Forward Request To Send Receiver Spreading Factor Start Frame Delimiter Superframe Sensor Network State Of Charge Service Set IDentiﬁer Timeslot Timeslotted Channel Hopping Time To Live Transmitter Upper Conﬁdence Bound Ultra Narrow Band Ultra Wide Band Wireless Fidelity Wireless Sensor Network

1

Chapter 1
Global introduction

Today, in the era of the Internet of Things (IoT), the number of connected objects increases dramatically [44, 43]. Wireless Sensor Networks (WSN) constitute a signiﬁcant part of the IoT. In general, this kind of networks uses the Industrial, Scientiﬁc and Medical (ISM) radio bands to transmit data. These bands are license-free, but, on the other hand, a lot of devices and different technologies share the same frequency band. Moveover, some license based spectrum technologies could also be interested to use ISM bands (e.g., LTE-U [20]). This makes the electromagnetic interference an important issue. Some ISM bands deﬁned by ITU-R [67] are presented in Table 1.1. As we can notice from the table, the large part of the spectrum is available in the millimeter-wave bands (especially starting from 24 GHz). These bands represent an important interest for both, academia and industry [94],[62]. However, these bands are more suitable for high-speed, short-range point to point communications, which is different form the context of the WSN. On the other part of the ISM spectrum, some low frequency bands are available. However, the bandwidth of this bands is about a few kHz, which makes questionable the possibility to use them to accommodate billions of connected devices.
It is important to note that not all the license-free bands are available worldwide. Some examples of license-free bands available indifferent countries are presented in Figure 1.1.

TABLE 1.1: Examples of ISM bands

Frequency range 6,765 - 6,795 MHz 13,553 - 13,567 MHz 26.957 - 27.283 MHz 40.66 - 40.7 MHz 433.05 - 434.79 MHz 902 - 928 MHz 2.4 - 2.5 GHz 5.725 - 5.875 GHz 24 - 24.25 GHz 61 - 61.5 GHz 122 - 123 GHz 244 - 246 GHz

Center frequency 6.78 MHz 13.56 MHz 27.12 MHz 40.68 MHz 433.92 MHz 915 MHz 2.45 GHz 5.8 GHz 24.125 GHz 61.25 GHz 122.5 GHz 245 GHz

Bandwidth 30 kHz 14 kHz 326 kHz 40 kHz 1.84 MHz 26 MHz 100 MHz 150 MHz 250 MHz 500 MHz 1 GHz 2 GHz

2

Chapter 1. Global introduction

FIGURE 1.1: Examples of the licence-free bands in the world
The worldwide available 2.4 GHz band is one of the license-free bands used in WSNs. However, this band became crowded [112]. Sub-GHz bands also represent an interest for IoT, especially with the arrival of Low Power Wide Range networks (LPWAN). However, these bands have a bandwidth of a few MHz, thus they can be overﬁlled soon.
The growing number of connected devices on one hand and the lack of available license-free spectrum on the other hand make the electromagnetic interference an important issue for IoT. The access to the medium in the license-free spectrum and successful data transmissions will be hard to achieve, which will decrease the performance of ﬁnal applications and even block the further development of IoT. The development of an adaptable communication solution is, thus, required in order to optimize the performance of IoT solutions under growing interference conditions.
In this thesis we develop a Medium Access Control (MAC) protocol for a speciﬁc usecase of Wireless Sensor Networks (WSN) - wildlife animal tracking. More in details the context of this thesis and our particular usecase are described in the following sections.
1.1 Context
1.1.1 Internet of Things (IoT)
With the constantly growing number of connected devices [44], the Internet of Things (IoT), an actively developing telecommunication paradigm, has gained an important interest in both, academia and industry. This term was used for the ﬁrst time by K. Ashton in the title of its presentation in 1999

1.1. Context

3

[10]. Since then, multiple deﬁnitions could be found in the literature. In [10] the following deﬁnition is proposed: " The Internet of Things allows people and things to be connected Anytime, Anyplace with Anything and Anyone, ideally using Any path/network and Any service" which emphasizes the widespread character of this paradigm.
The IoT covers different ﬁelds of applications[81], [50], among others:
• healthcare,
• home automation,
• smart city,
• smart agriculture,
• smart environment,
• industrial control,
• emergency management.
IoT incorporates different technologies, e.g. sensor hardware and ﬁrmware, communication technologies, cloud, data processing [81] in order to collect and consume data from billions of sensors all over the world. IoT could be considered as a next step of the evolution of Sensor Networks (SN) along with the fusion with other ﬁelds of study, especially related to data analysis. According to the forecast of HP, the number of sensors can reach one trillion by 2030 and then, the data generated by IoT will represent the most important part of Big Data [25]. Indeed, in this case the IoT data will possess the three main characteristics of Big Data (the "3V"):
• Volume, due to huge number of sensor nodes;
• Velocity, because of increasing sampling rates and improvement of other characteristics of sensing devices;
• Variety, due to a large spectrum of possible parameters to measure.
In its report, Intel conﬁrms that Big Data in IoT has three features conforming to the Big Data paradigm (see [25] for details):
• abundant terminals generating masses of data;
• data generated by IoT is usually semi-structured or unstructured;
• data of IoT are useful only when they are analyzed.
The authors of [25] deﬁne the following three layers in a process of data acquisition in IoT:
• sensing layer, responsible for measurements of different values,

4

Chapter 1. Global introduction

• network layer, which aims to ensure the delivery of measured values from sensors to the data consumption unit (storage and treatment unit),
• application layer, where the data are ﬁnally used.
The ﬁrst two layers rely on SNs, which represent an essential component of IoT [81]. Indeed, SNs provide majority of hardware infrastructure for IoT and ensure data collection. As most of the sensors deployed today are wireless, this work is focused on Wireless Sensor Networks (WSN). This concept is described in the next section.
1.1.2 Wireless Sensor Networks (WSN)
WSNs consist of a large amount of tiny sensor nodes, which act as both data generators and network relays [5]. WSNs are mostly developed for speciﬁc application purposes in contrary to IoT which can be explained as a general purpose sensor network [81]. The architecture of a WSN is presented in the Figure 1.2.

FIGURE 1.2: WSN architecture.
Sensor nodes are distributed in random or planned way over the target area called a sensor ﬁeld. Depending on the application, sensor ﬁeld could be presented as a geographic zone, a structure (e.g. building), a human or animal body etc. Then, speciﬁc parameters in the sensor ﬁeld are monitored by the WSN. Data could be generated by sensor nodes regularly, on demand or trigerred by an event [22], as, for example, a detected ﬁre. Measured values

1.1. Context

5

are forwarded towards a collecting unit called sink which can also perform a function of gateway between WSN and another network, e.g. the Internet. The role of the sink node is to transmit the collected data from a WSN to the user or processing unit (e.g. cloud). A sink node is also in charge of sending commands from user to nodes. For example, in some cases, WSN can contain nodes with actuators, which can be controlled by commands from the sink. Depending on the WSN topology, data from sensor nodes are sent either directly (one-hop networks) or by passing through other sensor nodes (multihop networks). Based on the communication technology used in a WSN, different network topologies are possible. The most frequently used network topologies are:
• Mesh topology (e.g, ZigBee [46])
• Tree topology (e.g, RPL [18])
• Star topology (e.g, Sigfox[92])
In the two former cases, each node can perform the functions of a router and is able to forward messages from other nodes. In this situation, short range Radio Frequency (RF) technologies are often used (e.g. IEEE 802.15.4). To maintain this kind of topologies, self-organizing capabilities of the sensor nodes are required. Indeed, in case of failure of an intermediate node, the routing path must be modiﬁed in order to guarantee the continuity of WSN service. To do so, complex routing algorithms are used. With the arrival of Low Power Wide Area Networks (LPWAN) (e.g., Sigfox[92], LoRa[76]) providing long range communications, a new trend in modern WSN is to shift to the star topology. In this case, it is supposed that the entire sensor ﬁeld is in range of a sink node, which could be called base station. Sensor nodes can, thus, transmit the data directly to the base station and save energy since the nodes do not have to receive and forward packets from other nodes. However, a full coverage of the sensor ﬁeld is not always possible.
Depending on the application, sensor nodes can be mobile or static [86]. The sink node is often considered as static, however, in some applications, the sink node can be also mobile [70].
From hardware and software point of view, WSNs can be homogeneous or heterogeneous. In the ﬁrst case, sensor nodes are based on an identical hardware/software platform and, thus, have identical resources. In the second case, some nodes have extended resources (e.g. multiple radios, extended storage capacity). In most of the cases, sensor nodes have identical resources whereas a sink node is based on more advanced platforms.
In many cases, Wireless Sensor nodes have very constrained resources in terms of memory, processing capacity and energy. On one hand, this is because of the need to keep the production cost as minimal as possible in order to be able to deploy billions of nodes. On the other hand, it can be due to

6

Chapter 1. Global introduction

the speciﬁc application restrictions. Available energy represents one of the most important resource limitations for WSN nodes. Indeed, the majority of sensor nodes are battery-powered. At the same time, some applications as, for example, wildlife animal tracking, impose strict limitations on size and weight of wearable nodes, which means limited battery capacity. Besides, access to the nodes can be restrained after installation (e.g. the sensor nodes are embedded in the wall of building, installed on the body of a bird or randomly distributed by being dropped off a plane over a woodland). Moreover, as mentioned before, a WSN can be composed of a large number of nodes. So, battery replacement represents a hard if not impossible task. Thus, the lifetime of the WSN node is often deﬁned by the lifetime of one battery charge. That is why it is crucial to avoid the energy waste and optimize the energy consumption within each sensor node in order to extend its lifetime and, thus, the lifetime of the whole WSN. For some applications, the required lifetime of WSN must exceed 10 years, which emphasizes the importance of the research aiming to ﬁnd the main reasons of energy losses and develop techniques to outcome them and extend the lifetime.
1.1.3 Wireless Sensor Node structure
The simpliﬁed structure of a wireless sensor node is presented on Figure 1.3
~mW

Power Supply

Radio

Sensors

Intelligence

~100 μW

~μW

FIGURE 1.3: WSN node structure.

A sensor node contains 4 main blocks:

• Sensors: this block comprises different sensors required to perform measurements in the sensor ﬁeld. The type of sensors depends on the application of the WSN. This part of the sensor node is in charge of

1.1. Context

7

generating data. Depending on the type of the sensor, the energy consumption of this part is about hundreds of microwatts. Some examples of sensors are: temperature sensor, humidity sensor, accelerometer.
• Radio module: this block is required in order to send measured values and receive control messages. The energy consumption of this component depends on the used RF module and is about a few milliwatts.
• Computational part of the node (intelligence): usually represented by a microcontroller (MCU) and a memory. This component is required to control all other parts of the node. The MCU ensures that measurements are carried out and transmitted at the right moments. It also executes Medium Access Control (MAC) and routing algorithms by using the internal service information as, for example, the feedback from RF module (e.g. Received Signal Strength Indicator (RSSI), number of unsuccessful transmissions) or a current State Of Charge (SOC). In some cases this part of the node comprises also a ﬂash memory to store the measured values to be sent later. The energy consumption of a MCU could be about few microwatts1.
• Power Supply: this part is in charge of providing the electric energy required to power all other components of the node. It is composed by two kinds of elements: energy storage devices (microbattery, supercapacitor) and energy harvesting devices (Photovoltaic (PV) cells [106], vibration energy harvesting devices [98] etc.). The energy harvesting devices are optional since they increase the cost of production of the sensor nodes and often cannot provide enough energy to let the node function without battery. So, the battery is still the most used energy supply unit.
In some cases, nodes can be connected directly to the power line. However, even though it removes the energy constraint, in this case the list of possible applications is signiﬁcantly reduced.

As we can notice, among all the parts of a WSN node, RF module represents the greatest energy consumption. Since the nodes are often batterypowered, it is important to develop an efﬁcient control strategy, which will adjust the behavior of the RF module in order to avoid possible important energy waists. Many factors related to RF communications which can have a pernicious effect on the nodes lifetime have to be taken into account. These factors are described in Section 1.1.4.
1The values of the energy consumption can vary depending on the hardware components used.

8

Chapter 1. Global introduction

1.1.4 Particularities of RF communications which can impact the energy consumption
In this subsection we present different factors of radio communication which can impact the energy consumption of the nodes. These factors must be considered to design low power WSNs.

Interference
As it was mentioned before, WSN often use ISM bands. These bands are shared between different radio technologies and the number of devices which use these bands is increasing. The signals of different technologies are incompatible, but have a pernicious impact on each other. Interfering signals can lead to the reception of corrupted packets. In many cases, corrupted packets have to be retransmitted, and each retransmission is a waste of energy.

Collisions
Wireless nodes share the same medium - radio channel. That means the possibility of collisions - simultaneous transmissions carried out by multiple nodes. When a collision happens, there is a big chance that all the messages involved in the collision are lost and, thus, transmitted again2. Each retransmission causes energy losses.

Fading
In real environments different objects and structures surrounding deployed WSN nodes (e.g., trees, walls, mountains), lead to signal reﬂections. Fading is caused by interference between multiple versions of the transmitted signal (i.e., main signal path and its reﬂections) arrived at the receiver at slightly different times. These signals (called multipath waves) are combined at the receiver antenna which can lead to the important variations of the detected resulting signal both in amplitude and phase. These variations can cause packet corruption.
In this thesis we focus on these three described above factors. All of them are the examples of the interference in general but with different sources (other RF technologies, other WSN nodes using the same RF technology and reﬂected signals respectively).
We studied experimentally the impact of the interference on the energy consumption of the WSN nodes and we proposed adaptable MAC layer techniques allowing the decrease of the impact of the interference on the WSN communications.
2Depending on the application functional requirements.

1.2. WSN communication stack

9

There are also other factors of the RF communications which can lead to the energy waste. These factors will not be studied in this thesis.
Other factors
Idle Listening. Usually, Wireless Sensor nodes spend most of the time in sleep mode in order to save energy [22]. In this mode the radio module is turned off and, thus is unable to receive any messages. In case of a multihop network, sensor nodes are in general unaware of the Radio Duty Cycle (RDC) schedules of surrounding nodes. If the transmitter node switches its radio on for a long time in order to determine whether desirable receiver node is active, an important amount of energy will be wasted. The same situation is valid for the receiver node, when it switches its radio on to check whether there is a possible transmission for this node.
Overhearing. A wireless sensor node has to receive a packet ﬁrst in order to determine, whether it is a destination node for the packet or not. To receive the packet, the node has to demodulate and decode packet data, then it performs a Cyclic Redundancy Check (CRC) in order to check the integrity of the message. If the packet is not corrupted, the node compares the value of the destination address ﬁeld of the packet with its own address. In case of a match, the node accepts the packet for the following processing. Otherwise, the packet is dropped. In case of a multihop network, nodes are likely to receive packets destined to other nodes, which means that many packets will be dropped after decoding, and, thus, energy will be wasted.
Protocol overhead. The energy is consumed during the transmission of each bit of data, including control and management packets and headers. This type of data is not useful for the ﬁnal user of the WSN. However, these data are important to ensure the communication in the WSN. It is important, then, to reduce as much as possible the amount of control and management data transmitted within the WSN, but without performance degradation of the communication process.

1.2 WSN communication stack
A simpliﬁed version of the communication stack used in WSN, proposed in [5] is depicted in Figure 1.4
The behavior of the sensor node could be adjusted in each layer in order to reduce the impact of the interference. As in case of a ISO/OSI model[114], each layer of the WSN communication stack is responsible of speciﬁc limited missions. Moreover, each layer has some parameters which can be adjusted and can provide some feedback values that can be used by

10

Chapter 1. Global introduction

Application Layer
Transport Layer
Network Layer
Data Link Layer
Physical Layer
FIGURE 1.4: WSN communication stack. other layers. These missions, adjustable parameters and possible feedback values will be described below for each layer.
1.2.1 Physical layer
The Physical layer deﬁnes how the message will be transmitted over the wireless medium, which includes, for example, modulation techniques, frequency selection and signal detection. Some examples of possible adjustable parameters are:
• Channel number (center frequency), • Modulation, • Transmission bitrate, • Transmission power. Some examples of feedback values which can be provided by the Physical layer are: • RSSI, • Result of the CRC check, • Link Quality Indicator (LQI)[63].

1.2. WSN communication stack

11

As the Physical Layer activity is carried out by the radio chip, available adjustable options and feedback values depend on the hardware used.
1.2.2 Data Link Layer
Data Link layer is responsible for transmission control between neighboring nodes. This layer contains two sublayers: Logical Link Control (LLC) layer and Medium Access Control (MAC) layer. The LLC layer is in charge of the multiplexing of datastreams and providing an interface to upper layers. The MAC layer is responsible for the communication link establishment between two neighboring nodes and medium sharing rules. Another important task for MAC layer is Radio Duty Cycle (RDC) control. MAC protocol decides, when to switch the transceiver off in order to save the energy, and on to ensure communications.
Examples of adjustable parameters in the Data Link Layer are:
• Maximum number of retransmissions, • Energy detection threshold to determine whether the channel is busy, • RDC parameters (active/sleep duration).
Some examples of feedback values available at the Data Link layer are:
• Number of performed transmissions before success/failure, • Success/failure of connection establishment, • Failure caused by upper layer (NACK message)[63]
The functionality of the Data Link layer can be performed fully or partially by the RF module, or totally by the MCU.
1.2.3 Network Layer
The network layer is in charge of the construction of a route for a packet which has to pass through a multihop network. Routing algorithms on the Network Layer choose a next hop node by using a speciﬁc metric. Some examples of the parameters available in the Network Layer are:
• Maximum number of hops authorized, • Period of sending for control messages.
Examples of feedback values available at the Network layer are:
• Distance to the Sink node in number of hops, • Number of active neighbors.

12

Chapter 1. Global introduction

In one-hop LPWAN networks, the routing functionalities are in general not used since all nodes are supposed to be able to communicate directly with a Sink. It can help to facilitate the development of node’s ﬁrmware and save energy since RDC management is simpliﬁed. However, disabling of multihop capabilities negatively affects robustness of the system. Indeed, if for some reason a LPWAN sensor node is out of range (e.g., a metallic obstacle is placed close to the node), all the messages from this node will be lost.
In multihop networks, Network Layer protocols can help to avoid interfered zones by choosing a proper next hop node. It is possible also to minimize the number of hops in order to decrease the probability of loosing packets in intermediate transmissions.
1.2.4 Transport Layer
Two main functionalities of the Transport Layer in WSN are reliability and congestion control. However, in contrary to computer networks, the nodes of a WSN are very constrained in terms of resources and energy consumption. Thus, the functionalities of this layer are often shifted to lower layers.
An example of an adjustable parameter of the Transport Layer is the maximum buffer size and as a feedback value - the current buffer length.
Congestion control is important in multihop networks. Indeed, for some applications, packets lost because of the overﬂowed node’s buffer will be retransmitted, which will increase the medium load and interference level in the WSN.
1.2.5 Applicatoin Layer
The Application Layer ensures the functionalities of the application of the WSN. Application layer solutions provide data for the ﬁnal user. The application layer data is a payload to be sent through the network to the Sink.
Possible adjustable parameters in the Application Layer are related to the speciﬁc application and its functional requirements and can include:
• Data generation period,
• Data sampling rate,
• Data resolution for each sample,
• Data compression strategy.
Possible feedback values at the Application Layer can be related to the Quality of Service (QoS) (e.g delay, data losses).
The described adjustable parameters from all the layers can be controlled together in a coordinated way. In this case, the controlling algorithm

1.3. Particular WSN application usecase: LIRIMA PREDNET project 13
will use the feedback values from all the layers as an input, and then tweak the adjustable parameters of each layer. It is the basis of Cross-layer solutions[90].
This thesis is mostly focused on lower layers of communication stack (Physical and MAC). However, in Chapter 4, a communication protocol which implements some cross-layer functionalities for a real application of WSN will be proposed.
1.3 Particular WSN application usecase: LIRIMA PREDNET project
The Inria FUN3 team of Inria Lille is collaborating with Stellenbosch University in South Africa in the framework of the project LIRIMA PREDNET4. The aim of the project is to develop a Wireless Sensor Network (WSN) that is able to operate in sparsely populated outlying rural and wilderness areas, for efﬁcient monitoring and protection of resources and ecosystems. One case of application of the PREDNET WSN is related to the rhinoceros tracking and protection. These animals become more and more often victims of poaching because of their horns [27, 95]. In the present moment about 9000 rhinoceros live in the southern part of the Kruger Park (the habitat area is about 5000 square km ) - the potential zone of implementation of the system. Thus, the current average density of rhinoceros in Kruger Park is about 1.7 animals per square kilometer.
The WSN should help ﬁnal user (biologists, zoologists) to regularly gather information about every animal of targeted specie (e.g. position, heart rate, acceleration data...) within the zone of monitoring (normal mode). Moreover, the WSN has to deliver the urgent alarm messages from animals in danger (alarm mode).
1.3.1 Functional requirements
South African specialists have established the following key requirements for the animal tracking system in order to ﬁt the application needs and make it efﬁcient:
• The data provided by different sensors (GPS, pulse oxymeter, accelerometer ...) must be sent at least every 15 minutes. Data are gathered at different rates (depending on the sensor type) between transmissions.
• The WSN must be operational in the entire southern part of the Kruger Park where most of the rhino population lives.
3Self-Organizing Future Ubiquitous Networks, https://team.inria.fr/fun/fr/ 4PREDator adhoc NETwork, https://iww.inria.fr/prednet/en/

14

Chapter 1. Global introduction

• Weight of wearable device should not exceed 500 grams.
• Battery life must be guaranteed during several years.
• The robustness of communications must be guaranteed (especially for the alarm mode).
• While latency for the normal mode is not critical, the delivery time for an urgent alarm message must not exceed 1 minute.
1.3.2 Other wildlife tracking projects
Other wildlife tracking projects are described in literature. Even though the ﬁnal aim of these projects is similar to the PREDNET project, there are several differences in the concept.
For example, ZebraNet project[70] aims to track wild animals in central Kenya. Nevertheless the project focuses mainly on zebras, the developed network could be applied for different kind of animals. The authors emphasis the fully mobile nature of the sensor network developed within the project. Not only end nodes (devices, carrying by zebras), but also base stations (the data sinks) are considered mobile. The challenge of this solution is the unknown time of the BTS availability. It is supposed that the base station can arrive close to the animals between noon and midnight. The nodes, thus have to search for a BTS during long time which is energy consuming. Moreover, that introduces huge delays in data collection (at least 12 hours). These factors make this solution unsuitable to meet the requirements of the PREDNET project (see the Section 1.3.1). This fact also makes ZebraNet solution unsuitable for urgent mode operation. Moreover, the weight of the equipment, carried by zebras was about 1.1 kg, which is also too high in PREDNET project.
In [30] an ultra low power WSN for tracking bats in the wild is proposed. Small size of the bats strictly limits acceptable maximum weight of the carried nodes to 2 grams including battery. Small battery size limits the amount of available energy in the node. To meet the energy limitations and lower the energy consumption of the nodes, a low power wake-up receiver is integrated in the carried by the bats devices. The collected data are sent to the ground base station when a bat carrying the node ﬂies close enough to this latter. When it happens, the wake-up signal (which is sent periodically by the base station) is received by the low power receiver in order to activate the main transmitter and send the data. Small communication rage with ground stations (about 50 m) leads to spontaneous communications in the system. Relatively high mobility of the bats along with small monitoring area (comparatively to the Kruger park) make the communication opportunity happens often. However, as it will be shown in Section 4.3.4, impossibility to cover all the habitat area in the Kruger park and relatively

1.4. LPWAN networks

15

low mobility of rhinoceros will cause high delays for message transmissions, which is unacceptable for the alarm messages in the framework of the PREDNET project.
Similar application for ﬂying foxes (fruit bats) is described in [96]. The authors propose a 3-tier system containing mobile nodes installed on the animals, gateways and cloud service. In this case, the multihop communications are not provided which, as we will show in Chapter 4, makes impossible rapid delivery of alarm messages from uncovered by gateway zones. However, authors propose to adapt the behavior of the nodes depending on the current state of charge which can evolve due to both, energy consumption and energy harvesting. This option can be useful in the framework of PREDNET project.
In [103] an inverse-GPS tracking system for birds and small mammals is proposed. The system allows localizing effectively the animals within large areas. However, the project is not focused on data collecting and transmissions, which is required by the PREDNET project. Moreover, redundant coverage of the area is required in the proposed system, which, as we will show, is not always possible in the Kruger park.
Another project proposes a solution to monitor migrating whooping cranes[8]. This solution uses less sensors and has less strict constraints in terms of delivery period (it has to be less than 24 hours, which is much bigger than 15 minutes required in PREDNET project). The size limitations are also different due to the difference of sizes of animals. Also, in this project the authors propose to use GSM cellular technology with another short range 802.15.4 radio to send the data. These solutions are not suitable for PREDNET project due to the short range of 802.15.4 technology and high power consumption of GSM. Moreover, GSM does not allow to manually adjust the communication parameters. The problem of GSM for PREDNET project is related also to not full coverage of Kruger park zone by cellular networks.
Some wildlife animal tracking solutions are based on the satellite technologies (e.g., Argos, Iridium, Globalstar) [40], [28]. Even though these solutions ensure a good coverage of the target area, they have important drawbacks. First, the hardware installed on the animals is very expensive, which makes impossible to equip all the animals in the target area. Second, the energy consumption of these devices is high. That leads to the short lifetime of the nodes, and, thus, makes this kind of solutions unsuitable for the PREDNET project.

1.4 LPWAN networks
As mentioned in Section 1.3.1, one of the peculiarities of the PREDNET project context is the huge target area. The proposed solution has to ensure packet delivery from any position of the entire southern part of the

16

Chapter 1. Global introduction

Kruger park. Thus, well known in the WSN short range solutions (e.g., IEEE 802.15.4 based transceivers) will not be applicable in the framework of the PREDNET project due to the small coverage. Indeed, with a given node density (1.7 animals per square km), the use of short range communication can cause a high number of isolated nodes (the nodes which are not in range of any other node). In this case, the delivery of the urgent alarm messages form the animal in danger to the BTS will be impossible even with multihop strategy. Thus, long range communication technology ensuring extended coverage is required. As mentioned before, cellular network (GSM, NB-IoT, LTE-M) and satellite based solutions are not suitable for the project due to both, high energy consumption and the hardware costs. So, the LPWAN technology [87],[54] seems to be the most appropriate to meet functional requirements of the project. Some examples of the LPWAN technologies will be presented in the next section.

1.4.1 Sigfox
Sigfox [92] is an operator based LPWAN solution. At the physical layer the Ultra Narrow Band (UNB) signals with the DBPSK (Differential Binary Phase Shift Keying) in the Sub-GHz license-free bands are used. The transmission rate is ﬁxed to 100 bits/s which corresponds, thus, to the 100 Hz of occupied signal bandwidth, which results in high receiver sensitivity and long range transmissions. However, the operator-based model is the important limitation for the PREDNET project. Indeed, the coverage of the area is based on the operator decisions. Thus, the possible coverage of the Kruger park by the Sigfox network is not guaranteed. Moreover, message payload is restricted to 12 Bytes, which limits possible extension of the list of sending measurements.

1.4.2 Ingenu (ex. RPMA)
RPMA (Random Phase Multiple Access) is a proprietary technology developed by On-Ramp company renamed to Ingenu [66]. The technology is based on DSSS which uses Gold Code. The used modulation is DBPSK. The time-slotted structure is used. Multiple access is performed by adding a random delay to the transmitting signals, which ensures up to 1000 transmissions per slot. Technology operates in the worldwide available 2.4 GHz ISM band. However, the important drawback of this band for the PREDNET project is high attenuation of the 2.4 GHz signals by water and plants which are abundantly present in the Kruger park.

1.4. LPWAN networks

17

1.4.3 LoRa

LoRa physical layer technology is a proprietary solution based on CSS (Chirp Spread Spectrum) modulation technique. The technology implements also FEC (Forward Error Correction) and CRC (Cyclic Redundancy Check) to ensure high receiver sensitivity (up to −148 dBm) and robustness of communications, which leads to high transmission ranges. Due to the high sensitivity of receiver nodes, LoRa nodes are able to receive signals below the noise ﬂoor. Thus, classic CCA (Clear Channel Assessment) based on energy detection (implemented in IEEE 802.15.4 transceivers, e.g. TI CC2420) cannot be used to detect ongoing transmissions. The proprietary CAD (Channel Activity Detection) based on preamble detection is, thus, developed.
The user is able to tune some communication parameters in order to set the optimal values of communication range, energy consumption and data rate to meet the requirements of the speciﬁc application. The following settings are available:

• Carrier frequency (CF). Depending on used transceiver model, 3 different radio bands are available: 137 − 175 MHz, 410 − 525 MHz and 820 − 1020 MHz, covering not only the most important Sub-GHz ISM bands, but also the radio amateur and license based bands.

• Radio bandwidth (BW). Depending on the transceiver model, it is possible to choose between up to 10 available values, from 7.8 kHz to 500 kHz. Higher values of BW correspond to higher chip rates and lower receiver sensitivities and have lower requirements for stability of the crystal oscillator.

• Spreading Factor (SF). SF is a parameter representing the ratio be-

tween symbol rate (Rs) and used bandwidth (BW), as expressed in

1.1:

BW

Rs = 2SF

(1.1)

Each symbol carries SF bits and chip and sent per second per Hz of

bandwidth. Depending on the transceiver model, SF from 6 to 12 can

be chosen. Higher SF values correspond to more robust communica-

tions but lower data rates. In [88] and [89] the spreading factors are

claimed orthogonal to each other, but [16] shows that the orthogonal-

ity is not perfect.

• Coding Rate (CR). CR is a parameter of FEC, determining the redundancy of the correction code. It can be chosen between 1 and 4 to determine the coding rate as follows:

4

CodingRate = 4 + CR

(1.2)

18

Chapter 1. Global introduction

The CR parameter impacts the transmission bit rate (Rb) as expressed

in 1.3:

4

Rb = SF ∗ Rs ∗ 4 + CR

(1.3)

• Preamble length. It is possible to set the preamble length expressed in number of symbols. The minimal preamble length corresponds to 4.25 symbols. Longer preamble increases the probability of detection of the packet.

• Transmission power. The transmission power can be set between -4 and 20 dBm with a step of 1 dB.
Among different LPWAN solutions, the LoRa radio [1] has been chosen for its ﬂexibility and hardware/software availability. Moreover, this latter allows to deploy a privet network with a custom MAC layer protocol. The large number of available parameters listed above provides potential to develop adaptive communication protocols on top of LoRa physical layer.

1.5 Contributions of this thesis
In our opinion, the interference will be the most important challenge for WSN and IoT in future 10 years. Indeed, interference is directly related to the number of devices and technologies sharing the same bands. Since the number of connected devices is growing, the pernicious impact of the interference will become stronger rapidly with time. An efﬁcient solution to avoid the impact of interference should be then proposed in priority.
In this thesis we answer the following questions:
• What is exactly the impact of the interference on the lifetime of the WSN nodes?
• What are the available parameters of the WSN nodes to adjust dynamically in order to decrease the impact of the interference?
• What are the indicators that can be used to make a right decision regarding the parameters to adjust? The contributions of this thesis can be summarized as follows:
– We evaluate experimentally the impact of the interference on the energy consumption of a WSN node,
– We study the evolution of the interference level depending on time, used channel and position of the WSN node,
– We develop, implement and evaluate an adaptable multihop Cognitive Radio (CR) solution for WSN,
– We develop and evaluate WildMAC - an adaptable MAC layer protocol customized for the wildlife animal tracking in the framework of the LIRIMA PREDNET project.

1.6. Structure of the thesis

19

1.6 Structure of the thesis

The present thesis is organized as follows:
– In Chapter 2 we present an experimental study of the interference impact on the energy consumption, and, thus, the lifetime of the WSN node.
– Chapter 3 is focused on the study of the multi-armed bandit solutions applied to the WSN Cognitive Radio setup. Different solutions are evaluated via both, simulations and WSN hardware implementation. The Thompson sampling based solution is extended to the multihop WSN scenario and evaluated during the EWSN Dependability Competition.
– Chapter 4 presents the WildMAC protocol for LIRIMA PREDNET wildlife animal tracking project. The MAC protocol is evaluated via WSNet simulations based on the parameters obtained during the ﬁeld tests based on the LoRa hardware.
– Finally, Chapter 5 concludes this thesis and presents perspectives for the future works.

21
Chapter 2
Experimental study of interference impact on the energy consumption in WSN
2.1 Chapter introduction
In Chapter 1 we mentioned two main issues for WSNs:
• Interference due to growing number of devices and RF technologies operating on the same radio bands
• Limited available energy due to the impossibility or difﬁculty of battery charging/replacing - the main source of power for WSN nodes
These two problems are related. Indeed, the interference impacts not only the Quality of Service (QoS) and reliability of communications, but also the energy consumption of nodes. Interference causes packet losses. In most of WSN applications, lost packets need to be re-transmitted and every re-transmission is an energy and bandwidth waste. In [85, 109], the authors mention the relationship between interference and energy consumption. To the best of our knowledge, existing works on the impact of the interference on the energy consumption in WSN are mainly based on simulations and theoretical analysis. These methods provide only estimated data based on averaged values of energy consumption from datasheet and cannot take account of the energy consumption behavior of radio devices, which depends on multiple factors. Contrariwise, the hardware measurements provide real and accurate values of the energy consumption. An example of the measured current values is shown in Fig. 2.1 where two independent curves (for radio and microcontroller) are presented. We can notice that the observed level of current is not constant: important ﬂuctuations are present.
In this chapter we present the following contributions: • we developed an experimental measurement platform which enables
to measure the energy consumption of different components of WSN nodes independently as well as the interference level and device state;

22 Chapter 2. Impact of interference on the energy consumption in WSN
FIGURE 2.1: Example of currents of CC2420 radio module (red curve) and MSP430 micro controller (blue curve) mea-
sured by Synergie platform.
• we highlighted and quantiﬁed the relationship between interference and energy consumption from an experimental point of view in both ideal (anechoic) and real (ofﬁce) environments;
• we evaluated experimentally the energy performance of the X-MAC protocol [19];
• we isolated the energy measurements for each component of the WSN node and analyzed exclusively the energy consumption of radio module to exclude the activity of other circuits on the measurements;
• we developed a distributed interference measurement platform and provided the results of a long scale interference measurements (one week).
In Section 2.2 the existing related works will be described. Then, in Section 2.3 the developed measurement platform that we used is described. Section 2.4 details experimental setup and Section 2.5 presents measurements results. In Section 2.6 the long term interference measurements will be described. Then, Section 2.7 concludes this Chapter.
2.2 Motivation and Related works
If the impact of interference on the QoS in WSN is described in literature, the consequence on energy consumption is not studied deeply. In this work, we focus on the impact of interference in 2.4-GHz band on the energy consumption of WSN nodes. The coexistence of several wireless communication technologies in the 2.4-GHz band as Wi-Fi (IEEE 802.11), IEEE 802.15.4, Bluetooth, wireless cameras, among others, as well as other sources of interference (e.g. microwave oven) in a same environment is a serious issue. In [93] and [59], this problem is studied by calculating the packet reception rate (PRR) according to the interference level and the technology selected. In [55], the impact of the interference from Wi-Fi, Bluetooth and microwave ovens on the PER of ZigBee (IEEE 802.15.4) transmitters is studied. The case of buildings was proposed. Besides, M. Petrova et al. present in [82]

2.2. Motivation and Related works

23

an interesting work about the impact of the interference caused by IEEE 802.11g/n technologies on IEEE 802.15.4 networks. In this study, the authors calculate the PRR according to different parameters as the selected IEEE 802.15.4 channel, distance or angle between the nodes and the interference makers. However, in none of these works, the study of the relation between the impact of interference and the energy consumption is done.
In [15], the authors developed the JamLab platform, a low-cost solution to measure and regenerate the interference patterns from real environment. In this work, the energy consumption aspect is related to interference measurements and only simulated using a software solution proposed in [35]. The authors use the PRR as a metric to evaluate the interference impact. However, only ﬁnal PRR values (after taking retransmissions into account) are provided. Thus, the physical layer frame-level precision is not achieved. In our work, we are able to assess the energy consumption of every physical transmission or retransmission. In [38] the authors also use JamLab to test a multi-hop conﬁguration with 11 nodes and two types of interferers (WiFi and microwave oven) simulated by several nodes, providing a relation between energy and interference, but the energy consumption is estimated by a software tool called "Contiki Powertrace built-in power proﬁle" [34] which cannot provide a high level of accuracy since it is based on average consumption values from datasheet.
The authors of [109] propose a solution to measure the interference level in order to decrease its impact on QoS and energy consumption of WSN nodes. However, the quantitative evaluation of the impact of interference on energy consumption of wireless communication is not provided. As in [15], the energy consumption of interference measurements part is only evaluated theoretically, using a model from [58].
In [85], the increase of energy consumption due to interference is illustrated by calculating the excess energy through a home automation scenario that features a simple retransmission without any radio duty cycle (RDC) protocol, which is important to implement in order to increase the battery life. Moreover, the energy consumption of multiple retransmissions is only estimated as a product of the energy of single transmission by the number of transmissions, which we will show it is not necessarily true. None of
these works either experimentally studied the energy consumption of the node nor combined the energy and interference measurements. Our work experimentally studies the interference from real devices in relation with the energy consumed by the nodes of WSN when the retransmissions and the packet loss happen.
Another contribution we propose is the ability to analyze the energy consumption of each single module of the node independently. It allows us to focus exclusively on the energy consumption of radio module - the main source of energy waste in case of communication problems. In contrary to

24 Chapter 2. Impact of interference on the energy consumption in WSN
FIGURE 2.2: Elements of the measurement platform.
the works described in [21], [113], [39], [91], we are able to exclude the energy consumption of other modules which are not pertinent for this study and which can alter the results of measurements.
2.3 Description of the platform
Two sets of devices have been used to complete the experiments of this work: one for the transmission part (TX) and the other for the reception part (RX). Both sets are composed of three different devices each as shown on Fig. 2.2: 1) WSN430 sensor node as the node under evaluation, used in FIT IoT-lab testbed [104]. It contains an MSP430 microcontroller, a CC2420 radio [23], luminosity and temperature sensors, a microphone and 3 LEDs. This node can be controlled by embedded operating systems (OS) for WSN nodes, e.g. Contiki, TinyOS, FreeRTOS or Riot. 2) TelosB mote [83] to measure the interference. It features a similar hardware structure as WSN430, programmed with a Contiki [31] code that reads Received Signal Strength Indicator (RSSI) values at the center frequency of the channel used by the WSN430 nodes. This option is implemented in the CC2420 chip, which provides average values of electromagnetic energy measured during 128 µs intervals. In our case, we were able to achieve an operating rate of 4000 samples per second.
3) Synergie platform [65] developed in IRCICA laboratory to accurately measure the energy consumed by each component of a WSN node. It is based on commercially available low-cost and low-power components and

2.4. Experimental setup

25

FIGURE 2.3: Connection between the WSN430 node and Synergie platform
consists of a 10-bit Analog-to-Digital Converter (ADC) embedded in an ATmega328p microcontroller and ﬁve operational ampliﬁers ZXCT1086 to enable ﬁve independent measurements. To recover the energy measurements from the node, Synergie takes the voltage from the terminals of resistors added before the power supply input of each component of the circuit. The node under evaluation and the measurement platform are connected by the resistor interface which makes the measurement unit compatible with various WSN nodes. The node is also connected to the Synergie platform via General Purpose Input-Output (GPIO) lines in order to synchronize energy measurement data with different states of the device (e.g. beginning of the (re-)transmission, dropped packet). GPIO lines provide this information directly from the code programmed in the micro-controller of WSN430. The measured values and GPIO codes are transmitted to a computer through a serial link. Synergie platform is able to acquire the energy measurement data at the rate of 1500 samples per second for the ﬁve components in parallel. Then, the synchronized energy measurements from the hardware are analyzed to obtain the current required by each component independently. The energy consumption of the node is ﬁnally calculated. For this work, we take the value of the resistors as well as the voltage used in the circuit into account in order to measure the current. These resistors are chosen according to the maximum current value of each electronic component in the node and the characteristics of the ADC included in the micro-controller of Synergie platform. The diagram of the connections between the WSN430 node, the interface of resistors and the Synergie platform is depicted in Figure 2.3.
In the following, we analyze the average values of RSSI and energy consumption for each application layer packet (including retransmissions). These values are calculated between the end of previous packet and the end of current packet which are delimited using GPIO signals. The timestamp values provided by the ExtraPuTTY software [45] are used to estimate the packet duration.
2.4 Experimental setup
In this section, we detail our experimental setup (see Figures 2.4a and 2.4b).

26 Chapter 2. Impact of interference on the energy consumption in WSN
(A)
(B) FIGURE 2.4: Scenarios of the experiment: a) in anechoic
chamber, b) in ofﬁce-type lab environment.
We have carried out a unicast communication between two Contikidriven WSN430 nodes: one sender (TX) and one receiver (RX). Both nodes use Rime protocol [32] on a network layer, X-MAC Radio Duty Cycle (RDC) management strategy and Carrier Sense Multiple Access (CSMA) Medium Access Control (MAC) algorithm as parameters of Contiki communication stack. At physical layer, data are represented as IEEE 802.15.4 [64] packets. The packets are generated every second by TX and include a 19-byte payload, a 6-byte Rime header and 15-byte MAC header (for 16-bit addressing). The total size of each packet is, thus, 40 bytes. Packets to send are stored in a 24-packet capacity buffer.
An example of X-MAC transmission is shown in Fig. 2.5. Following the X-MAC protocol, a transmitting node wakes up when it has a packet to transmit and sends a sequence of beacons (X-MAC preamble) containing the destination MAC address. Once the destination node is awaken, it decodes the MAC address from the beacon and sends an early acknowledgment (ACK) back to TX node to announce its availability to receive the data. TX node can then start to send its data packet, that is acknowledged by RX in case of correct reception. Otherwise, TX repeats the procedure, after a random back-off time, up to 3 times (IEEE 802.15.4). After 3 non-ACKed transmissions, the current data packet is dropped (deleted from the buffer). It is important to mention that the size of an ACK message is 11 bytes [42], which is about 4 times smaller than a data packet and, thus, heaving shorter on-air time, which means lower probability to loose an ACK packet. A 125 ms duty cycle was set as a parameter of X-MAC protocol. It means that RX

2.4. Experimental setup

27

TX node

p

p

p

p

p

RX node

Transmission Reception Radio is active

e

d

A

A

C DATA C

pK

K

time

e

d

A

A

C pK

DATA

C K

time

DATA - Data packet dACK - Data ACK p - XMAC preamble eACK - XMAC early ACK

FIGURE 2.5: Example of a successful X-MAC transmission.

wakes up every 125 ms to check whether there is a packet to receive on the medium or not. By default, in Contiki, both RX and TX nodes are able to receive packets, so, both nodes wake up every 125 ms. To exclude the energy impact of listening activity at the TX side, we disabled this ability for the TX node. The TX node, thus, sends packets periodically (every second), listens to the ACK message and then goes to the sleep mode.
We performed two similar sets of measurements in two different scenarios: in the ﬁrst case, later referred as ideal case, the measurements have been carried out in an anechoic chamber whereas the second experiment, referred as real case, has been completed in an ofﬁce environment of IRCICA laboratory. Every case is detailed in following subsections.
In the following, we will call "primary" the useful link under study.

2.4.1 Ideal case scenario
A ﬁrst set of experiments has been carried out in an anechoic chamber. The ﬁrst objective is to study the behavior of the primary WSN (TX and RX nodes) without any external sources of interference. Then, we add progressively up to three interfering XBee [108] / IEEE 802.15.4 nodes belonging to another (secondary) WSN. These nodes operate in the same channel as the primary TX and RX nodes. The packets sent by the nodes included in the XBee network contain a payload of 100 bytes, which corresponds to the maximum payload size for a packet according to the IEEE 802.15.4 standard, and they are transmitted every 10 ms. This causes serious interference in the channel because of the big size of interfering packets. Indeed, 128 bytes (for payload and header) of a packet transmitted at 250 kbps is equivalent to a slightly more than 4 ms of on-air time. This channel occupation duration is bigger than the time required to send a smaller primary network packet. In Section 2.5, we show the impact of this interference on the primary nodes under evaluation.
The scenario for the experiment in the anechoic chamber is depicted in Figure 2.4a. In this scenario, the distance between TX and RX nodes is 3.5

28 Chapter 2. Impact of interference on the energy consumption in WSN

meters whereas the interfering nodes are situated near the TX, at a distance of 20 centimeters.
2.4.2 Real case scenario
The same primary nodes used in ideal case have been placed in a laboratory environment. In this case, we can ﬁnd some external sources of interference in the building as Wi-Fi Access Points and microwave ovens situated near the test setup. Interfering network is composed by the same number of nodes as in ideal case scenario: three nodes with XBee modules working in the same channel as the main nodes and sending packets every 10ms with 100 bytes of payload.
The distance between TX and RX nodes is once again set to 3.5 meters as shown in Figure 2.4b, but, in this case, the interfering nodes are situated further from TX node. They are ﬁxed in different places between both nodes. The goal of this change of position in the interfering nodes is to study the behavior of the system in a real scenario, with a secondary WSN situated in realistic positions.

2.5 Measurement results
2.5.1 Measurement approach
In this subsection, data measurements are described using the ideal case example. During the experiments, we collect packet statistics on the number of retransmissions (on TX side) and the number of received duplicated packets (on RX side) for each generated application layer packet. This information is collected from the WSN430 node via serial connection to the computer.
Statistics for the anechoic chamber scenario are presented in Table 2.1. Each row in Table 2.1 represents the number of physical transmissions of a single application layer packet on the TX side as follows:

TABLE 2.1: Number of transmissions per packet sent by TX and of received duplicated packets on RX.

’1’ ’2’ ’3’ ’4’ 1 RX 2 RX 3 RX 0 RX

’1’

1 TX

745

’2’

2 TX

203 24

’3’ 3 TX (success) 131 20 1

’4’ 3 TX (fail)

77 10

0 330

2.5. Measurement results

29

1. Packet type ’1’ corresponds to the situation when a packet is sent just once, i.e. well received by RX and the ACK sent by RX is well received by TX. This is the ideal situation.
2. Packet type ’2’ corresponds to two transmissions of a packet, whether a data frame or an ACK is lost.
3. The same logic also applies for Packet type ’3’, TX sends three times the same single packet and TX receives the ACK only after the third transmission.
4. For packet type ’4’, three transmissions are done but TX never receives the ACK. In this case, two options are possible: either one or several data frames are received by RX but the ACK messages are lost or no data frame is well received by RX.
Each column in Table 2.1 corresponds to the number of times a single packet is received by RX as follows:
1. In the columns, packet type ’1’ describes the situation when a packet is received once, the best situation.
2. Packet type ’2’ occurs when a single packet arrives twice to RX due to the loss of an ACK.
3. Then, packet type ’3’ represents one packet received and two duplicates of the same packet.
4. Finally, packet type ’4’ corresponds to "no packet received".
The detection of packet retransmissions, duplicates and losses requires an accurate synchronization. This synchronization between TX and RX statistic data was possible thanks to the timestamps created by the ExtraPuTTY software as well as the signals generated by the GPIO lines connected between WSN430 node and Synergie platform. Then, synchronized values enable us to combine the type of packet on TX and RX sides.
Let us further analyze Table 2.1. In this example, most of the transmitted packets correspond to the combination ’1’-’1’, where the used format is ’TX’-’RX’, i.e. type of packet on TX and in RX sides respectively, for the same single packet (see the Figure 2.6). Then, ’1’-’1’ represents the ideal situation, where a packet sent by TX is correctly received by RX after ﬁrst trial and the corresponding ACK is received by TX. ’2’-’2’ situation appears rarely because of the short length of the ACK frames. We observe as well that the event ’3’-’2’ occurs less often than ’3’-’1’ whereas ’3’-’3’ appeared only once in this example. Indeed, when the channel occupancy signiﬁcantly increases because of interfering signals, the probability to lose a data frame is higher than to lose an ACK, due to the difference of size, i.e. on-air time. As the case of ’3’-’3’, the combination ’4’-’3’ is unlikely to appear since the

30 Chapter 2. Impact of interference on the energy consumption in WSN

Timeout

Case ‘1’-’1’

TX

RX

T1

ACK1

Case ‘3’-’1’

TX

RX

T1

T2

T3 ACK3

Case ‘4’-’1’

TX

RX

T1

T2

T3 ACK3

Case ‘4’-’4’

TX

RX

T1

T2

T3

Timeout Timeout

Timeout

Timeout

Case ‘2’-’1’

TX

RX

T1

T2 ACK2

Timeout

Case ‘2’-’2’

TX

RX

T1

ACK1

T2 ACK2

Case ‘3’-’2’ TX T1 RX
T2 ACK2
T3 ACK3

Case ‘4’-’2’

TX

RX

T1

T2 ACK2
T3 ACK3

Timeout

Case ‘3’-’3’ TX T1 RX
ACK1 T2
ACK2 T3 ACK3
Case ‘4’-’3’ TX T1 RX
ACK1 T2
ACK2 T3
ACK3

Timeout

Timeout

FIGURE 2.6: Examples of combinations of type packets TXRX.
probability to lose three consecutive ACK messages while receiving three duplicated data frames is very small. Therefore, the case of ’4’-’3’ never appeared in this experiment. Finally, ’4’-’4’ corresponds to the situation when the interference in the channel makes the communication impossible. No data packets are received by RX and, then, ACK packets are not sent. We observe that Table 2.1 corresponds to a triangular matrix, since the number of receptions cannot be greater than the number of transmissions.
2.5.2 Ideal case
Synchronized measurements of energy consumption of the radio module, interference level and packet transmission statistics are presented in Fig. 2.7. The total number of packets for each type (’1’, ’2’, ’3’ and ’4’) is indicated in the legend. Fig. 2.7a represents the average energy consumed by the transmitter radio as a function of the average measured RSSI for each packet. These average values are computed during the whole packet transmission (including retransmissions) for each application layer packet.

2.5. Measurement results

31

(A) TX side
(B) RX side FIGURE 2.7: Energy consumption vs RSSI per packet type
in ideal case.
These different packet types of transmissions are presented by different colors (see Table 2.1). We can notice three distinguished sets of points. The ﬁrst set is situated in the zone of low interference (around −95 dBm) and low energy consumption. This set contains the packets successfully received after one transmission and only one packet retransmitted once. These packets were transmitted during the ﬁrst part of the experiment, carried out without any interference (thanks to anechoic chamber ideal characteristics), which explains the high transmission success rate. Second set of points is situated around interference level of −83 dBm. So, the gap between these two sets of points is bigger than 12 dB. No packets are situated in this zone because the interfering XBee node is switched on suddenly. The second set of points corresponds to the cases when one to two nodes interfer. In this case, due to the increased level of interference, we can observe an important number of packets retransmitted once or twice (types ’2’ and ’3’ respectively) as well as dropped packets (type ’4’). Average energy consumption is also signiﬁcantly increased. The third set of points is situated near the interference level of −72 dBm. This set of points is related to the case of three interfering nodes. In this case, we can observe an important number of dropped packets prevailing over other packet types.
A similar graph, presented in Fig. 2.7b, is obtained for measurements on

32 Chapter 2. Impact of interference on the energy consumption in WSN
RX side. In this graph, different numbers of receptions (duplicates) for every packet are represented by different colors (see Table 2.1). As in TX case, three sets of points can be observed. First set is represented by packets received once (without duplication). Second and third sets of points contain important number of never-received packets (packet ’4’). The average interference level corresponding to these sets of points is lower than in TX case (-97, -90, -83 dBm vs -95, -83, -72 dBm respectively) due to an increased distance between the transmitter, interference sources and the interference measuring module at the RX side.
2.5.3 Real case
Similar graphs are provided for the real case. Fig. 2.8 represents different types of packets as a function of energy consumption and measured RSSI on TX and RX sides. As for the ideal case, we can clearly notice three sets of points. Since the conditions of the experiment are different, these sets of points are shifted in RSSI axis in comparison with the set of points in the ideal case. We can also notice a more signiﬁcant variance of RSSI values than in the ideal case due to the presence of signal reﬂections and external sources of interference that we cannot control. The same explanation also holds for the presence of retransmitted and lost packets in the low interference zone, where no XBee module is active. In this case, this zone corresponds to the set of points around −93 dBm RSSI level in Fig. 2.8a. At RX side (see Fig. 2.8b), we can also observe an increased variance of energy and RSSI. Three different sets of points are differentiated, but we can observe a more dispersed scattering of points. However, the gap between the second and the third set (sets situated around −89 dBm and −83 dBm respectively) is not as clear as in the ideal case. This is also due to the external sources of interference.
2.5.4 Measurement analysis
TX side
Fig. 2.9 represents the distribution of different types of packets as well as the total energy consumed by each type of packet during the experiment at the TX side for ideal and real cases respectively. The total energy consumption per type of packet is calculated from the average energy consumption and the number of packets belonging to this type.
From Fig. 2.9, we can notice that the distribution of the total energy consumed by the TX device is different in ideal and real cases. However, the average energy consumed for each packet type is almost the same in both scenarios. The difference of total energy consumption is due to a higher packet loss rate in the real case. We observe also that in the ideal case, half of

2.5. Measurement results

33

(A) TX side
(B) RX side FIGURE 2.8: Energy consumption vs RSSI per packet type
in real case.
the total energy (50.6%) used by the radio module during the entire experiment was related to dropped packets (type ’4’), i.e. the packets which are sent three times but for which the ACK message is never received. According to Table 2.1, there is a high probability that these packets are, indeed, lost. In other words, near 50% of the TX node energy is wasted even though only a quarter of the packets (26.9%) is lost (packet type ’4’). The real case is even worth: we observe 65.1% of wasted energy because of this type of packets. On the other hand, we can notice that for both, ideal and real cases, the ﬁrst-try acknowledged packets (best case) represent almost half of the sent packets (48.5% and 46.2% resp.). Even so this is the largest group of packets, it represents only 17% of the energy consumption in the ideal case and 16.4% in the real case. Another important observation is related to the low percentage of packets successfully acknowledged after three trials (9.8% for ideal and 5.5% for real case). Since the number of transmissions is limited to three, after two trials, the only possible options are success or failure (packet type ’3’ and ’4’ resp.). We can notice that the probability of failure after two unsuccessful transmissions is much higher than the probability of success. That impugns the pertinence of a third transmission. The percentage of success after second trial is also relatively low comparatively to ﬁrst-time acknowledged packets. This questions the efﬁciency of the retransmission policy when interference is high.

34 Chapter 2. Impact of interference on the energy consumption in WSN
(A) Ideal case
(B) Real case FIGURE 2.9: Avg. energy, total number of packets and total
energy per packet type on TX side. RX side Fig. 2.10 represents the distribution of different types of packets as well as the total energy consumed by each type of packet during the experiment at the RX side for ideal case. The total energy consumption per type of packet is calculated from the average energy consumption and the number of packets.
As we can notice from the ﬁgure, the packets type ’4’ do not represent the largest group of packets in contrary to TX side (remember, in case of RX, the packet type signiﬁes the number of duplications for a given application layer packet). Indeed, in our experimental setup the interfering nodes were situated much closer to the TX side. Also, we observe zero packet type ’3’ packets. In fact, duplications happen when the data packet is received

2.5. Measurement results

35

FIGURE 2.10: Energy statistics per type of packet on RX side: average energy, number of packets and total energy
consumption. Ideal case.
correctly by the RX device, but the ACK message is lost, thus the packet is retransmitted. Since the size (and, thus, the on-air duration) of the ACK packet is much shorter than the one of data packet, the probability to lose an ACK packet is smaller than the one for the data packet. In case of packet type ’3’, 3 data packets were received well, whereas 2 small ACK packets were lost, which is unlikely to happen. We can notice also, that the packet type ’4’ corresponds to the type with the biggest energy consumption. It can be caused by the fact that in case of high interference the RX node receives the same retransmitted packet many times, but each time the packet is dropped due to the bad CRC. However, each reception causes additional energy consumption.
In the following we will focus only in the TX part.
2.5.5 Lifetime evaluation depending on RSSI
Based on experimental data, we calculate the relative frequencies for each packet type, with different values of RSSI. In conjunction with the mean energy necessary for a given packet type, this will allow us to determine the lifetime of the node.
Ideal case
According to the measurements of energy consumption and RSSI of the packets obtained on TX side for the ideal case, as shown in Fig. 2.7a, we calculate the distribution of the type of packets (’1’, ’2’, ’3’ and ’4’) over different RSSI windows. Generally, the windows are chosen by starting from −95 dBm and by increasing with a step of 5 dB. In the ideal case, no packets are situated in the [−90, −85] dBm window. Consequently we merge this

36 Chapter 2. Impact of interference on the energy consumption in WSN
FIGURE 2.11: Packet distribution per RSSI window on TX Ideal case.
window with the [−95, −90] dBm window. Fig. 2.11 shows the distribution of the packets with the estimated values of the type frequencies.
In Fig. 2.11, we observe that the type ’1’ packets (in dark blue) in the [−95, −85] dBm window correspond to almost 100% of packets. This is coherent because the experiment was completed in the anechoic chamber. In the [−85, −80] dBm window, the percentage of packets ’1’ decreases considerately but continues to be the predominant type. The number of other packet types is increased signiﬁcantly, especially types ’2’ and ’4’ with a relative frequency of 23.3% and 24.7%, resp. In the [−80, −75] dBm window, packets ’1’ decrease to 23% whereas type ’2’ and, mainly, ’4’ continues to increase. The [−75, −70] dBm window corresponds to the zones where the interference becomes higher due to the activity of the three interfering XBee modules. In this window, the dominant packet is ’4’ with 72.5%, which means that three out of four packets sent with this level of interference are lost despite three transmission trials. We also observe the low percentage of packet type ’3’ in all the windows. This constitutes an important issue because the probability to receive a packet successfully after three tries is low while the energy consumed by this type of packet is very high. At this point, we can conclude that having transmission limit set to three is not efﬁcient in case of high interference, since the relative frequency of success at the third transmission is very small while the relative frequency of failure is high (8.4% and 72.5% respectively for a window of [−75, −70] dBm). So, decreasing the maximal number of transmissions can help to save energy at the price of a small loss in reliability.

2.5. Measurement results

37

The average energy consumption ERSSIk in each RSSI window k has been calculated from the average energy consumption Eavg(n) per type of packet n (obtained experimentally) and from the packet distribution per

RSSI window pn, as

4
ERSSIk = pn · Eavg(n).
n=1

(2.1)

Based on these results, presented in Table 2.2, we can see that the average

energy consumed by a transmitted packet varies according to the level of

interference in the channel. A packet transmitted with an interference level

situated in the [−75, −70] dBm window will consume 4.6 times more in

average than a packet sent when the RSSI value does not exceed -85 dBm.

TABLE 2.2: Avg. energy, maximum number of transmitted packets and lifetime of the node per RSSI window - Ideal
case.

RSSI (dBm)
Avg. energy (mJ) Num. of packets (×106)
Lifetime (days)

-95 to -85
1.84 5.23 46.8

-85 to -80
5.71 1.68 20.2

-80 to -75
6.74 1.42 18.2

-75 to -70
8.47 1.13 16.2

Next, we evaluate the number of packets that TX node is able to send until total discharge of a given battery for every RSSI window to estimate the lifetime of the node. We have chosen a real 850-mAh TCL PL-383562 polymer Li-ion battery modeled by Chen and Rincon-Mora [26]. They give the discharge equation of a real battery and calculate the State-of-Charge (SOC) where the voltage decreases below a threshold which corresponds to near 5% of the SOC. Below that voltage, the circuit is not operational. Then, the maximum amount of energy used to supply circuit corresponds to about 95% of the total energy stored in the battery. Based on this result and the average energy consumption per RSSI window, we calculate the maximum number of packets (with a 19-byte payload) transmitted with respect to the interference level, shown in Table 2.2. Based on the energy stored in the battery, the maximum number of packets transmitted per RSSI window and the average time per packet, it is possible to assess the lifetime of the node depending on the interference level. These results are also presented in Table 2.2. The lifetime of the node decreases dramatically from 46.8 days in the [−95, −85] dBm window to 20.2 days in [−85, −80] dBm (more than by half). The lifetime continues to decrease up to 16.2 days if the interference level in the channel stays in the [−75, −70] dBm window.

Real case
Fig. 2.12 represents the distribution of the different types of packets in the real case for 5 different interference zones from −95 dBm to −70 dBm with the step of 5 dB. It includes the values of this distribution per RSSI level and

38 Chapter 2. Impact of interference on the energy consumption in WSN
FIGURE 2.12: Packet distribution per RSSI window on TX Real case.
per type of packet. In this case, as observed in Fig. 2.8a, there are packets situated in all the ﬁve RSSI windows.
We observe different behaviors of the system in each window. In the zone with a lower interference level ([−95, −90] dBm), the percentage of successful transmissions is 99.3% (packets ’1’, ’2’ and ’3’) whereas the percentage of having a successful transmission with only one try (packet ’1’) is 90.5%. Due to the external sources of interference and radio channel conditions, this percentage is less than in the ideal case, where it reaches 99.7%. The percentage of packets ’1’ decreases in an exponential manner until it reaches 0% in the highest interference zone. At the same time, the percentage of packets ’4’ increases. The amount of packet ’4’ increases slower than the decrease of packet ’1’ because of the presence of types ’2’ and ’3’ in the RSSI windows between −90 dBm and −75 dBm. Other aspect to notice is that packet type ’3’ represents the packet with the smallest percentage of appearance in all the RSSI windows, as in the ideal case. Also, it is important to take into consideration that the percentage of the packet type ’4’ in windows with the maximum of interference, [−80, −75] dBm and [−75, −70] dBm, are 84.7% and 96.2%, respectively. This means that the relative frequency and, thus, the probability to transmit a packet successfully is very low. Then, we should avoid sending the packets when the interference reaches these levels in order to improve the energy efﬁciency.
Now, we calculate the number of packets that TX can send with a 850 mAh battery supplying the node, as in the ideal case. The resulting values of the average energy, the number of packets and the lifetime of the node

2.5. Measurement results

39

TABLE 2.3: Avg. energy, maximum number of transmitted packets and lifetime of the node per RSSI window - Real
case.

RSSI (dBm)
Energy (mJ)
Packets (×106) Lifetime (days)

-95 to -90
2.37 4.04 34.4

-90 to -85
6.29 1.52 18.8

-85 to -80
7.48 1.28 17.1

-80 to -75
8.97 1.07 15.7

-75 to -70
9.54 1.01 15.2

per RSSI window are presented in Table 2.3. We observe that four times more packets can be sent in conditions of low interference in comparison with the highest interference conditions. The maximum lifetime (34.4 days) is more than the double of the expected lifetime in the case of the highest interference level (15.2 days). Finally, if we compare both, ideal and real cases, lifetime of the node is shorter in all the RSSI windows for the real case due to multipath fading and/or the interference caused by the external sources.
2.5.6 Using Wi-Fi as a interfering network
In the previous sections, we used XBee nodes as a source of interference. This kind of nodes uses the same communication technology as the primary network. We performed similar tests but with Wi-Fi as the interfering technology. The conﬁguration for the primary network consisting of a TX and a RX nodes was not changed. The interfering network was organized as follows: 2 laptops with embedded Wi-Fi Network Interface Cards (NIC) were communicating through a Wi-Fi AP installed in the IRCICA TELECOM lab. Both laptops were connected to the AP at the rate of 54 Megabits per second. The PCs were running a "Distributed Internet Trafﬁc Generator" (D-ITG) [17] which contains two parts: sender application (which generates trafﬁc) and receiver application (which receives generated trafﬁc). The laptop running sender application was installed close to the TX node of the primary WSN network under evaluation. This PC was using the IEEE 802.11g standard, so communicating via 2.4 GHz ISM band, and thus was representing a source of interference. However, the second PC was using the IEEE 802.11a standard (5 GHz band). So, the ﬁrst PC was the main source of interference whereas the second PC could not interfere with the primary network. The duration of the experiment was set to 15 minutes. Different levels of interference were represented in this case by different packet generation rates in the Wi-Fi network. The packet generation rate, thus, was increasing periodically (every 2.5 minutes) during the experiment in the following way: in the beginning of the experiment the packet generator was deactivated for the ﬁrst 2.5 minutes, then for the following time periods, the rate was set consecutively to 100, 300, 500, 700, 900 packets per

40 Chapter 2. Impact of interference on the energy consumption in WSN second. The synchronized measurements of energy consumption of the radio module, interference level and packet transmission statistics for both, TX and RX nodes are presented in Fig. 2.13.
(A) TX side
(B) RX side FIGURE 2.13: Energy consumption vs RSSI per packet type
(Wi-Fi scenario). We can notice that the type ’1’ packets are mostly situated on the bottom of the graphs for both, TX and RX nodes, as it was the case in previous tests with the XBee interfering network. The values with a higher packet type are situated in the zone of higher energy consumption, which features the same behavior that in the previous setup. However, we cannot observe any tendency regarding the distribution of packets over the RSSI values (as 3 sets of points observed in the XBee case). Indeed, we can observe the presence of all packet types both in the low and high interference zones. Indeed, since the packets of the interfering Wi-Fi network are sent at much higher data rate than for primary network, the on-air duration of the Wi-Fi packets is often less than the measuring duration of the TelosB node (128 microseconds). Thus, the RF chip of the TelosB node is unable to detect all the interfering packets, which shows the inefﬁciency of the used CSMA approach in this case.

2.6. Long term distributed interference measurements

41

The packet statistics collected at the TX node are presented in Table 2.4. From the table, we can observe the similar repartition of the average energy consumption per packet type as in the previous scenario. It conﬁrms our expectations, since in both cases (for XBee and Wi-Fi interfering networks) we used the same sensor platforms (same RF chips).

TABLE 2.4: Results of energy, number of packets and total energy per type of packet on TX side. Real case.

Packet Type Avg. Energy (mJ) No. packets (%) Total energy (%)

’1’ 1.60 63.0% 29.9%

’2’ 4.76 23.2% 32.6%

’3’ 8.86 7.6% 20.0%

’4’ 9.65 6.1% 17.4%

2.6 Long term distributed interference measurements
In the previous sections, the impact of the interference level on the energy consumption of the nodes was studied. However, in these tests the interference patterns were generated in an artiﬁcial way. As we mentioned, in real case our measurements were impacted also by the external sources of interference (e.g., Wi-Fi network, microwave oven). Thus, in real case we were unable to control the level of interference because it is related to the activity of other users of the ISM band. In this section we analyze the evolution of the interference level in time, space and frequency in the long term for an ofﬁce building environment. To do so, a distributed spectrum sensing platform based on low cost hardware was developed to perform continuous spectrum sensing during one week.
Description of the platform
The platform was based on Digi XBee S1 [107] radio modules. The system was containing two types of devices: end node device with XBee radio driven by Arduino Nano prototyping board [9] with ATMega328 microcontroller and coordinator device represented by a PC connected to the XBee module via serial communication adapter and storing the received measurements data. The photo of the end node is presented on Figure 2.14. The Arduino boards of end devices were conﬁgured in order to send the energy detection commands to the XBee module about every 700 ms. The XBee modules then scan all the 16 IEEE 802.15.4 channels (represented in Figure 2.15) during 30.72 ms each. Thus, the total time of scan is 491.52 ms. After completing the spectrum measurement, the XBee module sends the measured values back to the Arduino which prepares a packet with the collected data to send to the coordinator. Once the packet is ready, the Arduino

42 Chapter 2. Impact of interference on the energy consumption in WSN
FIGURE 2.14: End node forwards it back to the XBee module for further transmission to the coordinator by using the channel which was not affected by the Wi-Fi activity (cf. Figure 2.15).
FIGURE 2.15: IEEE 802.15.4 and IEEE 802.11 channels allocation in 2.4 GHz ISM band. Credits: NI
Experimental setup The previously described system was deployed in the IRCICA’s Telecom platform premises. It is a 90 m2 room with installed telecommunication equipment. The lab is equipped with a Wi-Fi access point (AP) operating on channel 1. Five end nodes were installed in the premises. The placement of the nodes is represented on the map on Figure 2.16. One node was installed next to the access point at the distance of about 30 cm (node 1), one in the middle of the room within a distance of about 5 m from the AP in line of sight (node 4), one a bit further, in a distance of about 8 m in line of sight (node 5), one in the opposite side of the lab at the distance of about 10 meters behind metallic cases of telecommunication equipments, thus without line of sight (node 3). The last node among 5 (node 2) was installed in the next room, thus without line of sight, but the gypsum board wall between rooms does not attenuate strongly the signal. This node was installed also close to the microwave oven in the cafeteria next door. The end nodes were communicating with a coordinator by using Channel 20 which

2.6. Long term distributed interference measurements

43

was not strongly impacted by the interference from the AP (cf. Figure 2.15). The system was started on a Monday morning and it was collecting the
Wi-Fi AP

MW
MC MW MC

Table

3E

4

Table

IRCICA Telecom

Platform

5

S

Table

1
Office
2

Cafeteria

- Walls with windows

- Laptop collecting data

x - Spectrum sensing node

- Sink node
S

E

- Microwave oven

- Metallic cabinet

- Wi-Fi AP

- Metallic case of a telecom equipment

FIGURE 2.16: Node placement map

measurement data during one week. The results of this measurement are described in the next subsection.

Results
One week interference measurements on the IEEE 802.15.4 channel 12, corresponding to the middle of the Wi-Fi channel 1 used by the AP during the test, are depicted in Figure 2.17.

Node 1 Node 2 Node 3 Node 4 Node 5

Monday Tuesday Wednesday Thursday Friday

Night

Night

Night

Night

Week-end

FIGURE 2.17: One week interference measurement.

Monday

This ﬁgure shows the evolution of the RSSI level measured by each of the 5 nodes in time. We can clearly notice the impact of the daily activity of the Wi-Fi users (6 activity peaks corresponding to 6 working days from Monday to next week Monday). During the week-end the access to the

44 Chapter 2. Impact of interference on the energy consumption in WSN
building is restricted and is forbidden at night. So, there are less (or no for the night time) active Wi-Fi users during these periods of time. That is why we can observe a lower level of interference comparatively to the working days. This behavior can be observed clearly for Nodes 2,3,4,5 in the ﬁgure.
We can notice also that each node percepted different levels of interference. Indeed, the nodes are impacted by interference differently depending on their position and neighboring activity. For example, we can observe that the measurements of Node 1 are saturated because of the very close proximity of the Wi-Fi AP - the main source of interference in this context. Moreover, the high interference activity is observed by this node even during the week-end and at night. This is because the AP is periodically sending beacon messages containing the service information about available Wi-Fi networks (e.g. Service Set IDentiﬁer (SSID)) whatever the trafﬁc is.
The percepted level of interference also depends on the used channel. Indeed, different parts of the ISM band are impacted by the interference in a different way. Figures 2.18a and 2.18b show that in average the nodes sense a lower interference level when we shift the channel further from the spectrum occupied by the AP in the lab.
Then, to conﬁrm the observed phenomenon, we carried out a similar test in the EuraTechnologies site of the FIT IoT-LAB platform in Lille. This building is situated far away from the IRCICA lab. So, these two experimental setups are independent. Apart from the FIT IoT-LAB platform, the EuraTechnologies building hosts many ofﬁces, so, it could be considered as ofﬁce environment i.q. the case of the IRCICA lab measurements. However, it is important to take the activity of other users of the platform into account. Indeed, any user of the FIT IoT-LAB platform can book a number of nodes to perform its communication tests at any time. The signals from other sensor nodes will, thus, increase the level of interference.
We carried out our measurements during 6 days (from Tuesday to next week Monday). In contrary to the previous test setup, in the IoT-LAB scenario we used WSN430 devices (previously described in this Chapter) in order to perform the spectrum sensing, which provided us with a better sampling rate. We observed similar results presented in Figure 2.19.
In this experiment, we can also notice that the interference level is not constant during the week. We observe again the interference level peaks during the day and lower RSSI level during the nights and week-end. This behavior is caused by Wi-Fi users activity in the building, as for the case of the previous setup. We can also notice an increased level on interference on Channel 26 during the week-end, which is probably caused by the activity of other sensor nodes of the platform.
The obtained results emphasis the importance of the factors which cause the actual level of interference impacting the WSN node: time, position, used channel and communication environment.

2.6. Long term distributed interference measurements

45

Node 1 Node 2 Node 3 Node 4

Node 5

Monday Tuesday Wednesday Thursday Friday

Night

Night

Night

Night

(A) Channel 24

Week-end

Monday Node 1

Node 2

Node 3

Node 4

Node 5

Monday Tuesday Wednesday Thursday Friday

Night

Night

Night

Night

(B) Channel 26

Week-end

Monday

FIGURE 2.18: Evolution of the percepted level of interference depending the used channel (IRCICA TELECOM Lab)

2.6.1 Discussion
In [36], Dunkels et al. conclude, by using software estimation approach, that the dominating part of energy consumption is due to idle listening. The authors also emphasis the importance of validation of their results by hardware measurements. Our measurements carried out by the Synergie hardware platform conﬁrm the signiﬁcant impact of idle listening. Indeed, as we explained in previous sections, the type ’4’ packets cause the biggest energy consumption for both, TX and RX nodes. In the case of RX, the type ’4’ packets correspond to packet non-reception, so, idle listening. One of the results in [14] is the experimental evaluation of success rate of data packet

46 Chapter 2. Impact of interference on the energy consumption in WSN

Node 1 Node 2 Node 3

Tuesday Wednesday Thursday Friday

Night

Night

Night

Week-end

(A) Channel 12

Monday
Node 1 Node 2 Node 3

Tuesday Wednesday Thursday Friday

Night

Night

Night

Week-end

(B) Channel 24

Monday
Node 1 Node 2 Node 3

Tuesday Wednesday Thursday Friday

Night

Night

Night

Week-end

(C) Channel 26

Monday

FIGURE 2.19: Evolution of the percepted level of interference depending the used channel (FIT IoT-LAB)

transmission after failed X-MAC early ACK handshake. For this case, the authors observe a very low success rate of 2%. In our work, we notice similar results, but in case of successive transmissions after fails. From Fig. 2.9b we observe the success rate of 5.5% after two unsuccessful transmissions (type ’3’ packets). This observation is also related to the second conclusion in [14]: X-MAC preamble interruption after noise perception could decrease signiﬁcantly the packet loss rate (from 50% to 33%). Thus, postponing of the data transmissions towards the periods with low level of interference could increase the success rate and decrease the energy consumption of the nodes. However, this technique is not suitable for some applications with real-time constraints, e.g. an event-driven alarm.

2.7. Chapter conclusion

47

As we show in this chapter, if the accuracy of the spectrum measurements based on CC2420 RF chips (used in WSN430 and TelosB nodes) is sufﬁcient to observe in general the evolution of the percepted interference in a large time scale (during a week), the measurements are still not precise enough to detect the interfering signals for each packet transmission and, so, to perform correctly the CSMA MAC strategy. Thus, it is important to use a feasible RF solution which can guarantee the detection of all interfering signals (even with a very short duration).

2.7 Chapter conclusion
In this work, we have experimentally evaluated the impact of interference on the energy consumption of both receiver and transmitter nodes with the example of X-MAC RDC protocol and CSMA MAC strategy. According to the IEEE 802.15.4 standard, transmitter node can carry out up to three transmissions for each application layer packet. Never acknowledged packets at the transmitter side as well as never received packets on the received side (packet type ’4’ in our study) increase dramatically the energy consumption of the devices and, thus, decrease the lifetime. We show that the maximum number of three transmissions of an application layer packet is not energyefﬁcient because the energy consumed by the transmitter node for three tries is much higher than for one and two tries. Moreover, the results show that the probability to have a well-received packet after two unsuccessful tries is close to 5% in average and very small in highest interference window (zero observed packets) for real case. Then, the third transmission can be removed in order to reach a longer lifetime of the node at the expense of slightly lower packet delivery rate.
We note that the broadly used actual CSMA MAC strategy completed by X-MAC RDC protocol cannot solve this problem and avoid useless and energy inefﬁcient unsuccessful transmissions. Development of a dynamically adaptable MAC protocol is, thus, required. For example, the current RSSI value can be used as input information for the algorithm to dynamically modify the communication parameters (e.g. max. number of retransmissions, CCA threshold, communication channel) before sending a packet.
In our IRCICA TELECOM lab experimental setup for 1 week spectrum sensing, we observed the decrease of the interference level when we shift the used channel to the other side of the ISM band, away from the spectrum occupied by a Wi-Fi AP installed in TELECOM lab. That is because other Wi-Fi APs of the building were situated far from the test site. We can use this observation in this particular context in order to choose the best channel to communicate and also when possible to decide the best positioning of nodes. However, in other cases we can have many sources of interference with a spectrum distributed all over the band in a random way. Moreover,

48 Chapter 2. Impact of interference on the energy consumption in WSN
as we show, the level of interference can change depending on time and position of the nodes. It can also be different depending on the environment. For example, the evolution of the perceived interference level in outdoor urban or rural scenario may be very different from the results presented in this chapter for indoor ofﬁce environment. It will change also depending on the number of users in the WSN network. An adaptive MAC protocol, which can take all these aspects into account and choose the best channel for the WSN nodes at the speciﬁc time and position will then considerably increase the performances of the network.

49
Chapter 3
Thompson Sampling based
Cognitive ratio solution for
Multihop WSN
3.1 Chapter introduction
As we have shown in Chapter 2, the interference level in the ISM bands changes depending on the time, the position of the node and the used channel. Since high level of interference can decrease signiﬁcantly the lifetime of the WSN, it is important to develop an efﬁcient adaptable MAC protocol, which will dynamically choose the least interfered channel based on local RSSI observations. This task could be completed by applying the Cognitive Radio (CR) approach. Even though the CR approach was developed originally to detect and use the whitespaces in the license based spectrum, this approach can be applied to WSNs.As it was mentioned previousely, WSNs mostly operating in ISM bands have to deal with increasing level of electromagnetic interference. At the same time, studies show that the license based spectrum is under-utilized in both spatial and temporal domains [49]. This has led to tremendous research on optimizing the spectrum access methods [4, 110, 3]. The Dynamic Spectrum Access techniques [110] sense the available spectrum in order to ﬁnd less interfered frequency band and use it for transmissions. This technique is used in Cognitive Radio (CR) approach [79]. This approach allow CR devices to use a part of licensed frequency bands under certain conditions. CR is a promising approach to improve spectrum efﬁciency [79, 57]. The main goal of the cognitive radio devices is to use the so-called white spaces (see Fig 3.1) in the licensed spectrum opportunistically [110]. In other words, a cognitive radio device is allowed to access the licensed spectrum as a secondary user where and when it is not being used by the primary user (which has the exclusive right to use it), conditioned on the limited interference [57], which will decrease the occupansy of the saturated ISM bands. In addition, cognitive radio schemes could be utilized in the next generation heterogenious networks where different tiers of the network use spectrum white spaces to transmit [41]. In this scheme, although all network tiers have the same privilege to access the

50

Chapter 3. Thompson Sampling Cognitive ratio solution for WSN

Power

Frequency

Spectrum occupied by primary users

Spectrum holes

Dynamic Spectrum Access (DSA)

Time

FIGURE 3.1: Dynamic spectrum access.

spectrum, it is highly desirable to keep the level of interference in different tiers below a certain threshold. To maintain the desired interference limit, the spectrum access has to be managed precisely. An efﬁcient cognitive radio device must be able to choose the channel with the highest probability of availability and access the channel after sensing the availability of the channel correctly [74].
Cognitive radio approach can be applied not only to the license based bands, but also to the unlicensed spectrum [2, 3]. Indeed, since the usage of ISM bands is not strictly controlled the estimation of the unlicensed spectrum users behavior is important task. The application of the CR technique to the ISM bands allows improving the efﬁciency of the spectrum sharing and facilitate the coexistence of different standards, which is particularly important for energy constrained WSNs (as it is studied in the Chapter 2). It is important to note that in ISM bands all the users have the same priority to access the medium. However, CR approach applied to unlicensed bands will help CR users to avoid the most interfered parts of available spectrum.
In [2] and [68] CR is proposed as a solution for WSN, which leads to the speciﬁc kind of WSN: Cognitive Radio Sensor Networks (CRSN) or Cognitive Radio Wireless Sensor Networks (CR-WSN). Even though Cognitive Radio can enhance the performances of the WSNs, multiple challenges have to be addressed in order to enable the implementation of the CR-WSN. We believe that the most important challenges in the ﬁeld of CR-WSN are spectrum decision process [3] and multihop communications. Indeed, it is impossible to dedicate an interference-free Common Control Channel in ISM bands, since the entire band is always available for other technologies. So,

3.1. Chapter introduction

51

the cooperation between nodes by sharing the observed locally spectrum availability data is complicated. Thus, an independent distributed algorithm, that will decide which channel to use based only on the local observations should be developed. Moreover, in the ISM bands the channel utilization statistics for other users of the band are unknown. Also, in contrary to the Cognitive Radio solutions based on IEEE 802.22-2011 standard [61] (where one-hop communications only are supported) in WSNs multihop capabilities could be required for some applications. Even though the IEEE 802.22 Amendment 2 (2015) describes the possibility of multihop communications, they are possible only through advanced less constrained devices which are not common in WSNs. In the 802.22 standard the receiver (base station) is able to listen to all the available channels simultaneously. So, the end node device can choose any available channel and be sure that the receiver node is listening. However, the WSN nodes are often based on low cost hardware and, thus, do not have the multichannel capabilities. So, it is not trivial to estimate which channel is used at the receiver side on CR-WSN operating in the ISM band.
In this chapter we propose a Thompson sampling based Cognitive Radio approach and we develop a multihop extension for WSN.
The CR spectrum management process consists of four major steps [3]:
• Spectrum sensing. The CR devices have to observe the spectrum activity to be able to analyze it further and make a decision about the channel to use.
• Spectrum decision. The node analyzes results of the spectrum sensing in order to determine the best channel to use. The channel is selected and set at this step.
• Spectrum sharing. In case of the presence of multiple CR users, they have to follow speciﬁc rules in order to share the available spectrum between them.
• Spectrum mobility. The CR users should take account of the fact that other CR users can move from one part of available spectrum to another.
Different approaches exist at the spectrum sensing step [2, 3]. Some examples are presented below:
• Matched ﬁlter. This is optimal solution in the case when the information about primary user is known by CR devices in stationary Gaussian noise. However, a priori knowledge of the primary user channel usage statistics, required for this method, are not always available. Moreover, in the ISM band, it is impossible to guarantee the feasible statistics on the other users of the band, since this kind of bands in

52

Chapter 3. Thompson Sampling Cognitive ratio solution for WSN

available to any device without license. So, this solution is unsuitable in our context.
• Feature detection. This technique uses cyclostationarity of the modulated signals, which can be detected by analyzing a spectral correlation function. Despite the robustness of this method, we cannot use this solution due to its high computational complexity. In fact, the WSN nodes are in general equipped with a low cost low power MCU which do not have sufﬁcient computational resources to perform the feature detection technique.
• Energy detection. The simplest method which can be based on the RSSI measurements provided by the off-the-shelf RF chip. Even though this solution neither requires a high computational capabilities nor requires strong assumptions on knowledge of other user statistics, the performance of this method highly depends on the variations of the noise power level. Thus, false alarms could be detected. However, this issue could be managed by a well deﬁned RSSI threshold. In this work we have chosen this spectrum sensing strategy.
Further in this work we focus mostly on the spectrum decision step. In fact, as in our case, the last two steps could be managed at the spectrum decision level. As mentioned previously, it is impossible to guarantee an interference free Common Control Channel in ISM bands, which enables centralized approaches for spectrum sensing and spectrum decision processes. Thus, each CR-WSN node operating in the ISM bands has to execute a distributed spectrum decision process independently. Development of such an approach is a complex task. Since the energy constrained secondary network devices (or CR-WSN nodes in our context) have to avoid the energy waste, it is crucial to identify the best available channels as soon as possible. A naive approach is to scan the whole band and identify the available channels. Naive approach imposes large latency and energy cost on the network specially when the number of accessible channels is large. In addition, to the best of our knowledge, advantages of multihop CRWSNs running independent distributed spectrum decision techniques has not been exploiting with existing off-the-shelf WSN motes operating in the ISM bands. As a result, ﬁnding the best channel with minimum time and energy cost and apply cognitive scheme to multihop communications are still two open problems.
We address, thus, the non-trivial channel exploration-exploitation dilemma [77] in cognitive radio in an experimental setting and extend it to multihop communications. For the case of classic cognitive radio networks, the problem is deﬁned as follows. A large number of channels are available for potential usage by secondary network users. The channels are occupied with different rates by primary user which has the exclusive right to

3.1. Chapter introduction

53

use it. In our scenario, we apply the cognitive radio approach to the WSN operating in the 2.4 GHz ISM band. Thus, there are neither primary nor secondary devices, since all the users have the same priority to access the channel. However, we assume a 802.11 network as a primary network and a 802.15.4 based network as a secondary network for our tests. On one hand, it allows us to mimic closely the real CR setup. On the other hand, this model can improve the coexistence between different standards using the same ISM band e.g IEEE 802.11 and IEEE 802.15.4. In fact, the IEEE 802.11 signals have a larger bandwidth than the signals of IEEE 802.15.4 networks (22 MHz for IEEE 802.11b/g standard vs 2 MHz for IEEE 802.15.4, as shown on Figure 2.15 in Chapter 2. For IEEE 802.11n the channel bandwidth can be even larger). Moreover, the maximum transmitting power of Wi-Fi APs is much higher than for IEEE 802.15.4 devices (20 dBm in Europe and 30 dBm in United States vs 0 dBm for commercially available TI CC2420 IEEE 802.15.4 transceiver). Clearly, the DSSS technology implemented in IEEE 802.15.4, which helps against narrow band interferers, will not be able to completely protect the WSN transmissions against the Wi-Fi interference due to a much larger band of the IEEE 802.11 signals. Contrariwise, the IEEE 802.11 signals should not be considerably impacted by IEEE 802.15.4 transmissions, since the latter are considered as narrow band interfering signals. Despite the IEEE 802.11 and IEEE 802.15.4 users have the same priority to access the 2.4 GHz ISM spectrum, assuming Wi-Fi as a primary network technology will force the IEEE 802.15.4 users to avoid the parts of the spectrum occupied by Wi-Fi, and, thus, decrease the probability of packet losses. In both scenarios (a classic cognitive radio and CR-WSN case), the problem is to ﬁnd and exploit the channel with the best rate as soon as possible. We model the channel selection process as a multi-arm bandit and compare different learning approaches in terms of throughput in an experimental test-bed. Although modeling the channel selection dilemma as a multi-arm bandit problem has been investigated theoretically in literature, performance of this model in practical implementations is not addressed. The contributions presented in this chapter can be summarized as follows:
• we model the channel selection dilemma (spectrum decision step of the CR spectrum management) as a multi-arm bandit problem applied a Thompson [24] sampling-based approach;
• we provide an experimentation of our approach and compare its performances to the most efﬁcient and simply implementable learning approaches in terms of throughput both by simulation and experiments on real hardware platform.
• we propose a multihop cognitive radio extension together with an experimental proof of concept.

54

Chapter 3. Thompson Sampling Cognitive ratio solution for WSN

RSSI

−55
−60
−65
−70
−75
−80
−85
−90 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 IEEE 802.15.4 channel
FIGURE 3.2: A sample from one week interference measurements. The node is situated in the middle of the lab.
We show that the Thompson sampling formulation ﬁnds the best channel signiﬁcantly faster and the most efﬁcient among the other algorithms in a practical cognitive radio setting. This results in smaller latency in transmission and less energy consumption for channel exploration.
In the next section the existing works in the ﬁeld of the spectrum decision process will be reviewed.
3.2 Related works
Spectrum decision process is analyzed based on a channel model. Channel selection is addressed in [111]. The optimal strategy is derived using a partially observable Markov decision process (POMDP) framework. In this framework, the channel is modeled as a 2N state Markov chain where each state is represented by a binary N-tuple indicating the availability of each channel. The model is reduced into N two-state Markov models where the transition probabilities are constant and based on the statistics of the primary user assuming independence between the channels. However, these assumptions are not realistic. The available channels are not always independent, especially in the ISM bands. Indeed, as we mentioned in the previous section, the Wi-Fi technology uses more bandwidth than IEEE 802.15.4. Thus, the activity on one IEEE 802.11b/g channel impacts four consecutive IEEE 802.15.4 channels at the same time. This case is depicted in Figure 3.2 which represents a sample from the one week interference measurements at the IRCICA TELECOM lab, described in Chapter 2. Recall that in this setup, the Wi-Fi AP was conﬁgured to use the channel 1 with 20 MHz of bandwidth. From the ﬁgure we can clearly notice that the ﬁrst four IEEE 802.15.4 channels are impacted by the Wi-Fi activity, which shows the correlation between WSN channels. Note, that in case of IEEE 802.11n which can

3.2. Related works

55

use 40 MHz channels, eight consecutive IEEE 802.15.4 channels simultaneousely, which represents the half of all the IEEE 802.15.4 channels available in the 2.4 GHz band. Thus, the correlation between the channels used by WSNs could be very strong. In [52] and [53], co-existence of a cognitive radio system a IEEE 802.11 primary network is investigated. The channel is modeled by a four state continuous-time Markov model where the states of the Markov chain represent data packet transmission, acknowledgment transmission, short inter-frame spacing time and idle channel. The transition probabilities are obtained from measurement data. The sojourn time is deﬁned as the time that the process spends in each state and estimated by a generalized Pareto distribution. In [75], a comprehensive study on the holding time distribution for idle and busy channel states in ISM band is provided. This study also suggests generalized Pareto distribution for holding times for all considered bands. However, these works require expensive equipment with high energy consumption, which makes impossible the integration of these approaches in a large-scale WSN (and IoT) networks, containing billions of nodes.
The channel selection dilemma is formulated as a multi-arm bandit in [69] and [51]. Algorithms based on upper conﬁdence bound (UCB) algorithm suggested in [11] are applied to identify the channel with the best availability rate. In [69], the performance of UCB based algorithm in terms of regret is investigated for different numbers of accessible channels. Regret is the throughput missed due to not choosing the best channel compared to an oracle who knows and exploits the best channel from the beginning. In [51], dependencies are considered between the channels and a UCB based algorithm is proposed and analyzed in terms of regret. In [56] a cognitive scenario with two competing networks with jamming capability is considered. The decision on jamming or communicating on the channel for each network is modeled in a Bayesian setting for Thompson sampling. In this adversarial scenario, it is shown that the Bayesian framework outperforms UCB based algorithms. Channel decision problem is modeled as a restless multi-arm bandit problem in [105]. The probing time to ﬁnd an available channel is minimized using the model. The performance of the method is numerically evaluated and is shown to have advantage over previous methods.
As it will be shown in later in this chapter, the multi-arm bandit based solutions could be implemented on real low-cost hardware used in WSNs. Thus, potentially it can be a solution enabling the cognitive radio capabilities for existing and future WSN and IoT networks. However, even though multi-arm bandit model has been studied extensively in theory, the performances of it have not been evaluated yet on real WSN hardware in cognitive radio context. The experimental evaluation and validation of the multi-armed bandit solution is required before the commercial evaluation. Indeed, in practice, the perfect theoretical assumptions are often not valid,

56

Chapter 3. Thompson Sampling Cognitive ratio solution for WSN

which can affect the performance of the algorithms. In our work we implemented the theoretically efﬁcient algorithms in a practical setting of a WSN operating in the 2.4 GHz ISM band. Also, we developed a multihop extension for the proposed scenario, which is, in our best knowledge, was not done yet. The details of the simulations and experiments are given in the following sections.

3.3 Optimal Algorithms for Multi-Armed Bandit
In this section, we formulate the channel selection and exploration dilemma in cognitive a radio context as a multi-arm bandit problem. Then, we describe efﬁcient and simple learning algorithms commonly used to solve the multi-arm bandit problems and adapt them into the cognitive radio context.

3.3.1 Channel selection modeling

In a multi-arm bandit problem, an agent tries to obtain as much reward as possible by playing the most rewarding arm among N arms. However, each arm rewards randomly upon being played according to an unknown distribution. Hence, the objective is to minimize exploration to ﬁnd the most rewarding arm. A policy A is an algorithm that deﬁnes the actions of the agent usually based on the previous observations. We assume nj to be the number of times the jth arm has been played after n steps and µj to be the expected reward of the jth arm. In other words, channel j is found available in average µjnj times in nj measurements. µj is associated with the statistics of the primary user of the channel. The regret of the policy RA is deﬁned to indicate how much reward is lost on the average due to the exploration,

N
RA = µ∗n − µjE(nj)
j=1
where µ∗ = max µj
1≤j≤N

(3.1)

where E(.) indicates the expected value. Minimizing the regret is desirable as it will maximize the average reward.
In [73], authors have derived a logarithmic lower bound for the regret function in a multi-arm bandit problem,

R(n) = ln(n)

N i=1

p∗ − pj D(p∗ ||pj )

+

o(1)

,

(3.2)

where pj are the reward densities of the arms and p∗ is the density of the arm with the maximum average reward (µ∗). D is the Kullback-Leibler divergence between the two densities and o(1) → 0 as n → ∞.

3.3. Optimal Algorithms for Multi-Armed Bandit

57

In cognitive radio setting, the user must ﬁnd the best available channel among N accessible channels as fast as possible considering its time and energy constraints. A naive policy is the exhaustive search for an available channel. Despite its simplicity, this policy incurs large energy and latency overhead on the secondary user network.
Here we assume changes in the statistics of the primary user are slower than the convergence time of the algorithms [72, 56]. To keep track of the primary user statistics, an expiration time can be deﬁned to trigger the search for a new channel. Another criterion to trigger the search for a new channel is to deﬁne a threshold for the number of consecutive unsuccessful channels access after which the user will search for a new channel.
In [11], policies based on upper conﬁdence index are investigated and shown to achieve optimal regret uniformly over time. In this work, we evaluate the performance of learning algorithms in [11] with n-greedy and Thompson sampling, an old algorithm which has recently gained interest in research community due to its simplicity and efﬁciency. In the following algorithms, values for the parameters of the algorithms were analyzed numerically and are assigned to optimize the performance of the algorithms.

3.3.2 Adaptation of UCB approach
Upper conﬁdence bound (UCB) algorithms are based on empirical mean obtained through observations and a term related to the upper conﬁdence interval of the empirical mean. UCB1 based algorithm chooses the channel with the highest upper conﬁdence bound deﬁned as,

2ln(n)

cj = xj +

, nj

(3.3)

where xj, n, nj are the empirical means of channel j states, the total number of channel accesses and the number of times channel j is accessed so far. The values are updated in every iteration based on the observations. The decision criterion is proportional to the empirical average of the obtained rewards and is known as the exploitation factor. A second term triggers the exploration and is inversely proportional to the square root of the number of times the channel is accessed (nj). Further details and proofs of optimality are presented in [11].
We adapted the described above UCB1 algorithm for the cognitive radio context as presented in Algorithm 1.
UCB2 is an improved version of UCB1 is presented in [11]. In UCB2 based channel access, the channel access is divided into epochs. At each epoch, the best performing channel is selected according to the selection criterion deﬁned as:

58

Chapter 3. Thompson Sampling Cognitive ratio solution for WSN

Algorithm 1 UCB1
Parameters: K: total number of accessible channels j: channel index n: total number of channel access nj: number of times channel j is accessed so far sj: current state of the channel j xj: empirical mean of the channel j states cj: UCB1 criterion for selecting the best channel deﬁned in Equa-
tion 3.3 TRANSMIT(): Packet transmission function

Initialization:

1: for all j do

2: if channel j is busy then

3:

sj = 0

4: else

5:

sj = 1

6: end if

7: update xj, cj

8: end for

9: while True do

10: n = n + 1

11: m = arg max{cj}

12: if channel m is busy then

13:

sm = 0

14: else

15:

sm = 1

16:

TRANSMIT()

17: end if

18: update xm, cm

19: end while

cj = xj + aj(n, rj),

(3.4)

where aj(n, rj) is deﬁned as,

aj(n, nj) =

(1

+

α)ln(

τ

en (rj

)

)

2τ (rj)

and,

(3.5)

τ (rj) = (1 + α)rj .

(3.6)

rj is the number of epochs channel j is acceded. In each epoch, the channel is accessed τ (rj + 1) − τ (rj) times. α is a parameter of the model and should be tweaked based on the setting. Theoretical solution does not deﬁne α

3.3. Optimal Algorithms for Multi-Armed Bandit

59

Algorithm 2 UCB2
Parameters: K: total number of accessible channels j: channel index n: total number of channel access rj: number of epochs channel j is accessed so far sj: current state of the channel j xj: empirical mean of the channel j states cj: UCB2 criterion for selecting the best channel deﬁned in Equa-
tion 3.4 aj(n, rj):model parameter deﬁned in Equation 3.5 τ (rj): model parameter deﬁned in Equation 3.6 α: model parameter (optimally set as 0.01 based on simulations) TRANSMIT(): Packet transmission function

Initialization:

1: for all j do

2: if channel j is busy then

3:

sj = 0

4: else

5:

sj = 1

6: end if

7: update xj, cj

8: end for

9: while True do

10: n = n + 1

11: m = arg max{cj}

12: iterations = τ (rj + 1) − τ (rj)

13: for all i=1:iterations do

14:

if channel m is busy then

15:

sm = 0

16:

else

17:

sm = 1

18:

TRANSMIT()

19:

end if

20:

update xm, cm

21: end for

22: end while

speciﬁcally. The value of α is tuned experimentally based on the context. Our simulation results show that α = 0.01 optimizes the performance of the UCB2 algorithm in our experimental setting. Algorithm 2 represents our adaptation of the UCB2 algorithm from [11] to the cognitive radio scenario.
3.3.3 Adaptation of -greedy
Another well-known and simple policy in bandit problems is -greedy algorithm. The agent chooses the most rewarding arm based on the previous observations with probability 1 − and a random arm with probability .

60

Chapter 3. Thompson Sampling Cognitive ratio solution for WSN

0 ≤ ≤ 1 is exploration factor. As shown in [11], decreasing proportion-

ally to

1 n

bounds

the

regret function logarithmically.

The

n-greedy based

channel selection algorithm (

∝

1 n

)

is

given

in

Algorithm

3.

Algorithm 3 n-greedy
Parameters: K: total number of accessible channels j: channel index n: total number of channel access sj: current state of the channel j xj: empirical mean of the channel j states, : exploration factor,

cN

= min{1, d2n }

(3.7)

c, N, d: parameters of the model TRANSMIT(): Packet transmission function

Initialization:

1: for all j do

2: if channel j is busy then

3:

sj = 0

4: else

5:

sj = 1

6: end if

7: update xj

8: end for

9: while True do

10: n = n + 1

11:

if

cN d2n

<

1

then

12:

=

cN d2n

13: else

14:

=1

15: end if

16: Select a random value r in [0, 1]

17: if ≤ r then

18:

m = arg max{xj}

19: else

20:

randomly choose m from {1, · · · , K}

21: end if

22: if channel m is busy then

23:

sm = 0

24: else

25:

sm = 1

26:

TRANSMIT()

27: end if

28: Update xm

29: end while

We found the optimum values for the model parameters, c = 10−4, d = 10−2, N = 5, through simulation.

3.4. Thompson Sampling Based Learning Algorithm

61

3.4 Thompson Sampling Based Learning Algorithm

This section incorporates Thompson sampling into a learning algorithm for channel selection problem. Thompson sampling [24] is best understood in a Bayasian context. Assume we observed Sj, the observation vector, after accessing channel j, nj times. Assuming Bernoulli distribution for each access trial with parameter µj, the parametric likelihood function for observation vector Sj is as follows,

pj (Sj |µj ) = µj tj (1 − µj )nj−tj ,

(3.8)

where tj is the number of successful transmissions on jth channel in n trials. Without loss of generality, we use Beta distribution as the prior for the distribution of parameter µj. This is because Beta distribution is conjugate prior for the likelihood function in Equation (3.8), which simpliﬁes the derivations [29]. Using Bayes rule we can write,

pj (µj |Sj )

=

pj

(Sj

|µj

)

Γ(α+β) Γ(α)Γ(β)

µj

α−1(1

pj (Sj )

−

µj )β−1 ,

(3.9)

where,

∞

Γ(α) =

xα−1e−xdx

0

(3.10)

and α and β are the shape parameters of the Beta distribution; as we assume no prior information on µj, we initialize α = β = 1, which yields to uniform distribution. Substituting (3.8) in (3.9) yields,

Γ(α+β)

pj(µj|Sj) =

Γ(α)Γ(β)
pj (Sj )

µj

tj +α−1 (1

−

µj

)nj

−tj

+β−1.

α = tj + α and β = nj − tj + β can re-write (3.11) as:

pj(µj|Sj) = Cµjα −1(1 − µj)β −1

Γ(α+β)

where C

=

Γ(α)Γ(β)
pj (Sj )

.

Using

the

fact

that,

pj(µj|Sj)dµj = 1,

and the following equality, xα−1(1 − x)β−1dx = Γ(α)Γ(β) Γ(α + β)

(3.11) (3.12) (3.13) (3.14)

62

Chapter 3. Thompson Sampling Cognitive ratio solution for WSN

we obtain,

pj (µj |Sj )

=

Γ(α + β Γ(α )Γ(β

) )

µj

α

−1(1

−

µj )β

−1,

which is the beta distribution with parameters α and β ,

(3.15)

pj(µj|Sj) = beta(α , β ).

(3.16)

The use of the beta distribution facilitates the implementation of the Thompson based solution in the hardware, since the existing mathematical libraries could be used to generate beta distributed random numbers. Thompson sampling Channel selection algorithm is described in Algorithm 4.

3.4. Thompson Sampling Based Learning Algorithm

Algorithm 4 Thompson Sampling Parameters: K: total number of accessible channels j: channel index n: total number of channel access sj: current state of the channel j tj: number of successful transmissions so far xj: empirical mean of the channel j states, α: a priori (beta distribution) model parameter β: a priori (beta distribution) model parameter α : a posteriori (beta distribution) model parameter
αj = tj + αj
β : a posteriori (beta distribution) model parameter
βj = nj − tj + βj
TRANSMIT(): Packet transmission function

Initialization:

1: for all j do

2: if channel j is busy then

3:

sj = 0

4: else

5:

sj = 1

6: end if

7: update tj, nj, αj and βj 8: end for

9: while True do

10: for all j do

11:

sample rj ∼ beta(αj, βj)

12: end for

13: m = arg max{rj}

14: if channel m is busy then

15:

sm = 0

16: else

17:

sm = 1

18:

TRANSMIT()

19: end if

20: update tj, nj, αj and βj 21: end while

63
(3.17) (3.18)

64

Chapter 3. Thompson Sampling Cognitive ratio solution for WSN

As there is no prior information about the channels, we set α = 1 and β = 1 which yields to uniform distribution in [0, 1].

3.5 Performance evaluation

To evaluate the performance of Thompson sampling based solution in comparison with other techniques described in this chapter (UCB1, UCB2, ngreedy), we used three different approaches:

• simulation based on generated channel samples, • simulation over the real channel measurements, • experimentation via real WSN hardware implementation.

For each approach, we used the relative throughput as an evaluation metric. This metric can be derived from the average throughput as follows: the average throughput of algorithm A (T¯A) is obtained as the ratio of the cumulative number of transmitted bits (Nb(A)) to the time passed since the beginning of the transmission t ,

T¯A

=

Nb(A) . t

(3.19)

The relative throughput of A was obtained as the ratio of the average throughput of A to the average throughput of an oracle agent (T¯O) that
always operates on the best channel,

RT A

=

T¯A T¯O

.

(3.20)

Note that the relative throughput of the oracle algorithm is always one. The relative throughput enables us also to estimate the gain in terms of energy saving, which is very important for WSNs. Indeed, the algorithm which helps to ﬁnd the best channel faster will decrease the time spent in the exploration process and transmissions over interfered channels. This will lead to energy savings.
In the following subsections the proposed evaluation approaches will be described along with the experimental setup details.

3.5.1 Simulation based on generated channel samples
The channel observations are modeled and created as Bernoulli trials with parameter µ. In other words, µ is the probability that the channel is available. We created N = 10k samples for 10 channels with µ values randomly distributed in (0, 1). The sampling rate is assumed 1500 samples per second to match the measurements detailed in the next subsection. Algorithms are implemented in MATLAB and numerical analysis are performed to ﬁnd the

3.5. Performance evaluation

65

FIGURE 3.3: Relative throughput comparison of different algorithms on 10 accessible channels (µ = 0.80). Oracle (The user that knows the best channel from the beginning) has
relative throughput 1.
optimum values for the parameters of the algorithms. To do so, simulations are run for 100 iterations and averaged to yield the relative throughput deﬁned by (3.20). Figure 3.3 shows the relative throughput for different algorithms vs. time in seconds. In the exploration phase, the throughput of all algorithms is signiﬁcantly lower than the oracle agent. However, all algorithms eventually ﬁnd the best channel and start exploiting it almost all the time and hence reach a throughput close to the oracle. As seen in the ﬁgure, Thompson sampling based algorithm converges to the best channel in fewer steps than the other policies. In addition, it achieves higher average throughput as it spends less time on exploring the channels and converges to the best channel faster. This results in smaller latency in transmission and lower energy consumption for channel exploration.
3.5.2 Simulation over the real channel measurements
To make our scenario more realistic, we used real-time measurement of the channel to compare the performance of different algorithms. To approximate a realistic scenario, we used TelosB node (IEEE 802.15.4) as the secondary user of a Wi-Fi channel which is considered as the primary user channel, as it was discussed in the Section 3.1. The schematic of the test bench is depicted in Figure 3.4.
The IEEE 802.11g Wi-Fi access point (AP) as well as the primary user client equipment, a laptop with a Wi-Fi interface card, were on the line of sight at the distance of 4.5 m. The Wi-Fi network was conﬁgured to use the channel 6 of Wi-Fi, because it was the available part of the spectrum. The AP was connected by wire (Ethernet) to the PC running the Apache

66

Chapter 3. Thompson Sampling Cognitive ratio solution for WSN

USB
TelosB

Ethernet

30 m

Wi-Fi Link

Web server

Wi-Fi AP

4,5 m

FIGURE 3.4: Schematic of experiment setup.

Laptop

web-server providing the access to a web-page and a big data ﬁle (about 1 GB). The laptop was using the web browser either to perform the websurﬁng, or to download the data ﬁle. The measurements were performed by the TelosB node which was situated near the Wi-Fi AP at the distance of 30 cm. The TelosB node was driven by Contiki operating system running the code to read the Received Signal Strength Indication (RSSI) values of the channel 17 of IEEE 802.15.4 (the center frequency 2435 MHz) that overlaps with the channel 6 of IEEE 802.11 (the center frequency 2437 MHz) used by the AP. The TelosB node was performing measurements at the sampling rate of about 1500 samples per second and sending the measured values to another PC via the USB link.
Figure 3.5 shows the RSSI values received by the secondary user when only one primary user is connected to the network. Figure 3.5(a) shows the RSSI when the user is idle and most of the trafﬁc is coming from the control frames and beacons of the base station. As expected, the channel is available most of the time. In Figure 3.5(b), the user is browsing Internet pages frequently. Figure 3.5(c) shows the RSSI values when the user is downloading a large ﬁle (Approx. 1 GB). Average Availability rate of the channel (µ) is obtained by dividing the number of idle samples to the total number of observations where idle channel was obtained by applying a threshold of −44dBm to the RSSI measurements. The average availability rates for the setting depicted in Figure 3.5(a-c) are µ = 0.99, µ = 0.92, µ = 0.12 respectively.

3.5.3 Experimentation via real WSN hardware implementation
In the ﬁnal evaluation step, we implemented the algorithms in TelosB node to compare their actual performance in real-time. In our setup, we used 3 pairs of laptops occupying 3 orthogonal Wi-Fi (IEEE 802.11g) channels, 1, 6 and 11 overlapping with standard 802.15.4 channels, 12, 17 and 22 respectively. As in cognitive radio scenario, we suppose that the TelosB communicates with a multi-channel receiver, which is able to receive the messages from all available channels simultaneously. The trafﬁc in the Wi-Fi network was generated using "Distributed Internet Trafﬁc Generator" [17] in single ﬂow mode with packet size 500 bytes which is the average packet size on

3.5. Performance evaluation

67

(A)
(B)
(C) FIGURE 3.5: Spectrum measurements: a) No user activity. b) One user browsing the web. c) One user downloading a
large ﬁle.
the Internet [99]. Two TelosB nodes were programmed in Contiki operating system one with a learning algorithm and one as oracle ﬁxed on the best channel. To generate samples of Beta distribution used in Thompson sampling algorithm we used "GEN_SEQUENCE" open-source library [71]. Our experimental setup is shown in Figure 3.6.
To monitor the availability rate of the channel we programmed one TelosB node as monitor which just sampled the channel. The availability rate obtained as the average number of samples the channel is detected available. The RSSI sensitivity of TelosB node was set to −40dbm. This relatively high threshold was set to suppress the RSSI received from other networks present in the building. With this sensitivity, the monitor node registers approximately 90% availability rate for the channels. The availability rate of channel 6 drops to approximately 40% when the trafﬁc generator is activated at 2000pkt/sec and packet size of 500 bytes. The availability rate of the channel 1 drops to approx. 60% when the trafﬁc generator occupies the channel with 500pkt/sec. Channel 11 is left without trafﬁc although the server and client were connected. The monitor shows approx. 90% availability on the channel. Note that the channel occupancy rate is affected by

68

Chapter 3. Thompson Sampling Cognitive ratio solution for WSN

FIGURE 3.6: Experimental setup: 3 pairs of laptops occupy 3 orthogonal channels of Wi-Fi (1, 6, 11)
our trafﬁc, other networks trafﬁc and noise. However, it was roughly constant during the experiment at the given rates.
We programmed two TelosB nodes; one as an oracle which always operates on the channel with the best availability rate. The other node was programmed with the implementation of a learning algorithm to ﬁnd and use the best channel. In our results, we considered an available channel as a successful transmission. In reality, the packet transmission can be disrupted in the middle of the transmission and cause the transmission to fail. However, the collision will affect the throughput results of all algorithms including the oracle the same way. Hence the comparison results would not be affected.
3.5.4 Evaluation results
In this subsection we compare the results obtained by the three approaches presented above for all described techniques: UCB1, UCB2, n-greedy and Thompson. All these three evaluation approaches were adapted to the scenario of three IEEE 802.15.4 channels (described before): 12, 17 and 22, which are situated close to the center frequencies of the three nonoverlapping Wi-Fi channels in the 2.4 GHz ISM band: 1, 6 and 11 (cf. Figure 2.15 in the Chapter 2). In fact, this scenario is quite common in the ofﬁce buildings with multiple Wi-Fi AP installed to cover the entire building. The best practice in this case is to distribute the non-overlapping channels between the APs in the way to get the advantage of the spacial reuse. This will causes different spectrum occupancy in different parts of the building (as in was mentioned in the Chapter 2). Moreover, multiple Wi-Fi networks can operate in all the 3 orthogonal channels within the same area. The channel activity could be different for each network and depends on the user activity. The used trafﬁc generator allows us to reproduce this scenario.

3.5. Performance evaluation

69

(A)
(B)
(C) FIGURE 3.7: Relative throughput on three accessible channels using a) Synthetically generated channel observations. b) Real-time measurements c) Empirical real-time test-bed. The simulation results with the samples generated for the 3 channels with 3 different values µ corresponding to the values measured in the section 3.5.2 (0.99, 0.92 and 0.12 respectively) are presented in the Figure 3.7(a). Then, we used the real-time channel observations instead of synthetically generated data to compare the performance of the learning algorithms. The results are shown in the Figure 3.7(b). As seen in the ﬁgures, the comparison results using real-time data is similar to the results obtained through synthetic channel. The real-time measurements results show that

70

Chapter 3. Thompson Sampling Cognitive ratio solution for WSN

Thompson sampling algorithm reaches 99% of the oracle throughput after 0.26s (390 samples) approx. 57% faster than the next best algorithm ( ngreedy) which achieve the same throughput in 0.60s (900 samples).
Finally, we obtained results for the tests with real hardware implementation. In each set of experiments, we performed 3 experiments where occupancy rate of the channels were permutated. We repeated each experiment 3 times. The relative throughput of each algorithm in each experiment is divided by the oracle performance of the best channel and then averaged over all the experiments for each algorithm.
The results are shown in Figure 3.7(c). As seen in the ﬁgure, similar results are obtained in empirical evaluation of the algorithms where Thompson based method achieves the best performance followed by n-greedy and UCB2 algorithms which performed similarly in this context.

3.6 Multihop extension
In some cases the multihop capabilities of WSN are required. Multihop communications allow to increase the coverage of the network and the reliability when the sink node becomes unreachable in one hop. Enabling the multihop capabilities in CR-WSNs is not a trivial problem. In fact, the main challenge in multihop multichannel wireless networks is to ensure that both sender and receiver nodes use the same channel at the same time. In this section we propose a solution to implement the described before Thompson based cognitive radio solution in a multihop wireless network operating in the 2.4 GHz ISM band.
3.6.1 Test application scenario: EWSN 2016 dependability competition
Our solution was proposed in the framework of the EWSN dependability competition. The competition proposes to all contestants to implement their solutions on the speciﬁcally designed testbed and compare their performance in the interfered environment. The schematic of the experimental case is represented in the Figure
Twelve to ﬁfteen user controlled TelosB nodes were deployed in the different rooms of a building in different rooms on a total surface of about 150m2. The exact number of the nodes as well as their position were unknown in advance. There were three possible categories of user controlled nodes: intermediate (forwarding) node, sensing node and sink node. The sensing node had to monitor the binary light switching activity (on/off states) of a LED controlled according to an unknown binary pattern and report the detected light changes to the sink node. The sink node had to repeat the light pattern of the source node by changing a GPIO pin. The nodes were deployed in the way that the direct communication between

3.6. Multihop extension

71

FIGURE 3.8: Dependability competition scenario description. Credits: Carlo Alberto Boano
the sensing and the sink nodes are impossible even at the maximum transmission power. Thus, the intermediate nodes had to be used as multihop relays. The challenging factor of the dependability competition was the presence of the interfering TelosB nodes which were generating dynamically unknown patterns of interfering signals using JamLab [15]. These nodes were controlled by the organizers of the competition and, thus, were unavailable for contestants. The contestants did not have physical access to the user controlled nodes, but they had to provide a ﬁrmware, which is uploaded automatically on the nodes. The aim of the competition was to propose a multihop communication solution in order to report the measured at the source node light changes to the sink with the best reliability (the total number of correctly reported light changes), lowest latency and overall energy consumption during the entire 35 minutes test slot dedicated to each contestant. During the ﬁrst 20 seconds, no light changes were possible. This time could be used by contesting solutions to adjust the parameters or run a learning algorithm. The platform was measuring the evaluation parameters as follows: the reliability and latency were measured by using the GPIO output from the sink node. The energy consumption was measured at each user controlled node by a speciﬁc hardware platform connected to the TelosB node. This platform was also in charge to program the node with a provided by contestant ﬁrmware. Then, all the individual values of measured energy consumption were summed up in order to obtain the overall energy consumption of the entire system, which was used as an evaluation criterion. The structure of the user controlled node attached to the hardware measurement platform is depicted in Figure 3.9.
In 2016, the dependability competition held in the Institute for Technical Informatics of the Graz University of Technology. The experimental area map is represented in the Figure 3.10.

72

Chapter 3. Thompson Sampling Cognitive ratio solution for WSN

FIGURE 3.9: TelosB node connected to the control platform. Credits: Carlo Alberto Boano
FIGURE 3.10: Experimental area map at the Institute for Technical Informatics of the Graz University of Technology. The source and the sink nodes are represented by dark blue stars, whereas the intermediate nodes are represented as
blue spots. Credits: Carlo Alberto Boano

3.6. Multihop extension

73

We can notice that the sink and the source nodes are situated in different rooms in the opposite corners of the experiment area. The multihop communications are required in this setup. It is important to notice, that the rooms and ofﬁces in this building were separated by thick concrete walls, which makes the communication even more challenging. However, to ensure the repeatable experiments, the surrounding Wi-Fi networks of the building operating in the 2.4 GHz band were disabled during the competition.
3.6.2 Proposed multihop solution based on Thompson sampling approach
As mentioned before, an important challenge for the multihop CR-WSN networks is to ensure that the receiver and transmitter nodes use the same channel at the same time. Indeed, the classical cognitive radio networks suppose a heterogeneous structure. Indeed, it is often assumed that the sink node (or base station) of the cognitive radio network has multichannel capabilities. It means that it is able to constantly listen to all available channels, which ensures that the end node is always on the same channel as the sink node. In the dependability competition scenario, the single radio TelosB nodes are used, which do not have the multichannel capabilities. Thus, if our Thompson sampling based algorithm is implemented "as is" (as it described in section 3.4) in the dependability competition scenario, there is a high probability that the nodes choose the different channels. Indeed, the interference patterns generated by the interferers nodes running JamLab are random. So, the best channel according to the Thompson sampling approach could be different in each node location.
It is important to note that conﬁguring the nodes to send the messages on the locally best channel is inefﬁcient in a multihop scenario, since this channel could be strongly impacted by interference at the receiver side (sink or next hop). If it happens, the message will be lost. We propose thus to use the best channel found locally by each node using Thompson sampling approach to receive the messages to be forwarded. Then the message is forwarded on all the available channels, which will increase the probability of successful reception of the packet by the next hop at the expense of increased energy consumption. The proposed communication mechanism is depicted in Figure 3.11.
As in the previous test scenarios, we propose to limit the number of available IEEE 802.15.4 channels to 3: channel 12, 17 and 22 which are situated close to the center frequencies of the 3 orthogonal Wi-Fi channels in the 2.4 GHz ISM band. The TelosB nodes was conﬁgured as follows:
• The Sensing node was constantly measuring the light conditions. In case of detected change of LED state (on/off), the message containing the current state of the LED (1 or 0 for on and off states respectively)

74

Chapter 3. Thompson Sampling Cognitive ratio solution for WSN

FIGURE 3.11: Proposed Multihop solution
was broadcast following ContikiMAC [33] RDC protocol along with CSMA MAC strategy in each of 3 available channels consecutively. The channel is switched after 0.1 second to let the CSMA strategy the time to perform backoff operations if necessary. The broadcast packets contain also a packet ID to avoid forwarding of the duplicated packets and a TTL value to limit the maximum number of hops. That enables to avoid loops and limits the packet forwarding in the wrong direction. The TTL value was set to 9. Note that ACK messages are not used in the system, since broadcasting strategy is in use.
• Forwarding nodes were running the Thompson sampling cognitive radio algorithm proposed in this chapter in order to determine locally the best channel. During the ﬁrst 20 seconds the initial sensing was performed. The nodes, thus, determine the best channel and switch to this latter in order to listen for incoming packets to forward. The Radio Duty Cycle period for the intermediate nodes was set to 62.5 ms (16 Hz) in the aim of energy savings. Once the message is received, after TTL and packet ID check, the packet is broadcast all 3 available channels during 0.1 second on each (as at the sensing node side). After each physical transmission during the forwarding, the nodes update the channel statistics which are used by Thompson sampling algorithm. This enables the forwarding node to change the current reception channel, which is important, since the generated interference patterns could be changed dynamically during the test. It ensures that the forwarding nodes always listen on the best channel, which minimizes the probability of packet losses.
• The Sink node keeps the radio always on. It listens to all the 3 channels consecutively with a period of 0.018s. If the packet is received on one of the channels, the sink node checks the packet ID value and changes the GPIO status if needed.

3.7. Chapter conclusion

75

3.6.3 Performance evaluation results and discussion
The results for both, preliminary test run and ﬁnal test run are presented in Table 3.1. In contrary to the ﬁnal test scenario, the preliminary test duration was set to 5 minutes. The Wi-Fi access points operating in the building in the 2.4 GHz band were active. Another difference between these test setups is the active debug serial interface. Indeed, this interface is useful to adjust some parameters before the ﬁnal test. However, the use of this interface increases signiﬁcantly the energy consumption of the TelosB nodes. Thus, this interface was disabled during the ﬁnal test.
As we can observe, in both scenarios, we achieved relatively high reliability rates (up to 80%), which conﬁrms the efﬁciency of the ﬁrst implementation of the proposed multihop cognitive radio technique.
The proposed solution could be adjusted depending on the application scenario by modifying available parameters. For example, the reliability could be increased by extending the list of available channels. However, it will lead to the increase of the latency and energy consumption because of the need to broadcast the messages on more channels. On the other hand, the latency can be decreased by decreasing the broadcasting time on each available channel (0.1 second in our case). However, it can decrease the reliability. Similar effect can be obtained by modifying the RDC period.
One of the directions for future work is the development of the solution which will dynamically adapt the described parameters in order to tune the performance of the algorithm in real time.
The solution can be extended to the efﬁcient mesh scenario by adding the number of the best locally deﬁned channels in the header of the message.

3.7 Chapter conclusion
In this chapter, we have studied the performance of the Cognitive Radio as a possible adaptable communication solution for WSN. We observed that a Thompson sampling based solution shows a good performance in terms of reliability even in a non-trivial indoor multihop scenario under jamming. However, the redundancy of the proposed multihop extension (multiple ContikiMAC broadcast transmissions in many channels) could represent a drawback for some solutions, due to possible increased energy overhead.

TABLE 3.1: Evaluation results in multihop scenario

Test scenario Reliability, % Latency, ms Energy, J Test duration, min

Preliminary test

80.00

1710

307

5

Final test

76.74

1260

988

35

