A Relay and Mobility Scheme for QoS Improvement in

IoT Communications

Anderson Augusto Simiscuka
School of Electronic Engineering Dublin City University
anderson.simiscuka2@mail.dcu.ie

Gabriel-Miro Muntean
School of Electronic Engineering Dublin City University gabriel.muntean@dcu.ie

Abstract—Internet of Things (IoT) networks inter-connect
billions of devices of diverse data types such as multimedia and sensor data. These networks need to be able to offer services at high quality levels for a massive amount of users and smart objects. In this paper, we analyse the Quality of Service (QoS) of our Relay and Mobility Scheme for the Internet of Things (REMOS-IOT), which consists of IoT objects that provide several services such as video applications, CCTV monitoring and sensor data, smart gateways, which interconnect the smart devices, and a cloud-deployed platform which is used for resource management and decision-making to improve network quality. This paper presents a novel algorithm which considers QoS, devices locations and service relevance metrics and creates more appropriate clusters for the networked IoT objects in order to improve IoT services quality. Objects are then attached to gateways or relay devices with better network quality, while the performance of poorly operating clusters is also improved.
Keywords—IoT, smart gateways, QoS, performance, mobility.
I. INTRODUCTION
The Internet of Things (IoT) will reach 20.4 billion interconnected devices by 2020 [1]. Several new paradigms for IoT, such as new approaches for mobility, were identified in an IEEE report [2]. These paradigms open up new areas of research and development, crucial for mobile objects such as robots, buses, trains, drones, cars, wearables (e.g. smart watches, wrist bands) and smartphones, which include network performance, concurrency, mobility patterns, realtime coordination, data storage, etc. Metrics related to packet loss, delay, throughput and energy consumption are monitored to assess Quality of Service (QoS) levels of networked services, and are targeted by solutions concerned by performance and decision-making in IoT networks. These solutions employ, among other approaches, adaptation and scheduling techniques, clustering algorithms and connection control mechanisms [3]–[8] in order to achieve improvements in the quality of the offered services.
This paper introduces a novel RElay and MObility Scheme for the Internet Of Things (REMOS-IOT), which extends our previous work, the NETworking Scheme for sMart IoT gatewayS (NETSMITS) [9] by providing mobility support. NETSMITS did not consider mobility in the devices, or using other devices for relay.
As seen in figure 1, REMOS-IOT architecture is composed of IoT devices, smart gateways and a cloud-based IoT Integration Platform (ITINP). Device distances to WiFi access points and LTE base stations are also considered in

Long Range Wireless Network
(e.g. LTE)

IoT Integration
Platform Internet

Smart devices wirelessly connected

Cluster B

Cluster A

1
Smart Gateway
WLAN

Cluster C Relay Node
2 Smart Watch

Cluster D
3 WLAN

Fig. 1. REMOS-IOT Architecture

our solution, as well as other QoS metrics such as delay, packet loss and throughput. The focus of REMOS-IOT is to optimise devices clusters by attaching devices to optimal available smart gateways in the network or to other devices used as relay nodes, bringing better connectivity to devices and improving overall quality in the performance of the clusters. The architecture of REMOS-IOT allows IoT objects to provide and consume several services such as multimedia content and sensorial data. Smart gateways connect the IoT devices while ITINP provides the management of the smart gateways. Network Simulator 3 (NS-3)-based testing demonstrates that REMOS-IOT is capable of increasing communication performance of IoT devices. Our testing scenario contains a smart watch initially connected to a gateway in a WLAN (fig. 1 1). The device moves towards another WLAN (fig. 1 3), however, when moving, the device gets out of the reach of the available access points and uses another device as a relay node to maintain its connectivity (fig. 1 2).
The rest of this paper is organised as follows. Section II presents related works and section III introduces the architecture and algorithms for the proposed REMOS-IOT solution. Section IV presents the setup of our simulations and discusses testing results. The paper is finally concluded with a section with conclusions and future work directions.

II. RELATED WORKS
Diverse QoS, clustering and mobility research works, related to IoT and our solution, are discussed in this paper.
A. QoS in the Internet of Things IoT has important QoS constraints and therefore many
approaches try to improve either network delivery or service

978-1-5386-4328-0/18/$31.00 ©2018 IEEE

quality. Authors in [4] proposed a three-layer QoS scheduling model for service-oriented IoT, including application, network and sensing layers. They employed metrics such as information accuracy, sensing precision, energy consumption, life-time of sensing networks, and cost to measure QoS levels of sensing networks. Authors also introduced a framework to evaluate services, networks, and sensing devices and a decision-making process with optimisation algorithms in each of the layers. Results show that QoS in network and sensing layers provide improved values, and lifetime of nodes was extended.
A performance testing of the LoRa FABIAN, a network protocol stack and experimental network setup, deployed in Rennes, France, was performed in [10]. QoS of the network was measured in different scenarios, with communications between nodes and stations in terms of packet error rate (PER), Received Signal Strength Indicator (RSSI) and Signal to Noise ratio (SNR). Results show that the antenna location and elevation determine the quality of the network. Authors have yet to combine uplink and downlink traffic to verify if there is correlation between measurements, in order to select the best station for a node.
An adaptive congestion control mechanism for the Constrained Application Protocol (CoAP) in IoT was introduced in [11]. An adaptive congestion control was proposed to provide good performance delivery when there is increased packet loss. Authors have enhanced the congestion control mechanism by introducing traffic priority classes, adapting retransmission times and back-off timer.
A predictive algorithm for dynamic virtual machine (VM) allocation in an IoT-Cloud environment was presented in [12]. The algorithm was incorporated into the novel Metascheduler Architecture to provide QoS in Cloud Computing (MACC). VM allocation is designed to conform with QoS constraints such as costs and deadlines. The solution also considered network heterogeneity and the low availability of certain resources. Results showed that the algorithm meets time and cost requirements. However, the authors did not consider admission control, different workload models, and migration of VMs.
Authors of [13] introduced a cost-effective analytical model for a finite capacity queuing system with pre-emptive resume service priority and push-out buffer management scheme. The IoT applications considered produce and consume delay sensitive information; the research focus was to ensure preferential treatment of highest priority delay sensitive data. Results demonstrated improvements in the performance of high priority traffic over low priority traffic and maintaining low blocking probability for high priority traffic. The buffer management scheme helped avoiding data loss of emergency data packets.
B. Clustering in the Internet of Things
Clustering of IoT devices is a common technique to improve network performance and create meaningful connections among IoT devices. Authors in [14] focused on

Service Management
Layer

Business Layer Application Layer
IoT Integration Platform (ITINP)

Computes Utility Function to
locate best SG or RN for objects
Interconnects all SGs and Relay
nodes

Network Layer

Smart

Smart

Smart

Gateway 1 Gateway 2 Gateway 3

Relay Node i

Computes QoS, location and relevance

WiFi / LTE

WiFi / LTE WiFi / LTE WiFi / LTE

Objects ij

Objects Layer

Objects 1j

Objects 2j

Objects 3j

Fig. 2. REMOS-IOT Layered Architecture

lightweight virtualisation technologies for IoT devices, deploying integrated applications and creating a distributed and virtualised ecosystem. Authors compared two frameworks for IoT service provisioning: one based on direct interaction between two cooperating devices and one with a manager supervising the operations between cooperating devices forming a cluster. A testbed was implemented, and testing evaluated power and resource consumption. Results showed that lightweight virtualisation allows for execution of a wide range of IoT applications, while enabling the desired abstraction level with advantages in terms of manageability and scalability.
In [15], authors proposed IoT service composition by using a matching value-based method, with the possibility of services being composed by matching IoT services. The work is focused on the representation, discovery, detection, and composition of services. A cluster-based distributed algorithm was also proposed, with a distributed consensus method in order to improve robustness and trustiness of the decision process. Authors have not covered all the phases of service lifecycle.
A wireless sensor network (WSN) deployment architecture was proposed in [16], supporting multiple sinks and layers in order to achieve seamless integration in cloud communication for IoT. An energy efficient routing protocol was also introduced to support multi-layer cluster head selection and transmission to multiple sinks with a load balancing algorithm that considers load fairness index and average residual energy. Tests shows that the algorithm provides significant benefits in terms of network lifetime, however, the proposed work does not support peer-to-peer (P2P) communications.
A clustering algorithm based on load adjustment for IoT in a SDN architecture was presented in [17]. Data-centres and storage units are centralised by an SDN controller which calculates load-balance, communication cost and energy in a clustering algorithm. The authors showed that the proposed algorithm significantly extends battery life of IoT devices and the amount of data sent increases.

C. Mobility in the Internet of Things
Several approaches were proposed to address IoT mobility-related challenges. A group-based framework with dedicated path planning for emergency guiding based on IoT was introduced in [18]. The framework models the mobility of indoor people to determine and relieve the congestion of corridors and exits, in order to create the shortest evacuation time for each group of nearby people. A prototype was built to verify the feasibility of the framework, demonstrating that it outperforms existing schemes and can achieve the shortest evacuation time.
Authors proposed an agile data delivery framework for service-based applications in smart cities in [19] with focus on multimedia in WSNs and vehicular networks. The approach finds optimal paths for data packets, while satisfying QoS constraints. The solution was assessed in terms of throughput, energy consumption, and delay. Tests showed decreased average message delay and roadside nodes relaying tasks and increased network’s lifetime. Authors have yet to perform tests in a larger network.
A social IoT (S-IOT) architecture and scheme for a group handoff between a mobile access point (AP) to a fixed AP was proposed in [20]. Members in the group can download and share geo-touring information efficiently. A real system was developed using Android and performance was evaluated, with the scheme being able to decrease expense fees, power consumption and service time.
Our work has certain similarities with the IoT schemes discussed in this section, regarding the use of QoS, clustering and mobility for improving the IoT network. However, unlike these works we provide mobility support while also maintaining good QoS and offering performanceaware clustering during content delivery. In this context this paper introduces an innovative scheme that combines mobility and QoS-aware clustering for IoT devices.
III. REMOS-IOT ARCHITECTURE
The proposed solution REMOS-IOT employs an architecture which is composed of clustered IoT objects (things), smart gateways, and the cloud-based IoT Integration Platform (ITINP), as illustrated in figure 2. We consider a five-layer architecture, as presented in [21]. The next sub-sections describe these components are as well as REMOS-IOT important features such as its reputation score, utility functions, and Object Mobility Support and ReClustering algorithms.
A. REMOS-IOT Main Architectural Components
IoT objects (such as smart devices, sensors, smart appliances) support one or more services to other objects. The relevance of an IoT object in relation to another object cluster in a different area, increases with the number of service requests the objects receives from that area. In case of high relevance, the object will be attached to a smart gateway that serves the new area using an available log range wireless connectivity (e.g. LTE). Objects can avail

Fig. 3. The REMOS-IOT Mobility Scheme
themselves of LTE or WiFi according to their position and the availability, performance and position of the access points or base stations. When attached to a smart gateway (SGi) or relay node (RNi), objects receive an ID (Oij) and provide one or more services Sijk, where i indicates the gateway or relay node, j identifies the object and k, the service. Objects are initially connected to the closest smart gateway, forming a distance-defined physical cluster.
However, some object services can be requested by many objects from other clusters, and in such cases, these objects are using their current gateway simply as a bridge for communications. A way of preventing this scenario that affects network performance, is regular reassignment of each object to the most relevant smart gateway. If the most relevant smart gateway is at a distant location, a long range wireless network (e.g. LTE) will be used for object-smart gateway communications, forming a logical cluster. An algorithm that supports objects mobility will find the best balance between location and performance, and consider relay nodes (e.g. smartphones or other devices with internet access) for networking devices while they move.
Smart gateways connect IoT objects, manage admission control, aggregate data and store performance-related information in form of reputation scores. Objects can communicate to each other using the smart gateway that is providing them connectivity. If an object needs to access a service provided by an object connected to a different smart gateway, it will reach the object through the cloud-based ITINP, which all smart gateways are connected to. Smart gateways support mobility and are also aware of objects’ locations and uses them for admission control and reclustering of objects. As illustrated in figure 3, the device O2 moves towards an area with signal from two access points and one base station. Gateways compute the utility function that decides which gateway should reply to the connection request first. For example, device O4 is closer to BS1, but depending on its reputation and BS1 available resources, it could be connected to AP2 instead.
ITINP is a cloud-based server process responsible for creating and managing optimal clusters of IoT objects, attaching these objects to the best available smart gateway. This is achieved by an algorithm that considers objects’

TABLE I SIMULATION SETUP
Parameter Value
Simulator NS-3.24.1 Duration of the Simulation 14s+10s before and after sim. Initial dist. between nodes and antennas 3 metres WiFi and LTE Data Rates 40 Mbps and 100 Mbps
WiFi Standard 802.11ac (40MHz, MCS 9) LTE eNB Antenna Model Type Isotropic Antenna Model
Remote Station Manager ConstantRateWifiManager Mobility Model ConstantVelocityMobilityModel
Speed of Smart Watch user 2 metres per second Smart Watch Bit Rate 2 Mbps
Other Devices Bit Rate 20, 10, 4 Mbps and 800 Kbps

reputations, calculated by a utility function that computes QoS, location and relevance scores (which are constructed and computed at the smart gateways’ Decision Making Unit presented in [9]). ITINP is aware of the locations of the smart gateways, therefore, when an object is unable to connect to the most suitable gateway using a short range wireless connection (e.g. WiFi), the object will either be requested to attach itself to the new gateway using a long range wireless technology, or be requested to connect itself to an available relay node with the ability to access ITINP and connect other devices.

B. Reputation Score and Utility Functions
The reputation score (Uij) is a combination of the QoS, Relevance and Location scores of REMOS-IOT, and is used for admission and performance control (i.e. re-clustering and re-assigning objects to other smart gateways/relay nodes) and identification of objects with low performance. The QoS score (Pij) associated with every object, introduced in [9] and presented in eq. (1), is obtained by normalising the sum of the normalised values of each metric Mx measured per each service that the object provides. Each gateway maintains this score for objects that have been connected to it. The QoS score of a smart gateway (Pi) is also calculated using this formula. The average of all services of an object, in eq. (2), composes the QoS score of the object.

!"#$ =

&' max &'

(1)

!"# = &'((!"#*) (2)

The Relevance score (Rij) of an object, defined in [9], is composed of an array of tuples containing each gateway that has communicated with this object and the percentage of total packet communication exchanged between the gateway and object. For instance, a device has sent and received 400 packets from devices in the same gateway (e.g. SG1) and 600 packets from objects located in a different gateway (e.g. SG2). In this scenario, the object’s relevance score will be Rij={[SG1, 40%], [SG2, 60%]}.
The overall utility function of the reputation score is presented in eq. (3). REMOS-IOT computed the reputation

Algorithm 1 – Object Mobility Support Algorithm
1: if Lij <= threshold 2: SGi broadcasts message with Object ID (Oij) and Lij 3: SGi starts timer 4: SGi waits other SGs and RNs (that can detect Oij) reply 5: Oij receives message broadcasted by SGi. 6: Oij broadcasts message to SGs and RNs 7: SGs and RNs compute Lij received from Oij 8: SGs and RNs send message with Lij and Uij to SGi 9: SGi stops timer 10: SGi selects best Lij 11: if SGi has best Lij 12: end 13: else 14: SGi notifies SG/RN with best Lij 15: SG/RN.attach(Oij) 16: SGi.detach(Oij)

Algorithm 2 – Re-Clustering Low-Performing IoT Objects

Require: Pij, Rij, and Lij per Oij in SGi

1: for each Oij

2: ITINP computes Uij

3:

if SGi is not max Lij

4:

or SGi is not most relevant SG

5:

and most relevant SG Pi >= SGi Pi

6:

Most Relevant SG.attach(Oij)

7:

SGi.detach(Oij)

8:

if Oij has low Uij

9:

and most relevant SG = SGi

10:

Next most relevant SG.attach(Oij)

11:

SGi.detach(Oij)

of an object in relation to a gateway aiming to find a balance between performance, relevance and location of devices, resulting in the normalised Uij score per object. The sum of the weights must be equal 1.
The Location score (Lij) of an object is determined by its RSSI or Reference Signal Received Power (RSRP) in relation to the reachable gateways.

!"#

=

%&

'() max '(

+

%.

/() max /(

+

%0

|2()| max(|2(|)

(3)

The Uij score is used in the re-clustering of lowperforming objects (see Algorithm 1). In order to support mobility in objects, the Lij score is used (see Algorithm 2).

C. REMOS-IOT Algorithms

When objects move, REMOS-IOT employs the Object Mobility Support algorithm, which is a handover algorithm adapted from [22] (see Algorithm 1). The algorithm allows gateways to handle movement detection and attachment prediction. Gateways have a threshold of how low the average RSSI or RSRP (Lij) of objects can be (default: -90 dBm), and the algorithm is triggered once the threshold is reached, in order to find another gateway or relay node.
REMOS-IOT also implements the Re-Clustering algorithm (see Algorithm 2) in the cloud-based ITINP. If the object is not in the closest gateway (strongest signal in Lij), then it will be reattached. The relevance and performance of objects in relation to the gateways (computed in Uij) are also considered for re-clustering.

Fig. 4. Max. throughput results for downlink (%)

Fig. 7. Max. throughput results for uplink (%)

Fig. 5. Packet loss results for downlink (%)

Fig. 8. Packet loss results for uplink (%)

Fig. 6. Delay results for downlink (ms)
IV. PERFORMANCE ANALYSIS
REMOS-IOT was modelled and evaluated using Network Simulator 3 (NS-3) [23]. Model parameters are presented in Table I. The scenario considered contains a WiFi-only smart watch in a smart house with several other smart devices initially connected to a local gateway using a WiFi 802.11ac access point. Two gateways, connected at WiFi APs support communication for three devices with bitrates of 20, 10 and 4 Mbps, simulating video downlink and seven devices at rates 800 Kbps or lower, representing diverse types of mobile and non-mobile IoT devices. The smart watch, which can stream data at a maximum bit rate of 2 Mbps, moves towards another WLAN. However, while moving, the device is out of the reach of the available WLANs and is connected by a relay node with LTE access. The smart watch moved from one gateway to the other after around 6.5 seconds. REMOS-IOT regularly checks the delivery performance and RSSI of devices, and suggests moving devices that are impacting performance to other gateways in the realm of ITINP to improve the quality of data delivery for all the devices.

Fig. 9. Delay results for uplink (ms)
Results show that after the deployment of REMOS-IOT, important performance improvements have been observed in terms of throughput, packet loss and delay, the QoS metrics measured in the study. The smart watch and the devices in the LTE base station benefited from REMOSIOT, while the devices in the WiFi access point did not run any of the proposed algorithms.
The main performance improvements on the downlink are as follows. After the smart watch moved to the relay node and then to the second WLAN, there is a decrease of 11% in average packet loss, almost eliminating it (fig. 5) and average delay decreased from 133ms to 5ms (fig. 6). The other devices in the first WLAN also had gains regarding downlink performance. The average delay decreased from 132ms to 89ms, a gain of 32.5%, average packet loss was reduced to 7%, and as seen in fig. 4, throughput increased in most devices (i.e. the 20 Mbps, 10 Mbps, 4 Mbps devices had throughput increases of 29%, 15%, and 6%, respectively and the seven remaining devices had throughput increases of about 5%). Regarding the device uplink performance, the smart watch throughput had

TABLE II BASELINE COMPARISON

Delay (ms)

Loss (%)

IoT - RTP & REMOS- IoT - RTP & REMOS-

IoT - RTCP IOT IoT - RTCP IOT

Average 204.74

7.53

2.50

0.43

St. Dev.

2.83

0.11

1.34

0.08

Max. Value 211.00

7.75

5.00

0.60

Min. Value 200.00

7.25

1.00

0.35

a small increase of ~2% (fig. 7), while average packet loss (fig. 8) had a slight increase of 0.2%. Average uplink delay (fig. 9) was reduced to 3ms. The other devices have not been impacted much in terms of their average packet loss, delay and throughput, which remained roughly the same. The devices of 20, 10 and 4 Mbps do not have uplink traffic.
The proposed solution is compared to the IoT-RTP and IoT-RTCP adaptive protocols for multimedia transmission in IoT environments [24]. IoT-RTP and IoT-RTCP are adaptive versions of the real-time transport protocol (RTP) and real-time control protocol (RTCP), employing a new approach of dividing the large multimedia sessions into simple sessions with awareness of network status, and were deployed on NS-2. Although we used NS-3 in our simulations, we did not find any significant difference when comparing the schemes. For comparison, we averaged the delays and packet losses over time in all devices in the second WLAN, after the algorithms were applied. The results are available in Table II. Our solution outperforms the other schemes with 96.3% lower delay and 82.6% less packet loss on average.

V. CONCLUSIONS AND FUTURE DIRECTIONS
This paper introduced REMOS-IOT, its algorithms and scores for QoS, Relevance and Location. The solution was tested via NS-3 modelling and simulations and results for uplink and downlink were recorded in terms of throughput, packet loss and delay. The proposed solution outperforms other solutions in terms of packet loss and delay.
Future work includes an optimisation of the relevance score by prioritising different types of services and content.

ACKNOWLEDGMENT
This work was supported by the Irish Research Council and Dublin City University, grant number EPSPG/2015/178, and in part by the European Union’s Horizon 2020 Research and Innovation programme under Grant Agreement no. 688503 (http://newtonproject.eu).
REFERENCES
[1] Gartner, "Press Release: Gartner Says 8.4 Billion Connected "Things" Will Be in Use in 2017, Up 31 Percent from 2016.", Gartner, 2017. [Online]. Available: https://www.gartner.com/newsroom/id/3598917
[2] N. Narendra, P. Misra, “Research Challenges in the Internet of Mobile Things”, IEEE Internet of Things Newsletter, 2016. [Online]. Available: http://iot.ieee.org/newsletter/march-2016/research-challeng es-in-the-internet-of-mobile-things.html [Accessed: 22- Dec- 2017]
[3] G.-M. Muntean, P. Perry, and L. Murphy, “Subjective assessment of the quality-oriented adaptive scheme,” IEEE Trans. Broadcast., vol. 51, no. 3, pp. 276–286, Sep. 2005

[4] L. Li, S. Li, and S. Zhao, “QoS-Aware Scheduling of ServicesOriented Internet of Things,” IEEE Trans. Ind. Informatics, vol. 10, no. 2, pp. 1497–1507, 2014.
[5] G.-M. Muntean, P. Perry, and L. Murphy, “A comparison-based study of quality-oriented video on demand,” IEEE Trans. Broadcast., vol. 53, no. 1, pp. 92–102, Mar. 2007
[6] S. Ezdiani, I. S. Acharyya, S. Sivakumar, and A. Al-Anbuky, “Wireless Sensor Network Softwarization: Towards WSN Adaptive QoS,” IEEE Internet Things J., vol. 4, no. 5, pp. 1517–1527, 2017.
[7] I. Yaqoob, E. Ahmed, I. A. T. Hashem, A. I. A. Ahmed, A. Gani, M. Imran, and M. Guizani, “Internet of Things Architecture: Recent Advances, Taxonomy, Requirements, and Open Challenges,” IEEE Wirel. Commun., vol. 24, no. 3, pp. 10–16, 2017.
[8] E. Ahmed, I. Yaqoob, A. Gani, M. Imran, and M. Guizani, “Internetof-Things-Based Smart Environments: State of The Art, Taxonomy, And Open Research Challenges,” IEEE Wirel. Commun., vol. 23, no. 5, pp. 10–16, 2016.
[9] A. A. Simiscuka, C. H. Muntean, and G.-M. Muntean, “A Networking Scheme for an Internet of Things Integration Platform,” IEEE Int. Conf. Commun. Work. (ICC), pp. 271–276, 2017.
[10] T. Petrić, M. Goessens, L. Nuaymi, L. Toutain, and A. Pelov, “Measurements, Performance and Analysis of Lora FABIAN, a RealWorld Implementation of LPWAN,” IEEE Int. Symp. Pers. Indoor Mob. Radio Commun. PIMRC, pp. 1–7, 2016.
[11] R. Hassan, A.M.Jubair, K.Azmi, and A. Bakar, “Adaptive Congestion Control Mechanism in CoAP Application Protocol For Internet of Things,” Int. Conf. Signal Process. Commun., pp.121–125, 2016.
[12] M. L. M. Peixoto, D. L. Filho, C. Henrique, D. Segura, B. Tardiole, and B. Guazzelli, “Predictive Dynamic Algorithm: An Approach Toward QoS-Aware Service for IoT-Cloud Environment,” IEEE Int. Conf. Comput. Inf. Technol. (CIT), pp. 686–693, 2016.
[13] I. Awan, M. Younas, and W. Naveed, “Modelling QoS in IoT applications,” Proc. - 2014 Int. Conf. Network-Based Inf. Syst. NBiS, pp. 99–105, 2014.
[14] R. Morabito, I. Farris, A. Iera, and T. Taleb, “Evaluating Performance of Containerized IoT Services for Clustered Devices at the Network Edge,” IEEE Internet Things J., vol. 4, no. 4, pp. 1019–1030, 2017.
[15] S. Li, G. Oikonomou, T. Tryfonas, T. M. Chen, and L. Da Xu, “A Distributed Consensus Algorithm for Decision Making in ServiceOriented Internet of Things,” IEEE Trans. Ind. Informatics, vol. 10, no. 2, pp. 1461–1468, 2014.
[16] W. Twayej, M. Khan, and H. S. Al-Raweshidy, “Network Performance Evaluation of M2M with Self Organizing Cluster Head to Sink Mapping,” IEEE Sens. J., vol.17, no.15, pp.4962–4974, 2017.
[17] T. Al-Janabi and H. Al-Raweshidy, “Optimised Clustering Algorithm-Based Centralised Architecture for Load Balancing in IoT Network,” Int. Symp. Wirel. Com. Syst. (ISWCS), pp. 269–274, 2017.
[18] L. W. Chen and J. J. Chung, “Mobility-Aware and CongestionRelieved Dedicated Path Planning for Group-Based Emergency Guiding Based on Internet of Things Technologies,” IEEE Trans. Intell. Transp. Syst., vol. 18, no. 9, pp. 2453–2466, 2017.
[19] F. Al-Turjman, “Energy-Aware Data Delivery Framework for SafetyOriented Mobile IoT,” IEEE Sens. J., vol.18, no.1, pp.470–478, 2017.
[20] C. M. Huang, C. H. Shao, S. Z. Xu, and H. Zhou, “The Social Internet of Thing (S-IoT)-Based Mobile Group Handoff Architecture and Schemes for Proximity Service,” IEEE Trans. Emerg. Top. Comput., vol. 5, no. 3, pp. 425–437, 2017.
[21] A. Al-Fuqaha, M. Guizani, M. Mohammadi, M. Aledhari, and M. Ayyash, “Internet of Things: A Survey on Enabling Technologies, Protocols and Applications,” IEEE Com. Surv. Tut., vol. 17, no. 4, pp.2347-2376, 2015
[22] M. Bouaziz, A. Rachedi, and A. Belghith, “EC-MRPL: An EnergyEfficient and Mobility Support Routing Protocol for Internet of Mobile Things,” 14th IEEE Cons. Com. Net. Conf., pp. 19–24, 2017.
[23] “The NS-3 Network Simulator.” Available: http://www.nsnam.org [24] O. Said, Y. Albagory, M. Nofal, and F. Al Raddady, “IoT-RTP and
IoT-RTCP: Adaptive protocols for multimedia transmission over internet of things environments,” IEEE Access, vol. 5, pp. 16757– 16773, 2017

