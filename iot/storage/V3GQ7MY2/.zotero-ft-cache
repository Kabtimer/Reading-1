Choreographing services for smart cities: smart trafﬁc demonstration
Lei Chen* and Cristofer Englund Research Institutes of Sweden, RISE Viktoria, Lindholmspiren 3A, Gothenburg, SE-41756, Sweden, Emails: lei.chen@ri.se, cristofer.englund@ri.se

Abstract— With the ﬁfth generation (5G) communication technologies on the horizon, the society is rapidly transformed into a fully connected world. The Future Internet (FI) is foreseeable to consist of an inﬁnite number of software components and things that coordinate with each other to enable different applications. Transport systems, as one of the most important systems in future smart cities, will embrace the connectivity, together with the fast development of cooperative and automated vehicles to enable smart trafﬁc. To facilitate this transformation, a service choreography composition platform is under development to enable fast innovation and prototyping of choreography-based Internet of Things (IoT) applications by automatically synthesizing choreographies. Based on the method, a smart trafﬁc application is demonstrated.
I. INTRODUCTION
With on-going digitization process, the society becomes more and more connected. It has been predicted that by the year 2022 [1], 29 billion things will be connected. With the intensive development within 5G, the future city is foreseeable a fully connected system with large number of intelligent things and software components coordinating with each other for different business goals. Thanks to the connectivity, and also the intensive development of autonomous vehicles, future transport is under transformation. Vehicles nowadays have already been equipped with advanced driver support functions that help to make intelligent decisions which leads to the emergence of autonomous vehicles. In the meanwhile as predicted by Gartner [2], by 2020 a quarter billion vehicles will be connected. With access to massive cloud data, vehicles will beneﬁt from cloud-based decision enabled by coordination of large number of services for even smarter decisions. They will also be able to coordinate with intelligent things (e.g., trafﬁc lights, intelligent infrastructure) to enable safe and efﬁcient trafﬁc systems. Because of the strong impact of vehicle connectivity and cooperation within trafﬁc safety, stakeholders including the governments, industry, and academics have been encouraging and pushing forward the development of cooperative intelligent transport systems (C-ITS) along with standardization [3] and numerous pilots such as the C-ITS corridor from the Netherlands to Austria through Germany. C-ITS forms a key enabler in the future smart city eco-system where all types of vehicles and infrastructure are connected and coordinated. Combining local intelligence from vehicles and global intelligence from the cloud, future trafﬁc will be smart to provide safe, efﬁcient and comfort mobility.
For enabling smart trafﬁc, connectivity is the very ﬁrst

step. A further step is coordination which is built upon connectivity and service composition. Future applications will be built on numerous exiting services, and the software production is shifting more to the reuse of third-party software and services in a distributed way. This can be shown by the popularity of Application Programming Interfaces (API) provided by numerous commercial services. Choreography [4] is such a decentralized service composition method that instead of having a central coordination unit, it speciﬁes the participants and the interaction protocol between them in a loose way, thus allowing the decoupling of coordination logic and the real participant tasks. With choreography-based service composition, the coordination logic is speciﬁed globally through a choreography diagram. After synthesis, the logic will be distributed between services to make sure that participants are able to coordinate correctly and coordination will execute locally.
In the case of smart trafﬁc, innovative applications rely heavily on third-party data, services, as well as infrastructure that are managed by different stakeholders. For example, data providers such as Google, HERE and Tomtom collect large amounts of real-time trafﬁc data that can be used for smart navigation and are commercially available. The road infrastructure operators such as the road administration and the city own infrastructure data and make it available for open access. Also, it is anticipated that with the deployment of C-ITS, vehicles are able to communicate and negotiate between themselves and with infrastructure such as trafﬁc lights and trafﬁc signs for optimized trafﬁc. Considering the signiﬁcant challenges faced by increasing mobility, and that smart trafﬁc contributes signiﬁcantly to future smart cities, the choreography-based service composition provides one of the promising methods for mobility and smart trafﬁc. With this in mind, the platform CHOReVOLUTION [5] aims at providing a framework for automated choreography synthesis and deployment that can potentially provide efﬁcient solutions for smart trafﬁc application development. And as one of the use cases, a situation and eco-aware driving application is developed and demonstrated based on the concept of choreography.
The paper is organized as follows. Section II describes the concept of CHOReVOLUTION with further discussion on choreography and the platform. In Section III a smart trafﬁc application that is developed based on the concept of service choreography and built on the CHOReVOLUTION platform is described in detail with functionalities, involved

978-1-5090-5932-4/17/$31.00 ©2017 IEEE

Fig. 1. Architecture and components of the CHOReVOLUTION platform

web services, as well as their coordination logic. Section IV concludes the paper with discussion on future works.
II. THE CHOREVOLUTION PLATFORM
CHOReVOLUTION [6] is a Future Internet oriented service choreography composition platform that provides software tools to enable automatic synthesis, execution and dynamic adaptation of service choreographies. It targets the difﬁculties of traditional service orchestration when facing large number of heterogeneous services and things, as anticipated in the Future Internet. The platform focuses on choreography-based application development and helps the application developers for fast and efﬁcient prototyping of innovative applications based on new services and re-use of third-party services.
A. Choreography
Service choreography is one of the service composition methods in the paradigm of service oriented computing. Unlike service orchestration where a centralized composition is applied, choreography takes a distributed approach, i.e., instead of centralized control, the coordination logic is distributed between services and executed locally. This is especially useful when developing data-centric applications and applications involving heterogeneous services from multiple stakeholders.
The need for service choreography is recognized in the Business Process Modeling Notation (BPMN) 2.0 [7], where extensions are introduced for modeling choreography tasks. Despite the advantages of BPMN 2.0 for modeling choreography, the application development based on service choreography, especially an efﬁcient way for synthesizing, enacting and executing choreography-based application remains a challenge, where the CHOReVOLUTION approach steps in.
B. the CHOReVOLUTION approach
CHOReVOLUTION takes advantages of BPMN 2.0 and goes steps further for an integrated platform for choreography-based application development. It frees the

developers from taking care of the service heterogeneity, security, and dynamicity, allowing them to focus on their professional business tasks. The development process of the platform is illustrated in Fig.1 and discussed in detail as follows.
∙ Business design: The development begins with an application idea based on discussion with domain experts, business managers, and software engineers. The objective of the business, the involved stakeholders such as service providers, end-users, as well as the interaction ﬂow are identiﬁed. This results in a high level design of the application architecture and the business logic. Meanwhile, the related services are registered into the service inventory for later usage.
∙ Choreography modeling: With stakeholders and their interactions deﬁned, during this step the coordination logic is modeled into a choreography diagram. The choreography diagram follows the standardized BPMN 2.0, thus transforming the coordination logic into a machine-readable speciﬁcation that can be synthesized in a later phase. The embedded choreography modeler also makes it very easy for the choreography designers to model the diagram with a drag-and-draw style, thus accelerating the development process.
∙ Synthesis: With choreography diagrams, during synthesis the processor transforms the diagram into a detailed choreography speciﬁcation that can be enacted and deployed. Shown in Fig. 2, this process involves Validation to validate the correctness of the diagram; Projection to generate participant model for each participant; Selection to select services from the inventory and generation of different components that will be used in a later phase for deployment including the binding components, the security ﬁlters, the adapters, and ﬁnally the generation of coordination delegates.
– Binding Components (BC): This component deals with service heterogeneity, e.g., REST, CoAP, SOAP, and enables service interoperability.

decision support for eco-navigation, and powered by the CHOReVOLUTION development platform.
Fig.3 illustrates the main functionalities of SEADA that include
∙ Situation and Eco-Aware Route Planning (SEARP): to provide an eco-route with the minimum estimated emissions,
∙ Situation and Eco-Aware Travel Speed Advisory (SEATSA): to provide real-time eco-speed advisory for eco-navigation,
∙ Congestion WArning and Route Replaning (CWARP): to monitor congestion situation and if necessary plan a new route,
∙ Accident WArning and Route Replaning (AWARP): to monitor trafﬁc accident information and if necessary plan a new route,
∙ Brige Open WArning and Route Replaning (BOWARP): to monitor bridge status (if any) and if the bridge is closed for trafﬁc give warning and plan a new route.

Fig. 2. The choreography synthesis process
– Adapters: This component binds a concrete service to a choreography participant when their interfaces mismatch.
– Security Filter (SF): This components deals with the security issues by ﬁltering the interaction protocol of the services with respect to different security and identify requirements.
– Coordination Delegates (CD): This component deals with the distributed coordination and ensures that interactions between different participant services and things follow the pre-deﬁned one speciﬁed by the choreography diagram.
∙ Enactment and deployment: With a detailed choreography speciﬁcation from the synthesis processor, the Enactment Engine enacts the choreography and deploys it on a cloud infrastructure, thus running the application.
The platform is under intensive development and in parallel, a trafﬁc application is developed for providing econavigation services. Initial results are reported in the following part to showcase the platform.
III. SITUATION AND ECO-AWARE DRIVING APPLICATION (SEADA)
Vehicle connectivity enables innovative trafﬁc services among which eco-routing and eco-navigation are developed for reducing green house gas (GHG) emission from the transport sector. Eco-routing aims to provide the most ecofriendly route with regard to CO2 emission while econavigation aims to provide real-time eco-driving support such as speed advisory, maneuvering support with the purpose to reduce emission. SEADA is such an application for providing eco-friendly driving support. The application is enabled by existing services, newly developed service integrating

Fig. 3. Functionality of the smart trafﬁc application
A. Services
SEADA is built with the CHOReVOLUTION platform by choreographing services. Third-party services are reused for providing essential dynamic trafﬁc situations (DTS) such as routing and real-time trafﬁc information. They are traditional provider services and are usually implemented with REST protocol. In the meanwhile new services are developed to integrate decision processes. Those services need to both consume information and provide information, i.e., they are not traditional providers services. To deal with this, a notation prosumer service (provider and consumer service) is proposed to represent services that have both provider interface and consumer interface. The following part lists both the provider services and prosumer services.
1) Provider services:
∙ DTS-GOOGLE: to request route information from Google route API,
∙ DTS-HERE: to request route information from HERE route API,
∙ DTS-ACCIDENT: to request trafﬁc accident information from the Swedish road administration trafﬁc API,
∙ DTS-CONGESTION: to request congestion information from Tomtom API,
∙ DTS-BRIDGE: to request bridge open status from the city open data API,

∙ DTS-WEATHER: to request weather information from the weather forecast agency.
2) Prosumer services: ∙ SEADA-SEARP: As a provider service to provide eco-
routing support for the clients; as a consumer service to request related information from other services for eco-routing decision, ∙ SEADA-SEATSA: As a provider service to provide estimation of emission and speed for eco-driving; as a consumer service to request real-time trafﬁc information from othr services for estimating emission and speed, ∙ SEADA-TRAFFIC: As a provider service to aggregate all kinds of real-time trafﬁc information and provide it to other services: as a consumer service request from third-party services such as the above-mentioned provider services for real-time trafﬁc information. B. Choreography diagram A choreography diagram describes the coordination logic in detail regarding the acting services and their interaction ﬂow. In the case of SEADA, a complete choreography is designed to address the functionalities shown in Fig. 3 and based on the services introduced in III-A. To be selfcontained, some commonly used notations for choreography modeling are shown in Fig. 4, and for complete and more detail description the readers are referred to the BPMN documentation.
Fig. 4. Choreography diagram notations
A choreography task includes two participants, an initiating and a receiving participant. The initiating participant sends a message to the receiving participant for interaction. A sub-choreography has two or more receiving participants, and more than one choreography tasks are performed therein. Gateways are used for branching the coordination ﬂow. An event gateway is ﬁred based on an event and only one branch will be chosen to continue, while a parallel gateway starts two parallel business ﬂows for simultaneous execution. A choreography always has a starting point and an ending point.
Fig. 5 illustrates the complete choreography diagram. As shown, the choreography is triggered by the driver for navigation request. The client accepts input with origin and destination, and starts a choreography task Get Eco Route and requests eco-route information from SEADASEARP. Next the SEADA-SEARP starts two parallel tasks Get Routes to request route information from DTSGOOGLE and DTS-HERE, respectively. After collecting information about the routes, SEADA-SEARP starts a

Fig. 5. Choreography diagram for SEADA coordination ﬂow
task Get Eco Estimation to request emission and speed estimation from SEADA-SEATSA for the available routes. SEADA-SEATSA then starts a sub-choreography Eco Estimation for estimating emission level and speed for the coming road segments. In order to do this, it needs to interact with services including SEADA-TRAFFIC, DTS-ACCIDENT, DTS-CONGESTION, DTS-WEATHER and DTS-BRIDGE. After the sub-choreography, SEADASEATSA delivers estimation results to SEADA-SEARP through choreography task Set Eco Estimation, and SEADA-SEARP delivers the information to the client with the chosen route through choreography task Set Eco Route. Up to now, an eco-route together with relevant trafﬁc information is ready at the client and navigation starts. While driving, the client requests speed advisory through Get Eco Speed to SEADA-SEATSA. Again, SEADA-SEATSA starts the sub-choreography Eco Estimation for estimating the eco-speed for the coming route segments, and responses to the client through the task Set Eco Speed. In case if any disturbing trafﬁc events appear on the route and re-routing is necessary, the event gateway will lead the ﬂow to the Get Eco Route and initiate a new route planning process.
Fig. 6 illustrates the diagram of sub-choreography Eco Estimation. In order to evaluate the eco-friendliness of a route, SEADA-SEATSA needs real-time trafﬁc information. This is done through the Get Traffic choreography task by interacting with SEATA-TRAFFIC. Upon request, SEADA-TRAFFIC starts parallel tasks includ-

ing Get Congestion, Get Accident, Get Bridge Status, and Get Weather to request real-time information from corresponding provider services. Afterwards, SEADA-TRAFFIC aggregates the trafﬁc information for the route and responses to SEADA-SEATSA through the Traffic Response task.

deployed on cloud for execution. This minimizes the efforts of the developers in dealing with trivial coding tasks and allows them to focus on their real professional tasks.
D. the application
SEADA front-end is developed currently as a web client to work with the choreography that runs in cloud infrastructure. The client constantly requests information from the choreography and interacts with drivers for driving assistance. An illustration is shown in Fig. 8 for bridge-open warning and re-routing, where a new route is generated when the approaching bridge on the current route is detected to be open.

Fig. 6. Sub-choreography diagram for emission and eco-speed estimation
C. Coordination logic As discussed, choreography is a decentralized approach for
service interaction, and the coordination logic is distributed between services. Shown in Fig. 7 the interaction logic among services, there is no centralized coordination units during the coordination process. Instead, CDs, as discussed in the previous section, make sure that interactions between services happen as pre-deﬁned and in a decentralized way.
Fig. 7. Illustration of coordination logic enabled by CDs
While CDs make sure that interactions through messages are done correctly, the real tasks such as construction of relevant messages, decision making algorithms reside in the prosumer services that need to be developed. For example, SEADA-SEARP performs tasks on route choice, SEADASEATSA is responsible for eco-evaluation of a number of routes, and SEADA-TRAFFIC is responsible for preparation of all relevant trafﬁc information.
To facilitate this, while generating the CDs, the platform also generates a code skeleton. With this, the developer simply needs to ﬁll related ﬁelds with the code for decision making and then the choreography can be enacted and

Fig. 8. Illustration of front-end interface of the prototype
IV. CONCLUSIONS AND FUTURE WORKS
A Future Internet oriented service choreography platform is presented. The platform aims at choreographing largenumber heterogeneous services by automatically synthesizing choreography diagrams for cloud deployment. The approach is promising in cooperative intelligent transport systems (C-ITS) where vehicles, infrastructure, and numerous cloud services are connected and cooperated for efﬁcient transport solutions. Based on the platform, an eco-routing and navigation application is developed. Detailed development processes are presented to demonstrate the platform.
The application is currently running with the available platform components and the front-end is developed as a web application. In the future, the application will be developed as a smart phone application for driving assistance. More platform components are expected to be integrated and more functionalities will be included such as interaction with the trafﬁc lights.
ACKNOWLEDGMENT
The work is supported by the Horizon 2020 project CHOReVOLUTION with project number H2020-644178.
REFERENCES
[1] Ericsson, ”Ericsson Mobility Report”, 2016. [2] Gartner, ”Predicts 2015: The Internet of Things”, 2015. [3] L. Chen and C. Englund, ”Cooperative ITS - EU standards to accel-
erate cooperative mobility”, in Proceedings of the 2014 International Conference on Connected Vehicles and Expo (ICCVE), 2014. [4] C. Peltz, ”Web services orchestration and choreography”, in Computer, Vol. 36, No 10, pp. 46 - 52, 2003. [5] CHOReVOLUTION, www.chorevolution.eu. [6] CHOReVOLUTION project team, ”Dynamic and Secure Choreographies of Services”, 2016. [7] Business Process Modeling Notation (BPMN) 2.0, www.bpmn.org.

