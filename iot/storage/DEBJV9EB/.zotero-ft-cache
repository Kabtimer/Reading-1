Congduc Pham, http://cpham.perso.univ-pau.fr

http://www.waziup.eu

Preparing your Raspberry Pi

Get our ready-to-use Raspbian Jessie SD card image
Download from http://cpham.perso.univ-pau.fr/LORA/WAZIUP/raspberrypi-jessie-WAZIUP-demo.dmg.zip
Write the SD card image
Use a class 10 8GB minimum SD card See instruction from https://www.raspberrypi.org/documentation/installation/installing-images for various OS

You can use RaspberryPI 1 model B/B+, RaspberryPI 2 model B, RaspberryPI 3 model B/B+ and RaspberryPI Zero (W). The most important usefull feature is the Ethernet interface for easy Internet connection. You can add WiFi with a WiFi USB dongle to use access-point features. With the RPI3 & RPI0W, WiFi and Bluetooth are embedded on the board.

CS GND

Connect the LoRa radio module
Depending on the model, you can have the « short » or the « long » GPIO interface. However, the SPI pins are at the same location therefore it does not change the way you connect the radio module if you take pin 1 as the reference. Connect the SPI pins (MOSI, MISO, CLK, CS) of the radio to the corresponding pins on the RPI. Note that CS goes to CE0_N on the RPI.

MOSI MISO CLK VCC

Update your gateway Read more instruction at https://github.com/CongducPham/LowCostLoRaGw

Connect your RPI to Internet (with Ethernet sharing from laptop or DHCP router). Use a browser to display the web admin interface: e.g. 192.168.2.8/admin
Login: admin Password: loragateway
Check Internet connection with the Internet button
Select the Gateway update menu and click on New installation (or Full update). Then click on the download icon button
Perform Basic config and Update web admin interface
You can also use the gateway WiFi to display the web admin interface, see page 4
Reboot your RPI with the Reboot button

Your LoRa gateway is ready to receive packets and upload data to clouds

Page 1

Congduc Pham, http://cpham.perso.univ-pau.fr

http://www.waziup.eu

Receiving LoRa messages
Gateway default configuration
Default configuration uses BW=125kHz, CR=4/5, SF=12 This configuration allows for the longest range The gateway uses BW & SF combinations to define 10 LoRa modes. Default mode is then mode 1 Default frequency in each band (868, 900, 433) is indicated in red

Range

Throughput

time%on%air%in%second%for%payload%size%of

LoRa%

105%

155%

205%

255%

mode BW CR SF 5%bytes 55%bytes bytes Bytes Bytes Bytes

1

125 %4/5 12 0.95846 2.59686 4.23526 5.87366 7.51206 9.15046

2

250 %4/5 12 0.47923 1.21651 1.87187 2.52723 3.26451 3.91987

3

125 %4/5 10 0.28058 0.69018 1.09978 1.50938 1.91898 2.32858

4

500 %4/5 12 0.23962 0.60826 0.93594 1.26362 1.63226 1.95994

5

250 %4/5 10 0.14029 0.34509 0.54989 0.75469 0.95949 1.16429

6

500 %4/5 11 0.11981 0.30413 0.50893 0.69325 0.87757 1.06189

7

250 %4/5 9 0.07014 0.18278 0.29542 0.40806 0.5207 0.63334

8

500 %4/5 9 0.03507 0.09139 0.14771 0.20403 0.26035 0.31667

9

500 %4/5 8 0.01754 0.05082 0.08154 0.11482 0.14554 0.17882

10

500 %4/5 7 0.00877 0.02797 0.04589 0.06381 0.08301 0.10093

The default frequency at the end-device depends on the selected band, check and set the operating frequency of the gateway accordingly with the web admin interface.

Uploading to WAZIUP
Use the Clouds menu and Cloud WAZIUP tab
WAZIUP cloud uses FIWARE platform with the possibility to define domains. The domain will be defined as project_name+'-'+organization_name+service_tree, e.g. waziup-UPPA-TESTS if:
- project_name=waziup, - organization_name=UPPA - service_tree=-TESTS
service_tree can be empty otherwise it must begin with a '-'
Device id will be organization_name+service_tree+"_Sensor"+device_addr. For instance, for sensor 6 hosted by UPPA: UPPA-TESTS_Sensor6

Retrieving values from WAZIUP platform
Using curl command
Assuming device 6 from UPPA (service_tree is –TESTS) sends TC/22.5 which means a temperature of 22.5°C
curl -X GET http://api.waziup.io/api/v1/sensors/UPPA-TESTS_Sensor6/measurements/TC

In addition, go to https://dashboard.waziup.io and search for your sensor name (e.g. UPPA-TESTS_Sensor6)

Additional ressources & tutorials

The general github repository https://github.com/CongducPham/LowCostLoRaGw The WAZIUP github https://github.com/Waziup IoT device video https://www.youtube.com/watch?v=YsKbJeeav_M Gateway video https://www.youtube.com/watch?v=peHkDhiH3lE

Page 2

Congduc Pham, http://cpham.perso.univ-pau.fr

http://www.waziup.eu

Using integrated LoRa radio shield/hat

Shield/hat with integrated LoRa radio modules
There are some shields/hats that integrate a LoRa radio, mostly the HopeRF RFM95(W) radio module

Some of these board also propose additional features such as GPS or 2G/3G connectivity which is definitely a good choice if cellular-based Internet is the only solution in isolated areas

We designed a very simple PCB to host the RFM95 radio module with headers for both the Raspberry and Arduino boards. It is freely available at

https://github.com/CongducPham/LowCostLoRaGw#pcbs

Dragino LoRa/GPS hat For Raspberry PI

La Fábrica Alegre Loranga LoRa/2G/3G board

Connecting the gateway to the Internet
The best way to provide Internet to the gateway is through Ethernet via a DSL router for instance
The DSL router can be replaced by a 3G router. This solution is better than using a USB 3G dongle because of power issues.
The Loranga hat mentioned above is a great solution that provides high flexibility of deployment. We have collaboration with the Loranga development team and support of the board is included in the github distribution

External 3G router + Ethernet

3G USB dongle

2G/3G Loranga hat

Loranga hat on an RPI0
Page 3

Congduc Pham, http://cpham.perso.univ-pau.fr

http://www.waziup.eu

Remote ssh access to a deployed gateway
Using the ngrok tunneling tool
A deployed gateway is usually connected to a local LAN, behind a firewall or Internet box without a public IP address. ngrok is a very simple and convenient tunneling tool to enable remote access to such deployed gateways. The latest version of the gateway software already includes the ngrok command in the lora_gateway folder.

Note that this service is normally not intended for permanent remote access to a gateway but rather to allow your tech person to temporarily get access with ssh to a deployed gateway for maintenance or troubleshooting. This is because local access to the gateway is still needed to start the ngrok tunnel, at least with a free ngrok account. If you need permament access, consider a paid ngrok plan or use a VPN server.

To use ngrok you first need to create an account on https://ngrok.com/signup. Then go to https://dashboard.ngrok.com to get your authentication token. On the gateway, log in using ssh and use the text command interface to enter the authentication token and start the ngrok tunnel. The text command interface has been extended with 3 commands:

----------------------------------------------------------* ngrok *--+

M- get and install ngrok

+

N- ngrok authtoken

+

O- ngrok tcp 22

+

---------------------------------------------------------------------+

Use option N to provide (copy/paste) the auth token.

Enter your choice: N ---------------------------------------------------------------------BEGIN OUTPUT Enter you ngrok authtoken jHyeJKIt6jz567jkUGtzgzgstsj_heyetuFR348euyH Authtoken saved to configuration file: /home/pi/.ngrok2/ngrok.yml END OUTPUT Press RETURN/ENTER...

Then use option O to start the ngrok tunnel for enabling remote access with ssh (TCP port 22). You should then see a screen similar to this one:

What you have to provide to your tech person is the URL 0.tcp.ngrok.io and the port number 15938. He will then be able to use ssh to access to your gateway (provided that he has the pi user password) with:
> ssh -p 15938 pi@0.tcp.ngrok.io

Page 4

INFORMATION ON YOUR GATEWAY: default configuration

Connecting to your gateway
Connect your gateway to a DHCP network to have Internet connectivity Your gateway also acts as a WiFi access point. Search for WAZIUP_PI_GW_XXXXXXXXXX Connect to this WiFi, password is loragateway Use a web browser (you can use a smartphone or tablet for instance) and open http://192.168.200.1/admin Login: admin Password: loragateway Test Internet connectivity and update your gateway using Full update as explained in page 1 of the gateway booklet
LoRa radio configuration
LoRa mode 1 (BW=125kHz, CR=4/5, SF=12) This configuration allows for the longest range Frequency is 865.2MHz (CH_10_868)
Configured clouds
Your gateway has 2 enabled clouds defined in clouds.json: WAZIUP cloud and ThingSpeak cloud
The default device: Arduino_LoRa_Simple_temp
The end-device that comes with your gateway also use LoRa mode 1 on 865.2Mhz frequency. Its address is 6. When powered on, the device will send the measured temperature (TC) every 10 minutes

Default configuration of WAZIUP cloud
The project name is waziup The service-tree is empty The organization name is ORG (you must change this field to your organization name, e.g. UPPA) The domain will therefore be waziup-UPPA The device id will be UPPA_Sensor+device_addr, e.g. from sensor 6: UPPA_Sensor6 The username is guest (you should create an account on https://dashboard.waziup.io) The visibility is public When username is guest or organization name is ORG then the gateway id MD5 hash is appended to the device id

Configuration of ThingSpeak cloud
The ThinkSpeak channel is https://thingspeak.com/channels/66794. Data with the default end-device will be on chart 3. It is our Test LORA Gateway channel for testing so there can be a lot of strange value, the last one may be yours The write key is SGSH52UGPVAUYG3S You can create/use your new/existing ThingSpeak channel and enter your own write key using the Cloud menu of the gateway web interface. Then reboot your gateway

Recommended tutorials
The gateway web admin interface https://github.com/CongducPham/tutorials/blob/master/Low-cost-LoRa-GW-web-admin.pdf
The gateway presentation and tutorial https://github.com/CongducPham/tutorials/blob/master/Low-cost-LoRa-GW-step-by-step.pdf

Page 5

