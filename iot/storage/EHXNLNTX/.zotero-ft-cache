Contiki Global IPv6 networks
Antonio Liñán Colina

• Architectures: 8-bit, 16-bit, 32-bit • Open Source (source code openly
available) • IPv4/IPv6/Rime networking • Devices with < 8KB RAM • Typical applications < 50KB Flash • Vendor and platform independent • C language • Developed and contributed by Universities,
Research centers and industry contributors • +10 years development

Zolertia RE-Mote

Zolertia RE-Mote (Zoul inside)
• ARM Cortex-M3, 32MHz, 32KB RAM, 512KB FLASH
• Double Radio: ISM 2.4GHz & 863-925MHz, IEEE 802.15.4-2006/e/g
• Hardware encryption engine and acceleration
• USB programing ready • Real-Time Clock and Calendar • Micro SD slot and RGB colors • Shutdown mode down to 150nA • USB 2.0 port for applications • Built-in LiPo battery charger to work with
energy harvesting and solar panels • On-board RF switch to use both radios over
the same RP-SMA connector • Pads to use an external 2.4GHz over U.Fl
connector, o solder a chip antenna

02-ipv6
examples/zolertia/tutorial/02-ipv6

examples/zolertia/tutorial/02-ipv6/02-border-router

The Border Router (or Edge Router)
A 6LoWPAN Border Router connects a 6LoWPAN network to the Internet, and handles traffic to and from the IPv6/IPv4 and 6LoWPAN networks
examples/zolertia/tutorial/02-ipv6/02-border-router

IEEE 802.15.4/6LoWPAN wireless network

Border Router The node talks to the host via USB, it receives a /64 prefix from tunslip6 and autoconfigures (SLAC). The node handles all the processing and it is limited by its resources
Tunnel interface – tun0 The tunslip6 script creates a tunnel interface, forwards data from IPv6 to/from the 6LoWPAN network via USB

A node as Border-Router
examples/zolertia/tutorial/02-ipv6/02-border-router

IEEE 802.15.4/6LoWPAN wireless network

Slip Radio The host controls the node through the USB, it receive commands to drive the radio
Native Border-Router The host acts as the router, it has more routing and processing capabilities

A node as slip-radio, native Border-Router
examples/zolertia/tutorial/02-ipv6/02-border-router

IEEE 802.15.4/6LoWPAN wireless network

Ethernet Border-Router It uses IP64 (NAT64 + DNS64), allows to communicate to IPv6/IPv4 without an external application

Node + Ethernet (IP64)
examples/zolertia/tutorial/02-ipv6/02-border-router

examples/zolertia/tutorial/02-ipv6/02-border-router

Connect a RE-Mote and run: make border-router.upload && make login
Then connect the Border Router to tunslip6 (don’t close the terminal afterwards!): cd ../../../../../tools make tunslip6 sudo ./tunslip6 –s /dev/ttyUSB0 –t tun01 aaaa::1/64
examples/zolertia/tutorial/02-ipv6/02-border-router

examples/zolertia/tutorial/02-ipv6/02-border-router

examples/zolertia/tutorial/02-ipv6/02-border-router

examples/zolertia/tutorial/02-ipv6/02-border-router

The Border Router’s webserver shows its routing table, useful to verify what devices are in the 6LoWPAN network, its uptime, route to the device, etc.
Take another RE-Mote and program the 01-udp-local-multicast example, now the device will join a PAN (DODAG) and will be accesable from outside networks… remember to verify the channel and PAN ID matches the Border Router!
examples/zolertia/tutorial/02-ipv6/02-border-router

examples/zolertia/tutorial/02-ipv6/02-border-router

tunslip6 IPv6 global interface address Border Router global IPv6 address
UDP node IPv6 global address examples/zolertia/tutorial/02-ipv6/02-border-router

examples/zolertia/tutorial/02-ipv6/02-border-router

examples/zolertia/tutorial/02-ipv6/02-border-router

UDP client and server example
The next example will show how to create an UDP6 6LoWPAN wireless network, with devices acting as UDP clients connecting to an UDP server running in a host… locally or remotely!
At least two RE-Motes will be required (one acting as Border Router, and the other(s) as UDP clients). A single Border Router will be hosted by the lecturer
If you don’t have an IPv6 network, this example will allow you to run the UDP server in your laptop, and forward information to servers and applications on Internet
examples/zolertia/tutorial/02-ipv6/udp-client-and-server

examples/zolertia/tutorial/02-ipv6/udp-client-and-server

examples/zolertia/tutorial/02-ipv6/udp-client-and-server

examples/zolertia/tutorial/02-ipv6/udp-client-and-server

Connect a RE-Mote and program the example: make 03-udp-client.upload && make login
examples/zolertia/tutorial/02-ipv6/03-udp-client-and-server

examples/zolertia/tutorial/02-ipv6/udp-client-and-server

Make sure this address matches the address of the tunslip6 interface
examples/zolertia/tutorial/02-ipv6/udp-client-and-server

Prints the device’s addresses, only link-local at the moment as it haven’t joined a DODAG yet
examples/zolertia/tutorial/02-ipv6/udp-client-and-server

examples/zolertia/tutorial/02-ipv6/udp-client-and-server

examples/zolertia/tutorial/02-ipv6/udp-client-and-server

examples/zolertia/tutorial/02-ipv6/udp-client-and-server

On another terminal run the Border Router examples/zolertia/tutorial/02-ipv6/udp-client-and-server

Verify the UDP client is in our network and responsive examples/zolertia/tutorial/02-ipv6/udp-client-and-server

We can verify using netcat UDP6 packets being received, but content is not decoded. Press the user button and a packet will be sent each time
examples/zolertia/tutorial/02-ipv6/udp-client-and-server

examples/zolertia/tutorial/02-ipv6/udp-client-and-server

examples/zolertia/tutorial/02-ipv6/udp-client-and-server/UDP-MQTT-server.py

examples/zolertia/tutorial/02-ipv6/udp-client-and-server/UDP-MQTT-server.py

examples/zolertia/tutorial/02-ipv6/udp-client-and-server/UDP-MQTT-server.py

examples/zolertia/tutorial/02-ipv6/udp-client-and-server/UDP-MQTT-server.py

examples/zolertia/tutorial/02-ipv6/udp-client-and-server

examples/zolertia/tutorial/02-ipv6/udp-client-and-server/UDP-IFTTT-server.py

http://ifttt.com

examples/zolertia/tutorial/02-ipv6/udp-client-and-server/UDP-IFTTT-server.py

https://ifttt.com/maker
examples/zolertia/tutorial/02-ipv6/udp-client-and-server/UDP-IFTTT-server.py

examples/zolertia/tutorial/02-ipv6/udp-client-and-server/UDP-IFTTT-server.py

examples/zolertia/tutorial/02-ipv6/udp-client-and-server/UDP-IFTTT-server.py

examples/zolertia/tutorial/02-ipv6/udp-client-and-server/UDP-IFTTT-server.py

examples/zolertia/tutorial/02-ipv6/udp-client-and-server/UDP-IFTTT-server.py

Conclusions
You should be able to:
• Connect 6LoWPAN Wireless networks • Understand how a Border Router Works • Understand how networks are created using RPL • Create UDP applications • Use ping6 to assert the device’s connectivity • Use the Border Router’s webservice to check routing table • Forward data from UDP applications to other services and
protocols such as MQTT and IFTTT

Antonio Liñán Colina
alinan@zolertia.com antonio.lignan@gmail.com
Twitter: @4Li6NaN LinkedIn: Antonio Liñan Colina github.com/alignan hackster.io/alinan

